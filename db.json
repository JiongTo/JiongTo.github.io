{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/favicon1.png","path":"favicon1.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/bb.css","path":"css/bb.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpeg","path":"medias/avatar.jpeg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/contact.png","path":"medias/contact.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo1.png","path":"medias/logo1.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","path":"libs/jquery/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/my404/bodymovin.js","path":"libs/my404/bodymovin.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/my404/data.js","path":"libs/my404/data.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","path":"libs/prism/prism.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.jpg","path":"medias/reward/wechat.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","path":"libs/awesome/webfonts/fa-brands-400.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","path":"libs/awesome/webfonts/fa-brands-400.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","path":"libs/awesome/webfonts/fa-brands-400.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","path":"libs/awesome/webfonts/fa-regular-400.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","path":"libs/awesome/webfonts/fa-regular-400.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","path":"libs/awesome/webfonts/fa-regular-400.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","path":"libs/awesome/webfonts/fa-solid-900.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","path":"libs/awesome/webfonts/fa-solid-900.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","path":"libs/awesome/webfonts/fa-solid-900.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/404/index.md","hash":"311ca6d912b3ae4112b92e989256ac7a528d0bfa","modified":1653574599985},{"_id":"source/_data/friends.json","hash":"8b454e8017b9fe5f257c8c75c5a39666198bf99d","modified":1653445190466},{"_id":"source/_posts/hw知识汇总.md","hash":"e560e5c10d30ecd0412fd985624e2d4cc272180e","modified":1653494313766},{"_id":"source/_posts/蓝队面试题.md","hash":"ef2bba53e946b11927d9f8b2801a8688774a98c8","modified":1653437925021},{"_id":"source/categories/index.md","hash":"2b60d378ae57d4aa6b12fdfde261ee90741ac6a7","modified":1653412389023},{"_id":"source/contact/index.md","hash":"788b6937d465daccb39ebd8d270d00627a09d9a1","modified":1653412494494},{"_id":"source/about/index.md","hash":"55f206ae374256858f8cea501bcd544d5714b3ba","modified":1653412458313},{"_id":"source/tags/index.md","hash":"03bb7fba0909aba4c923d6be6b6e4bc3ec45856e","modified":1653412428070},{"_id":"source/friends/index.md","hash":"124b2dac30b95a201a16e41252bd7a6b347d8a74","modified":1653444680516},{"_id":"themes/hexo-theme-matery/.gitignore","hash":"727607929a51db7ea10968f547c26041eee9cfff","modified":1606456707000},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1606456707000},{"_id":"themes/hexo-theme-matery/CHANGELOG.md","hash":"084ec8b110a20170d08a0aa5fd8accf601051835","modified":1606456707000},{"_id":"themes/hexo-theme-matery/README.md","hash":"0366f3d50b18d095b0581e7b5974e3283d693884","modified":1606456707000},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"089de96e2165ea2a8a3adf38ebda85b65e7f716e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"d86f4e42cdf3a9dba72b4ca200a9258e7dc7bc52","modified":1653616115779},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"54ccc01b097c5bf6820f0edfcece1a87b78ab32d","modified":1606456707000},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"a957b05f70265a86a87d922e18488571809d2472","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"7cd590fbe2a53a330632cccebd402bdf81b0ff00","modified":1653619891602},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"41849f9300b8dc47048333fcf4a897dd8a2a13ca","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/bb.ejs","hash":"21959d702f17a3d98b716daf44c8b5eecd59c7c5","modified":1606456707000},{"_id":"themes/hexo-theme-matery/languages/zh-HK.yml","hash":"ae34ac0e175c3037675722e436637efbceea32f0","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"19d62e521c4253496db559478db5164ddfd2480e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"4dc6f08e7709cc04e886be72dbf0d06469f0effc","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"92892bab5578ccf758ce57e19fca08be80d0d5b9","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"974b44eb3e343cd3ee57ebad34bbb0eff4184400","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"90b5a4c1f70e4756db569c15a7c6cad0c77c4500","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"fd7a2add0a7c0283184379dfd745cb5208db94b4","modified":1653614722919},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/favicon1.png","hash":"55f557233ee745a91a53e2551094bfd7e5061ff3","modified":1653455837085},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/background.ejs","hash":"aef6edeeb11209831a11d8c7f5d59992e2573335","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"a0b563c87618a1fff64071a29e32675777dd4ffe","modified":1653450132051},{"_id":"themes/hexo-theme-matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"b312141ce77417ce60f0859a0c803d6ebd0778c5","modified":1653577165108},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"f8438ac80df005934a330b029de292d26f0b6ecb","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"76b4a37e0364380b143fdf94bf1a5e6941564414","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"39881574abd5f3e2492d79aa71480bc063803b61","modified":1653622007896},{"_id":"themes/hexo-theme-matery/layout/_partial/minivaline.ejs","hash":"5f09386aece8f9cf31f6059bbde79cd6c5171493","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"c4557a84550b03a807287b0f94ba1620317e38d4","modified":1653620919408},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"78b70ff24b3039c871331ebec114b936c1756cc8","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"cc1babdf794d333c644d02b6570f9164b4911645","modified":1653453620664},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"c76b78782ea82340104fccc089417572e0adece4","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"880ebaf78a947631a38ad0b3d65201315845a264","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"150529c9fb9aa8ddb42ec3e02645d301faa2503b","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"ffc55bc7e73bc698bfc58d8e3780c336b83282cf","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"d5cba429e223683fbfc977bb4f1a162fbe0ee7ca","modified":1653578573558},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"0e4c0a6154aa34007849928ca88f05b6185b256e","modified":1653478191458},{"_id":"themes/hexo-theme-matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"e9e3e327d5de9d7aeadbde32e1d558652d9e9195","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"8551137e94ca4e2e3b8b63d5626255884cb60cb5","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1606456707000},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"a0e002377af2a7f7e4da6d9a644de97adb035925","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"6e6d87a785f1f9c2d8c6e44cd2abaecb76c1e18d","modified":1653622295070},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"e89cedd5c768750cb6600201467dd7ae5cf7ed2c","modified":1653621163894},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"e1482406c58ea2a0eb178d7e4efb2c879cdddc80","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/contact.png","hash":"443ea472dd49b74d9d70295837eb381c8c64f02c","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"3c34edc10c4503bd2db2b11dc201ede3798c088e","modified":1653614661611},{"_id":"themes/hexo-theme-matery/source/medias/logo1.png","hash":"2fd8a5aa955e912512219cb3145fb331738c2e18","modified":1653455647270},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","hash":"fbb58c37e2c74f127ae0c566afa9b48889aab79f","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","hash":"09fff0a5e0598db05eb93a0f15552be2b0902e53","modified":1653494170891},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.jpg","hash":"3a1b78bcd930f94591bc0f953e6ab941b7d08739","modified":1653446510388},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","hash":"4233aa99a94724651077f41c51423a27d455284b","modified":1653446460989},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"1e24c4b822f943790653b02d04f769c0ec99bab4","modified":1653479782949},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/my404/bodymovin.js","hash":"0101a4545f219753bb617e9f1794444694b3e7d0","modified":1499821912624},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpeg","hash":"d8d9fd97bf3796810c7b66213cda52e1b4cc475d","modified":1651734050508},{"_id":"themes/hexo-theme-matery/source/libs/my404/data.js","hash":"a9ba4005f96055774d3ff6977bd420d46da42da7","modified":1499821913133},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"36067f6360a925087b85a6e9bbf54203af3040d5","modified":1653450279676},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"7c9bef2128eeb4d9a1efeaac4e9a552b2e34eab8","modified":1653450295497},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"c93e4c8274e47138cd57eda126170c16ac448c3b","modified":1653450515035},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"a09536cb1b41a07d0bb39224e82384c932324d15","modified":1653450263247},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d34618cb43a5571a319a2390056e5efacb074eb3","modified":1653450313563},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"d34618cb43a5571a319a2390056e5efacb074eb3","modified":1653450313563},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1606456707000},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"f8dc7b78574168db36f5ad135448d2698961b832","modified":1653450221359},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"91419de0bb78e9af13f3c82994ea27a2fe7466ea","modified":1653450242775},{"_id":"public/search.xml","hash":"968777a36cf227ef41897c1e4b0fd0c26b4df071","modified":1653625174096},{"_id":"public/atom.xml","hash":"1867c4a15dd358650b606517540bc9e19ef7e4ef","modified":1653625174096},{"_id":"public/404.html","hash":"da13fd74b1f9788a05216341fa88620b7f38251e","modified":1653625174096},{"_id":"public/categories/index.html","hash":"546cd4abd74bdc1bd697941940ce82266ebfa09a","modified":1653625174096},{"_id":"public/about/index.html","hash":"f4fd75943c876950bd36dad5d4fcecd002d600ec","modified":1653625174096},{"_id":"public/contact/index.html","hash":"c1d2584b52932e88d143ef5c82e5fc35ef0f00c3","modified":1653625174096},{"_id":"public/2022/05/25/hw-zhi-shi-hui-zong/index.html","hash":"ee7968a4e84302d3380a58947f12969296f80eda","modified":1653625174096},{"_id":"public/friends/index.html","hash":"fedf925b1e1dc704ae85f8d125cf36433cedc3e5","modified":1653625174096},{"_id":"public/tags/index.html","hash":"ea8f54d4036f505f48f8e983e3344ba46fe0f6fa","modified":1653625174096},{"_id":"public/2022/05/25/lan-dui-mian-shi-ti/index.html","hash":"957debc9877422f3442c0f2f0afea8c8b971a67f","modified":1653625174096},{"_id":"public/archives/index.html","hash":"b67a85d863fb76af9ac9cb522e6b7704c8679586","modified":1653625174096},{"_id":"public/index.html","hash":"618002f70d4dcbbee09929a973ad90f1d2c6b911","modified":1653625174096},{"_id":"public/archives/2022/index.html","hash":"ab44ba4a39d7fbc5f8f9d6f560c01dafaaf0f649","modified":1653625174096},{"_id":"public/archives/2022/05/index.html","hash":"cb1dade0df08a7266638e8581722b1398e1dbe67","modified":1653625174096},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1653625174096},{"_id":"public/favicon.png","hash":"fd7a2add0a7c0283184379dfd745cb5208db94b4","modified":1653625174096},{"_id":"public/favicon1.png","hash":"55f557233ee745a91a53e2551094bfd7e5061ff3","modified":1653625174096},{"_id":"public/medias/contact.png","hash":"443ea472dd49b74d9d70295837eb381c8c64f02c","modified":1653625174096},{"_id":"public/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1653625174096},{"_id":"public/medias/logo1.png","hash":"2fd8a5aa955e912512219cb3145fb331738c2e18","modified":1653625174096},{"_id":"public/medias/logo.png","hash":"3c34edc10c4503bd2db2b11dc201ede3798c088e","modified":1653625174096},{"_id":"public/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1653625174096},{"_id":"public/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1653625174096},{"_id":"public/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1653625174096},{"_id":"public/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1653625174096},{"_id":"public/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1653625174096},{"_id":"public/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1653625174096},{"_id":"public/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1653625174096},{"_id":"public/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1653625174096},{"_id":"public/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1653625174096},{"_id":"public/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1653625174096},{"_id":"public/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1653625174096},{"_id":"public/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1653625174096},{"_id":"public/medias/reward/wechat.jpg","hash":"3a1b78bcd930f94591bc0f953e6ab941b7d08739","modified":1653625174096},{"_id":"public/medias/reward/alipay.jpg","hash":"4233aa99a94724651077f41c51423a27d455284b","modified":1653625174096},{"_id":"public/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1653625174096},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1653625174096},{"_id":"public/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1653625174096},{"_id":"public/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1653625174096},{"_id":"public/css/my.css","hash":"e89cedd5c768750cb6600201467dd7ae5cf7ed2c","modified":1653625174096},{"_id":"public/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1653625174096},{"_id":"public/js/search.js","hash":"e1482406c58ea2a0eb178d7e4efb2c879cdddc80","modified":1653625174096},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1653625174096},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1653625174096},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1653625174096},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1653625174096},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1653625174096},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1653625174096},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1653625174096},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1653625174096},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1653625174096},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1653625174096},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1653625174096},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1653625174096},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1653625174096},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1653625174096},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1653625174096},{"_id":"public/libs/prism/prism.css","hash":"09fff0a5e0598db05eb93a0f15552be2b0902e53","modified":1653625174096},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1653625174096},{"_id":"public/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1653625174096},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1653625174096},{"_id":"public/css/matery.css","hash":"6e6d87a785f1f9c2d8c6e44cd2abaecb76c1e18d","modified":1653625174096},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1653625174096},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1653625174096},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1653625174096},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1653625174096},{"_id":"public/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1653625174096},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1653625174096},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1653625174096},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1653625174096},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1653625174096},{"_id":"public/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1653625174096},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1653625174096},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1653625174096},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1653625174096},{"_id":"public/libs/minivaline/MiniValine.js","hash":"fbb58c37e2c74f127ae0c566afa9b48889aab79f","modified":1653625174096},{"_id":"public/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1653625174096},{"_id":"public/libs/my404/bodymovin.js","hash":"0101a4545f219753bb617e9f1794444694b3e7d0","modified":1653625174096},{"_id":"public/libs/valine/Valine.min.js","hash":"1e24c4b822f943790653b02d04f769c0ec99bab4","modified":1653625174096},{"_id":"public/libs/my404/data.js","hash":"a9ba4005f96055774d3ff6977bd420d46da42da7","modified":1653625174096},{"_id":"public/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1653625174096},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1653625174096},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1653625174096},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1653625174096},{"_id":"public/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1653625174096},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1653625174096},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1653625174096},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1653625174096},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1653625174096},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1653625174096},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1653625174096},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1653625174096},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1653625174096},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1653625174096},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1653625174096},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1653625174096},{"_id":"public/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1653625174096},{"_id":"public/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1653625174096},{"_id":"public/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1653625174096},{"_id":"public/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1653625174096},{"_id":"public/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1653625174096},{"_id":"public/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1653625174096},{"_id":"public/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1653625174096},{"_id":"public/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1653625174096},{"_id":"public/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1653625174096},{"_id":"public/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1653625174096},{"_id":"public/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1653625174096},{"_id":"public/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1653625174096},{"_id":"public/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1653625174096},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1653625174096},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1653625174096},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1653625174096},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1653625174096},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1653625174096},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1653625174096},{"_id":"public/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1653625174096},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1653625174096},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1653625174096},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1653625174096},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1653625174096},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1653625174096},{"_id":"public/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1653625174096},{"_id":"public/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1653625174096},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1653625174096},{"_id":"public/medias/avatar.jpeg","hash":"d8d9fd97bf3796810c7b66213cda52e1b4cc475d","modified":1653625174096},{"_id":"public/medias/banner/3.jpg","hash":"36067f6360a925087b85a6e9bbf54203af3040d5","modified":1653625174096},{"_id":"public/medias/banner/4.jpg","hash":"7c9bef2128eeb4d9a1efeaac4e9a552b2e34eab8","modified":1653625174096},{"_id":"public/medias/banner/6.jpg","hash":"c93e4c8274e47138cd57eda126170c16ac448c3b","modified":1653625174096},{"_id":"public/medias/banner/2.jpg","hash":"a09536cb1b41a07d0bb39224e82384c932324d15","modified":1653625174096},{"_id":"public/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1653625174096},{"_id":"public/medias/cover.jpg","hash":"d34618cb43a5571a319a2390056e5efacb074eb3","modified":1653625174096},{"_id":"public/medias/banner/5.jpg","hash":"d34618cb43a5571a319a2390056e5efacb074eb3","modified":1653625174096},{"_id":"public/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1653625174096},{"_id":"public/medias/banner/0.jpg","hash":"f8dc7b78574168db36f5ad135448d2698961b832","modified":1653625174096},{"_id":"public/medias/banner/1.jpg","hash":"91419de0bb78e9af13f3c82994ea27a2fe7466ea","modified":1653625174096}],"Category":[],"Data":[{"_id":"friends","data":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}],"Page":[{"title":"404 Not Found","date":"2022-05-26T08:00:30.000Z","type":"404","layout":"404","_content":"","source":"404/index.md","raw":"---\ntitle: '404 Not Found'\ndate: 2022-05-26 16:00:30\ntype: \"404\"\nlayout: \"404\"\npermalink: /404\n---\n","updated":"2022-05-26T14:16:39.985Z","path":"/404.html","comments":1,"_id":"cl3nxqfh20000h4c71ws607o2","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"contact","date":"2022-05-24T17:14:38.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2022-05-25 01:14:38\ntype: \"contact\"\nlayout: \"contact\"\n---\n","updated":"2022-05-24T17:14:54.494Z","path":"contact/index.html","comments":1,"_id":"cl3nxqfhe0002h4c72tsz1ygp","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"categories","date":"2022-05-24T17:12:38.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-05-25 01:12:38\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2022-05-24T17:13:09.023Z","path":"categories/index.html","comments":1,"_id":"cl3nxqfhg0003h4c7ez7468dw","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"about","date":"2022-05-24T17:14:00.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-05-25 01:14:00\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2022-05-24T17:14:18.313Z","path":"about/index.html","comments":1,"_id":"cl3nxqfhg0004h4c708fc4tx4","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"friends","date":"2022-05-25T02:10:53.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2022-05-25 10:10:53\ntype: \"friends\"\nlayout: \"friends\"\n---\n","updated":"2022-05-25T02:11:20.516Z","path":"friends/index.html","comments":1,"_id":"cl3nxqfhh0005h4c7eicb2wtp","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"tags","date":"2022-05-24T17:13:32.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-05-25 01:13:32\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2022-05-24T17:13:48.070Z","path":"tags/index.html","comments":1,"_id":"cl3nxqfhi0006h4c7ecgt919b","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""}],"Post":[{"title":"hw知识汇总","top":false,"cover":false,"toc":true,"mathjax":false,"date":"2022-05-25T05:53:53.000Z","author":null,"img":null,"coverImg":null,"password":null,"summary":null,"keywords":null,"_content":"\n# 一、安全常识基础\n\n## 1.1 安全简介\n\n### 1.1.1 了解当前安全状况\n\n## 1.2 热门安全事件\n\n### 1.2.1 了解热门安全事件\n\n## 1.3 安全术语\n\n- **0DAY**\n\n“零日漏洞”(zero-day)又叫零时差攻击，是指被发现后立即被恶意利用的安全漏洞。\n\n- **RCE**\n\nRCE漏洞，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统。\n\n- **EXP**\n\nexploit，漏洞利用；利用漏洞攻击系统的代码。\n\n- **POC**\n\n漏洞证明，漏洞报告中，通过一段描述或一个样例来证明漏洞确实存在。\n\n- **CVE**\n\n公共漏洞和暴露，为广泛认同的信息安全漏洞或者已经暴露出来的弱点给出一个公共的名称。\n\n- **Payload**\n\n（有效攻击负载）是包含在你用于一次漏洞利用（exploit）中的攻击代码。\n\n- **后门**\n\n绕过安全控制而获取对程序或系统访问权的方法。\n\n- **webshell**\n\nWebshell是通过服务器开放的端口获取服务器的某些权限。\n\n### 1.3.6 常见高危风险端口\n\n| 端口       | 服务                         | 渗透测试                                                     |\n| :--------- | :--------------------------- | :----------------------------------------------------------- |\n| tcp 20,21  | FTP（文件传输协议）          | 允许匿名的上传下载,爆破,嗅探,win提权,远程执行(proftpd 1.3.5),各类后门(proftpd,vsftp 2.3.4) |\n| tcp 22     | SSH （安全外壳协议 ）        | 可根据已搜集到的信息尝试爆破,v1版本可中间人,ssh隧道及内网代理转发,文件传输等等 |\n| tcp 23     | Telnet （ 远程终端协议）     | 爆破,嗅探,一般常用于路由,交换登陆,可尝试弱口令               |\n| tcp 25     | SMTP（简单邮件传输协议）     | 邮件伪造,vrfy/expn查询邮件用户信息,可使用smtp-user-enum工具来自动跑 |\n| tcp/udp 53 | DNS（域名系统）              | 允许区域传送,dns劫持,缓存投毒,欺骗以及各种基于dns隧道的远控  |\n| tcp 80     | Web服务端口                  | 可尝试经典的topn,vpn,owa,webmail,目标oa,各类Java控制台,各类服务器Web管理面板,各类Web中间件漏洞利用,各类Web框架漏洞利用等等…… |\n| tcp 1433   | SQL Server（数据库管理系统） | 注入,提权,sa弱口令,爆破                                      |\n| tcp 3306   | MySQL（数据库）              | 注入,提权,爆破                                               |\n| tcp 3389   | Windows rdp（桌面协议）      | shift后门[需要03以下的系统],爆破,ms12-020                    |\n\n# 二、操作系统基础\n\n## 2.1 windows\n\n### 2.1.1 常用命令\n\n1. #### 用户/组管理\n\n-  **添加或删除用户**\n\n```bash\n#添加一个永不过期的用户，并设置登录口令\nnet user [userName][password] /add /expires:never\n#删除用户\nnet user [userName] /delete\n#将用户添加到管理员组\nnet localgroup Administrators [userName] /add\n#将用户从管理组删除\nnet localgroup Administrators [userName] /delete\n#修改当前用户密码\nnet user [userName][password]\n```\n\n-  **激活或禁用用户**\n\n```bash\n#激活用户\nnet user [userName] /active:yes\n#禁用用户\nnet user [userName] /active:no\n```\n\n-  **查看用户**\n\n​\t`net user`\n\n-  **新建或删除用户组**\n\n```bash\n#新建用户组\nnet localgroup [groupName] /add\n#删除用户组\nnet localgroup [groupName] /delete\n```\n\n2. #### 文件和目录\n\n-  **列出目录结构**\n\n```bash\ndir [path]:\\[folderName]\ndir /a:h /s\t\t#显示当前目录及其子目录下的隐藏文件\ndir /a:s /s\t\t#显示当前目录及其子目录下的系统文件\ndir /a:r /s\t\t#显示当前目录及其子目录下的只读文件\ndir /a:a /s\t\t#显示当前目录及其子目录下的存档文件\n```\n\n-  **创建文件并向文件输出信息**\n\n```bash\necho \"test text\" > 1.txt\t#覆盖\necho \"test rext\" >> 1.txt\t#追加\n```\n\n- **创建目录**\n\n​\t`md [folderName]`\n\n- **切换目录、盘符**\n\n```bash\ncd [path]:\\[folderName]\nd:\t\t#切换到 D 盘\n```\n\n- **删除文件或目录**\n\n```bash\ndel [fileName]\t\t\t#删除文件\nrd [folderName]\t\t\t#删除空目录（目录中不能有子目录和文件）\nrd [folderName] /S /Q\t#删除目录并同时删除目录中的子目录以及文件 \t\t\n```\n\n- **查看文件的内容**\n\n```bash\ntype [fileName]\t\t#在 DOS 下查看\nstart [fileName]\t#调用默认程序查看\n```\n\n- **设置文件或目录属性**\n\n```bash\nattrib +S +H [path]:\\[fileName]\t\t#添加系统文件和隐藏文件属性\n#处理文件夹及子文件里匹配的文件（包含该文件夹）\nattrib +S +H [path]:\\[fileName] /S /D\n/S 处理当前文件夹及其子文件夹中的匹配文件 \n/D 也处理文件夹\n```\n\n- **重命名**\n\n​\t`ren [fileName1][fileName2]`\n\n- **显示目录树**\n\n​\t`tree [path]:\\[folderName] /F`\n\n- **查找文件内容**\n\n```bash\nfind [/V][/C][/N][/I][/OFF[LINE]] \"string\" [[drive:][path][filename]]\n/V 显示所有未包含指定字符串的行。\n/C 仅显示包含字符串的行数。\n/N 显示行号。 \n/I 搜索字符串时忽略大小写。\n/OFF[LINE] 不要跳过具有脱机属性集的文件。\n\"string\" 指定要搜索的文本字符串。\n[drive:][path][filename] 指定要搜索的文件\nfind \"abc\" 1.txt \t#查找含有abc的行,并输出该行。\nfind /n \"abc\" 1.txt #查找含有abc的行,并输出该行和行号。\n```\n\n3. #### 网络/服务\n\n-  **ping**\n\n```bash\nping -t -l 65500 [IP or domain]\t\t#死亡之ping\n\t\t\t\t\t\t\t#65500 表示数据长度上限，-t 表示不停地ping目标地址\nping [ip]\n```\n\n-  **ipconfig**\n\n```bash\nipconfig -all\t\t\t#查看当前所有的ip 地址信息\nipconfig /release\t\t#清除当前获取到的ip 地址 \nipconfig /renew\t\t\t#重新获取ip 地址\n```\n\n-  **natstat**\n\n```bash\nnetstat -ano\t\t#列出所有端口的使用情况 \nnetstat -no\t\t\t#显示连接进程的情况，通常用于查找是否有木马程序\n```\n\n-  **arp （地址解析协议）**\n\n```bash\narp -a\t\t\t\t\t\t#显示 ARP 列表\narp -d\t\t\t\t\t\t#清除 ARP 列表，需要管理员权限\narp -s [ip][macAddress]\t\t#添加静态项\n```\n\n-  **tracert**\n\n​\t`tracert [ip or domain]\t\t#跟踪路由`\n\n-  **nslookup**\n\n​\t`nslookup www.baidu.com\t\t#查询指定域名的dns信息`\n\n-  **route**\n\n```bash\nroute print\t\t#打印路由表\nroute add [network] mask [mask] [next-hop]\t#新增路由\n```\n\n-  **net**\n\n```bash\nnet view\t\t#查看当前局域网内的其他连接者\nnet start\t\t#查看开启了哪些服务\nnet start [serviceName]\t\t#开启某一个服务\nnet stop [serviceName]\t\t#停止某一个服务\n#将共享的某一个服务器的C盘映射成K盘，攻击者常用命令\nnet use k:\\\\[ipAddress]\\c$\n#以下命令建议需管理员权限\nnet share\t\t#查看本地开启的共享\nnet share ipc$\t#开启ipc$共享\nnet share ipc$ /del \t#删除ipc$共享\nnet share c$ /del \t\t#删除C盘的共享\n```\n\n### 2.1.2 Windows服务\n\n- **常见进程**\n\nSystem.exe ：系统进程，一个重要的进程。\n\nSystem Idle Process.exe ：系统进程，它的作用是显示系统有多少闲置的cpu资源。\n\nsvchost Service Host Process：是一个标准的动态连接库主机处理服务。Svchost用来启动服务。Svchost只是负责为这些服务提供启动的条件，其自身并不能实现任何服务的功能，也不能为用户提供任何服务。 经常会被病毒利用进行dll注入的进程。\n\nexplorer.exe ：用于控制Windows图形，包括开始菜单、任务栏，桌面和文件管理。\n\nlsass.exe ：系统进程，这是一个本地安全权限服务管理 进程详解：管理 IP安全策略以及启动 ISAKMP/Oakley (IKE) 和 IP 安全驱动程序。\n\nservices.exe：系统进程用于管理启动和停止Windows服务，该进程也管理计算机启动和关机时的运 行的服务，所以很重要。\n\nalg.exe：这是一个应用层网关服务用于网络共享，alg.exe是微软Windows操作系统自带的程序。它 用于处理微软Windows网络连接共享和网络连接防火墙。\n\ncsrss.exe： 微软客户端/服务端运行时子系统。该进程管理Windows图形相关任务。注意：有些病 毒也会创业该进程。\n\nmdm.exe ：微软Windows进程除错程序。用于使用可视化脚本工具对Internet Explorer除错。\n\ntaskmgr.exe： 任务管理器进程。\n\nrundll32.exe：用于在内存中运行DLL文件，它们会在应用程序中被使用，一般有多个。\n\nsmss.exe： 微软Windows操作系统的一部分。\n\nwinlogon ：管理用户登录和退出的。\n\nWuauclt.exe：Windows自动升级管理程序。\n\nspoolsv.exe ：打印的进程\n\n- **进程查看辅助工具**\n\nPchunter \n\nProcessExplorer\n\nProcessHacker\n\nProcessMonitor\n火绒剑\n\n### 2.1.3 Windows权限\n\n- **某些文件位置**\n\nC:\\Windows：Windows操作系统中最核心的文件夹，大部分系统文件都在此文件夹下。 \n\nC:\\Windows\\Fonts：字体文件夹，有些病毒会存放在此文件夹下。\n\nC:\\Windows\\System32：Windows文件夹中最重要的文件夹，一般用于存放Windows的系统文件和硬件驱动程序。\n\nC:\\Windows\\Temp：系统临时文件夹，有些病毒会存放在此文件夹下。\n\nC:\\Windows\\system32\\dirvers ：Windows驱动文件夹，有些驱动病毒存放会在此文件夹下。\n\n- **本地用户和组类型**\n  - 用户账户\n    - 本地用户\n    - 域用户\n\n  - 组账户\n    - everyone组\n    - network组\n\n- **安全标识符**\n\n安全主体的代表（标识用户、组和计算机账户的唯一编码）\n\n范例：S-1-5-21-1736401710-1141508419-1540318053-1000\n\n- **隐藏账户**\n\n账户被隐藏，无法通过net user命令查看。但可在用户列表中进行查看。\n\n![image-20220523165226762](https://s2.loli.net/2022/05/25/ZgfBdbTLHarlQtR.png)\n\n![image-20220523165244788](https://s2.loli.net/2022/05/25/TsF7uil4qCjhLDU.png)\n\n- **文件权限**\n\n使用访问控制列表进行文件权限管理\n\n权限： 完全控制、修改、 读取和执行、读取、写入、特别的权限\n\n## 2.2 linux\n\n###  2.2.1 常用命令\n\n-  **命令帮助**\n\n **--help参数：**\n\n如果想查看某个命令的帮助说明，可以在命令后输入—help参数。\n\n **man命令：**\n\n查看命令的正式说明文档，比较长 \n\n **格式**：man （命令）\n\n1. #### **文件目录管理**\n\n-  **目录操作**\n\n **ls命令**：\n\nls命令用来显示目标列表，在Linux中是使用率较高的命令。ls命令的输出信息可以进行彩色加亮显示，以分区不同类型的文件。\n\n**命令格式：**\n\n`ls (选项) (参数)`\n\n```bash\nls -a\t\t#显示当前目录下包括隐藏文件在内的所有文件列表\nls -t\t\t#最近修改的文件显示在最上面\nls –l\t\t#列出文件和文件夹的详细信息\nls -al\t\t#显示当前目录下包括影藏文件在内的所有文件详细信息\nls -lt\t\t#按时间列出文件和文件夹详细信息\nls -ltr\t\t#按修改时间列出文件和文件夹详细信息\nls -lut\t\t#按访问时间顺序查看\n```\n\n**mkdir命令：**\n\nmkdir mkdir命令目录基本操作 mkdir命令用来创建目录。该命令创建由dirname命名的目录。如果 在目录名的前面没有加任何路径名，则在当前目录下创建由dirname指定的目录；如果给出了一个 已经存在的路径，将会在该目录下创建一个指定的目录。在创建目录时，应保证新建的目录与它所\n在目录下的文件没有重名。\n\n**命令格式**：\n\n`mkdir [选项] 目录名称`\n\n**实例：**\n\n```bash\n#在目录/tmp下建立子目录 /eshare/破军，并且只有文件主有读、写和执行权限，其他人无权访问\nmkdir -pm 700 /tmp/eshare/破军\t\t\n#-m 建立目录的同时设置目录的权限\n#-p 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录\n```\n\n**rm命令：**\n\nrm命令可以删除一个目录中的一个或多个文件或目录，也可以将某个目录及其下属的所有文件及其 子目录均删除掉。对于链接文件，只是删除整个链接文件，而原有文件保持不变。\n\n**命令格式：**\n\n`rm [选项] 目录名称`\n\n**实例：**\n\n````bash\nrm -f 文件名\t\t\t#强行删除文件系统不再提示\nrm -r 文件名\t\t\t#将当前目录及子目录中所有档案删除\n````\n\n- **文件权限属性设置**\n\n**chmd命令：**\n\nchmod命令用来变更文件或目录的权限。\n\n权限范围的表示法如下： \n\nu User，即文件或目录的拥有者；\n\ng Group，即文件或目录的所属群组；\n\no Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围； \n\na All，即全部的用户，包含拥有者，所属群组以及其他用户；\n\nr 读取权限，数字代号为\"4\"; \n\nw 写入权限，数字代号为\"2\"；\n\nx 执行或切换权限，数字代号为\"1\"；\n\n-不具任何权限，数字代号为\"0\"；\n\ns 特殊功能说明：变更文件或目录的权限。\n\nlinux 文件的用户权限的分析图\n\n![image-20220523172317446](https://s2.loli.net/2022/05/25/3KVlpm1g8UitvPe.png)\n\n```bsh\n#为文件hello.sh设置自己可以执行，组员可以写入的权限 \nchmod u+x,g+w hello.sh \nchmod u=rwx,g=rw,o=r hello.sh \nchmod 764 hello.sh\n#对文件hello.sh的u,g,o都设置可执行属性\nchmod a+x hello.sh\n```\n\n- **文件查找**\n\n**find命令：**\n\nfind命令用来在指定目录下查找文件。\n\n**语法：**\n\n`find (选项) (参数)`\n\n参数：查找文件的起始目录\n\n```bash\n#根据文件或者正则表达式进行匹配：\nfind / -name \"*.txt\"\t\t#在/目录下查找以.txt结尾的文件名\nfind . -name \"*.txt\" -o -name \"*.pdf\"\t#当前目录及子目录下查找所有以.txt和.pdf结尾的文件\n#否定参数\nfind /home ! -name \"*.txt\"\t#找出/home下不是以.txt结尾的文件\n#根据文件时间戳进行搜索\nfind . -type f 时间戳\nUNIX/Linux文件系统每个文件都有三种时间戳： \n访问时间（-atime/天，-amin/分钟）：用户最近一次访问时间。 \n修改时间（-mtime/天，-mmin/分钟）：文件最后一次修改时间。 \n变化时间（-ctime/天，-cmin/分钟）：文件数据元（例如权限等）最后一次修改时间。 \n-mtime –ctime都可以用来根据文件创建时间来查找，\n-ctime相对-mtime的区别就是权限修改了，-ctime可以查到，-mtime不行。\n#实例\nfind . -type f -atime -7\t\t#搜索最近七天内被访问过的所有文件\nfind . -type f -atime 7\t\t\t#搜索恰好在七天前被访问过的所有文件\nfind . -type f -atime +7\t\t#搜索超过七天被访问过的所有文件\nfind . -type f -amin +10\t\t#搜索访问时间超过10分钟的所有文件\n#根据文件权限/所有权进行匹配\nfind . -type f -perm 777\t\t#当前目录下搜索出权限为777的文件\nfind . -type f -name \"*.php\" ! -perm 644  #找出当前目录下权限不是644的php文件\nfind . -type f -user tom\t\t#找出当前目录用户tom拥有的所有文件\n```\n\n- **文件内容查看**\n\n**more命令：**\n\nmore命令，功能类似 cat ，cat命令是整个文件的内容从上到下显示在屏幕上。 more会以一页一 页的显示方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键\n就会往回（back）一页显示。\n\n**语法：**\n\n`more (选项) (参数)`\n\n**实例：**\n\n```bash\n#设more.txt是当前目录下的文件\nmore more.txt\t\t#在屏幕上分页显示文件more.txt的内容\nmore +3 more.txt \t#显示文件more.txt从第三行起的内容 \nmore -5 more.txt \t#每屏显示5行内容\n```\n\n **less命令：**\n\nless命令的作用与more十分相似，都可以用来浏览文字档案的内容，相对于more命令来说更有弹 性，功能更多。用less命令显示文件时，用PageUp键向上翻页，用PageDown键向下翻页。要退出\nless程序，应按Q键。\n\n**实例：**\n\n`less -N /etc/passwd \t\t#查看/etc/passwd文件并显示行号`\n\n- **文件编辑**\n\n**vi命令**\n\nvi命令是UNIX操作系统和类UNIX操作系统中最通用的全屏幕纯文本编辑器。Linux中的vi编辑器叫 vim，它是vi的增强版（vi Improved），与vi编辑器完全兼容，而且实现了很多增强功能。\n\n**常用内置命令**：\n\n```bash\nCtrl+u：向文件首翻半屏； Ctrl+d：向文件尾翻半屏；\nCtrl+f：向文件尾翻一屏； Ctrl+b：向文件首翻一屏；\nEsc：从编辑模式切换到命令模式； \nZZ：命令模式下保存当前文件所做的修改后退出vi；\n:(命令) 可以输入一些命令，:q！ 可以不保存退出。\n:行号：光标跳转到指定行的行首；\n:$：光标跳转到最后一行的行首； \nx或X：删除一个字符，x删除光标后的，而X删除光标前的；\nD：删除从当前光标到光标所在行尾的全部字符； \ndd：删除光标行正行内容； \nndd：删除当前行及其后n-1行； \np：粘贴文本操作，用于将缓存区的内容粘贴到当前光标所在位置的下方； \nP：粘贴文本操作，用于将缓存区的内容粘贴到当前光标所在位置的上方； \n/字符串：文本查找操作，用于从当前光标所在位置开始向文件尾部查找指定字符串的内容；\na：在当前字符后添加文本； \nA：在行末添加文本； \ni：在当前字符前插入文本； \nI：在行首插入文本；\no：在当前行后面插入一空行；\n```\n\n**sed命令：**\n\nsed是一种流编辑器，它是文本处理中非常重要的工具，能够完美的配合正则表达式使用。处理时，把当前处理的行存储在临时缓冲区中，接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，除非你使用重定向存储输出。\n\n**命令格式：**\n\n```bash\nsed [options] 'command' file(s)\nsed [options] -f scriptfile file(s)\n```\n\n**实例：**\n\n```bash\n#将file中的字符串book替换为books并输出，但不修改原文件\nsed 's/book/books/' file\n```\n\n- **文件过滤**\n\n**grep命令**：\n\n是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。\n\n**实例：**\n\n```bash\n#在文件中搜索一个单词，命令会返回一个包含\"match_pattern\"的文本行\ngrep match_pattern file_name \ngrep \"match_pattern\" file_name\n```\n\n- **文件压缩与解压**\n\n**tar命令**：\n\ntar命令可以为linux的文件和目录创建档案。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，或者将一个打包文件还原成若干文件。 \n`tar [选项] [生成的新文件] [待打包压缩文件]`\n\n**常用选项：**\n\n| 选项 | 选项说明                                          |\n| ---- | ------------------------------------------------- |\n| -c   | 新建打包文件，同 -v 一起使用 查看过程中打包文件名 |\n| -x   | 解压文件， -c 解压到对应的文件目录。              |\n| -f   | 后面接要处理的文件                                |\n| -j   | 通过bzip2方式压缩或解压，最后以.tar.br2 为后缀    |\n| -z   | 通过gzip方式压缩或解压，最后以.tar.gz 为后缀      |\n| -v   | 压缩或解压过程中，显示出来过程                    |\n\n**实例：**\n\n```bash\n#将文件全部打包成tar包\ntar -cvf log.tar log2012.log \t\t#仅打包，不压缩！ \ntar -zcvf log.tar.gz log2012.log \t#打包后，以 gzip 压缩 \ntar -jcvf log.tar.bz2 log2012.log \t#打包后，以 bzip2 压缩\n#将tar包解压缩\ntar -zxvf /opt/soft/test/log.tar.gz\n```\n\n- 文件权限属性设置\n\n**stat命令：**\n\nstat命令用于显示文件的状态信息。stat命令的输出信息比ls命令的输出信息要更详细。\n\n**选项：**\n\n ```bash\n-L：支持符号连接； \n-f：显示文件系统状态而非文件状态； \n-t：以简洁方式输出信息； \n--help：显示指令的帮助信息；\n--version：显示指令的版本信息。\n ```\n\n**实例：**\n\n```bash\n[root@localhost ~]# stat myfile \n[root@localhost ~]# stat -f myfile\n```\n\n- **切换目录、盘符**\n\n```bash\ncd [path]:\\[folderName]\ncd / \t\t#切换到根目录\n```\n\n- **查看网卡**\n\n`ifconfig`\n\n- **查看当前位置**\n\n`pwd\t\t\t#查看当前目录位置`\n\n- **系统安全**\n\n**last、lastb命令：**\n\nlast命令用于显示用户最近登录信息。单独执行last命令，它会读取/var/log/wtmp的文件，并把 该文件的内容记录的登入系统的用户名单全部显示出来。\n\nlastb命令用于显示用户错误的登录列表，此指令可以发现系统的登录异常。单独执行lastb命令， 它会读取位于/var/log目录下，名称为btmp的文件，并把该文件内容记录的登入失败的用户名单，\n全部显示出来。\n\n**选项：**\n\n```bash\n-a：把从何处登入系统的主机名称或ip地址，显示在最后一行； \n-d：将IP地址转换成主机名称； \n-f <记录文件>：指定记录文件。 \n-n <显示列数>或-<显示列数>：设置列出名单的显示列数； \n-R：不显示登入系统的主机名称或IP地址；\n-x：显示系统关机，重新开机，以及执行等级的改变等信息。\n```\n\n**实例：**\n\n`last -10`\n\n**w命令：**\n\nw命令用于显示已经登陆系统的用户列表，并显示用户正在执行的指令。执行这个命令可得知目前 登入系统的用户有那些人，以及他们正在执行的程序。单独执行w命令会显示所有的用户，您也可\n指定用户名称，仅显示某位用户的相关信息。\n\n**选项：**\n\n```bash\n-h：不打印头信息； \n-u：当显示当前进程和cpu时间时忽略用户名； \n-s：使用短输出格式； \n-f：显示用户从哪登录；\n-V：显示版本信息\n```\n\n- **进程和作业管理**\n\n**ps命令**\n\nps命令用于报告当前系统的进程状态。可以搭配kill指令随时中断、删除不必要的程序。ps命令是最基本同时也是非常强大的进程查看命令，使用该命令可以确定有哪些进程正在运行和运行的状态 、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等，总之大部分信息都是可以通过执行该命令得到的。\n\n**选项：**\n\n```bash\n-e 显示所有进程。\n-f 全格式。\n-h 不显示标题。\n-l 长格式。\n-w 宽输出。\na 显示终端上的所有进程，包括其他用户的进程。\nr 只显示正在运行的进程。\nx 显示没有控制终端的进程。\n```\n\n**实例：**\n\n```bash\nps -aux \nps -ef\nps -aux | less\n```\n\n\n\n\n\n\n\n\n\n### 2.2.2 系统服务\n\n### 2.2.3 系统权限\n\n# 三、WEB基础\n\n## 3.1 Web服务构成\n\n### 3.1.1 了解web架构\n\n### 3.1.2 了解web服务\n\n## 3.2 HTTP协议原理\n\n### 3.2.1 了解HTTP请求方法\n\n### 3.2.2 了解HTTP请求状态码\n\n### 3.2.3 了解HTTP请求、响应头部\n\n## 3.3 Web日志分析方法\n\n### 3.3.1 了解Web日志分析基础知识\n\n# 四、安全漏洞基础\n\n### 4.1 Web TOP10 漏洞\n\n# 五、标准应急响应\n\n## 5.1 流程规范\n\n### 5.1.1 了解应急响应标准概念及分类\n\n### 5.1.2 了解应急响应处理流程\n\n### 5.1.3 掌握应急响应报告编写\n\n## 5.2 web应用应急响应\n\n### 5.2.1 Web 正常工作及入侵流程\n\n### 5.2.2 Webshell 安全事件及其应急处理\n\n### 5.2.3 黑链安全事件及其应急处理\n\n### 5.2.4 Web 日志分析\n\n## 5.3 Win系统应急响应\n\n### 5.3.1 Windows 病毒概念\n\n### 5.3.2 Windows 病毒查杀\n\n### 5.3.3 Windows 系统日志分析\n\n### 5.3.4 windows 应急响应入侵排查思路介绍\n\n### 5.3.5 临时处置方案\n\n### 5.3.6 日志分析，事件处置\n\n## 5.4 Linux 系统应急响应\n\n### 5.4.1 Linux 病毒概念\n\n### 5.4.2Linux 病毒查杀\n\n### 5.4.3 Linux 系统日志分析\n\n### 5.4.4 Linux 应急响应入侵排查思路介绍\n\n### 5.4.5 Linux 异常分析排查\n\n### 5.4.6 Linux 进程所对文件分析\n\n## 5.5 常见病毒处置案例 ##\n\n### 5.5.1 勒索挖矿病毒处置步骤\n\n### 5.5.2 勒索挖矿病毒加固建议\n\n# 六、安全运维 #\n\n## 6.1 TCE 安全产品介绍\n\n- 了解TCE常用安全产品的原理和使用\n\n## 6.2 服态势感知产品分析\n\n- 了解态势感知产品日志检测分析\n\n## 6.3 风险评估\n\n### 6.3.1 风险评估概述\n\n### 6.3.2 风险评估工作形式\n\n### 6.3.3 风险评估方法\n\n### 6.3.4 风险评估实施流程\n\n### 6.3.5 风险评估工具\n\n### 6.3.6 资产梳理\n\n## 6.4 重要时期安全保障\n\n### 6.4.1 网络安全攻防演练基础\n\n### 6.4.2 网络安全攻防演练进阶\n\n### 6.4.3 操作系统加固\n\n### 6.4.4 中间件加固\n\n## 6.5 渗透测试\n\n### 6.5.1 渗透测试基础\n\n### 6.5.2 信息收集技术\n\n### 6.5.3 常见渗透技术\n\n## 6.6 项目交付流程\n\n- 安服项目交付流程\n- 安服项目交付流程管理\n- 安服项目案例\n","source":"_posts/hw知识汇总.md","raw":"---\ntitle: hw知识汇总\ntop: false\ncover: false\ntoc: true\nmathjax: false\ndate: 2022-05-25 13:53:53\nauthor:\nimg:\ncoverImg:\npassword:\nsummary:\nkeywords:\ntags:\ncategories:\n---\n\n# 一、安全常识基础\n\n## 1.1 安全简介\n\n### 1.1.1 了解当前安全状况\n\n## 1.2 热门安全事件\n\n### 1.2.1 了解热门安全事件\n\n## 1.3 安全术语\n\n- **0DAY**\n\n“零日漏洞”(zero-day)又叫零时差攻击，是指被发现后立即被恶意利用的安全漏洞。\n\n- **RCE**\n\nRCE漏洞，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统。\n\n- **EXP**\n\nexploit，漏洞利用；利用漏洞攻击系统的代码。\n\n- **POC**\n\n漏洞证明，漏洞报告中，通过一段描述或一个样例来证明漏洞确实存在。\n\n- **CVE**\n\n公共漏洞和暴露，为广泛认同的信息安全漏洞或者已经暴露出来的弱点给出一个公共的名称。\n\n- **Payload**\n\n（有效攻击负载）是包含在你用于一次漏洞利用（exploit）中的攻击代码。\n\n- **后门**\n\n绕过安全控制而获取对程序或系统访问权的方法。\n\n- **webshell**\n\nWebshell是通过服务器开放的端口获取服务器的某些权限。\n\n### 1.3.6 常见高危风险端口\n\n| 端口       | 服务                         | 渗透测试                                                     |\n| :--------- | :--------------------------- | :----------------------------------------------------------- |\n| tcp 20,21  | FTP（文件传输协议）          | 允许匿名的上传下载,爆破,嗅探,win提权,远程执行(proftpd 1.3.5),各类后门(proftpd,vsftp 2.3.4) |\n| tcp 22     | SSH （安全外壳协议 ）        | 可根据已搜集到的信息尝试爆破,v1版本可中间人,ssh隧道及内网代理转发,文件传输等等 |\n| tcp 23     | Telnet （ 远程终端协议）     | 爆破,嗅探,一般常用于路由,交换登陆,可尝试弱口令               |\n| tcp 25     | SMTP（简单邮件传输协议）     | 邮件伪造,vrfy/expn查询邮件用户信息,可使用smtp-user-enum工具来自动跑 |\n| tcp/udp 53 | DNS（域名系统）              | 允许区域传送,dns劫持,缓存投毒,欺骗以及各种基于dns隧道的远控  |\n| tcp 80     | Web服务端口                  | 可尝试经典的topn,vpn,owa,webmail,目标oa,各类Java控制台,各类服务器Web管理面板,各类Web中间件漏洞利用,各类Web框架漏洞利用等等…… |\n| tcp 1433   | SQL Server（数据库管理系统） | 注入,提权,sa弱口令,爆破                                      |\n| tcp 3306   | MySQL（数据库）              | 注入,提权,爆破                                               |\n| tcp 3389   | Windows rdp（桌面协议）      | shift后门[需要03以下的系统],爆破,ms12-020                    |\n\n# 二、操作系统基础\n\n## 2.1 windows\n\n### 2.1.1 常用命令\n\n1. #### 用户/组管理\n\n-  **添加或删除用户**\n\n```bash\n#添加一个永不过期的用户，并设置登录口令\nnet user [userName][password] /add /expires:never\n#删除用户\nnet user [userName] /delete\n#将用户添加到管理员组\nnet localgroup Administrators [userName] /add\n#将用户从管理组删除\nnet localgroup Administrators [userName] /delete\n#修改当前用户密码\nnet user [userName][password]\n```\n\n-  **激活或禁用用户**\n\n```bash\n#激活用户\nnet user [userName] /active:yes\n#禁用用户\nnet user [userName] /active:no\n```\n\n-  **查看用户**\n\n​\t`net user`\n\n-  **新建或删除用户组**\n\n```bash\n#新建用户组\nnet localgroup [groupName] /add\n#删除用户组\nnet localgroup [groupName] /delete\n```\n\n2. #### 文件和目录\n\n-  **列出目录结构**\n\n```bash\ndir [path]:\\[folderName]\ndir /a:h /s\t\t#显示当前目录及其子目录下的隐藏文件\ndir /a:s /s\t\t#显示当前目录及其子目录下的系统文件\ndir /a:r /s\t\t#显示当前目录及其子目录下的只读文件\ndir /a:a /s\t\t#显示当前目录及其子目录下的存档文件\n```\n\n-  **创建文件并向文件输出信息**\n\n```bash\necho \"test text\" > 1.txt\t#覆盖\necho \"test rext\" >> 1.txt\t#追加\n```\n\n- **创建目录**\n\n​\t`md [folderName]`\n\n- **切换目录、盘符**\n\n```bash\ncd [path]:\\[folderName]\nd:\t\t#切换到 D 盘\n```\n\n- **删除文件或目录**\n\n```bash\ndel [fileName]\t\t\t#删除文件\nrd [folderName]\t\t\t#删除空目录（目录中不能有子目录和文件）\nrd [folderName] /S /Q\t#删除目录并同时删除目录中的子目录以及文件 \t\t\n```\n\n- **查看文件的内容**\n\n```bash\ntype [fileName]\t\t#在 DOS 下查看\nstart [fileName]\t#调用默认程序查看\n```\n\n- **设置文件或目录属性**\n\n```bash\nattrib +S +H [path]:\\[fileName]\t\t#添加系统文件和隐藏文件属性\n#处理文件夹及子文件里匹配的文件（包含该文件夹）\nattrib +S +H [path]:\\[fileName] /S /D\n/S 处理当前文件夹及其子文件夹中的匹配文件 \n/D 也处理文件夹\n```\n\n- **重命名**\n\n​\t`ren [fileName1][fileName2]`\n\n- **显示目录树**\n\n​\t`tree [path]:\\[folderName] /F`\n\n- **查找文件内容**\n\n```bash\nfind [/V][/C][/N][/I][/OFF[LINE]] \"string\" [[drive:][path][filename]]\n/V 显示所有未包含指定字符串的行。\n/C 仅显示包含字符串的行数。\n/N 显示行号。 \n/I 搜索字符串时忽略大小写。\n/OFF[LINE] 不要跳过具有脱机属性集的文件。\n\"string\" 指定要搜索的文本字符串。\n[drive:][path][filename] 指定要搜索的文件\nfind \"abc\" 1.txt \t#查找含有abc的行,并输出该行。\nfind /n \"abc\" 1.txt #查找含有abc的行,并输出该行和行号。\n```\n\n3. #### 网络/服务\n\n-  **ping**\n\n```bash\nping -t -l 65500 [IP or domain]\t\t#死亡之ping\n\t\t\t\t\t\t\t#65500 表示数据长度上限，-t 表示不停地ping目标地址\nping [ip]\n```\n\n-  **ipconfig**\n\n```bash\nipconfig -all\t\t\t#查看当前所有的ip 地址信息\nipconfig /release\t\t#清除当前获取到的ip 地址 \nipconfig /renew\t\t\t#重新获取ip 地址\n```\n\n-  **natstat**\n\n```bash\nnetstat -ano\t\t#列出所有端口的使用情况 \nnetstat -no\t\t\t#显示连接进程的情况，通常用于查找是否有木马程序\n```\n\n-  **arp （地址解析协议）**\n\n```bash\narp -a\t\t\t\t\t\t#显示 ARP 列表\narp -d\t\t\t\t\t\t#清除 ARP 列表，需要管理员权限\narp -s [ip][macAddress]\t\t#添加静态项\n```\n\n-  **tracert**\n\n​\t`tracert [ip or domain]\t\t#跟踪路由`\n\n-  **nslookup**\n\n​\t`nslookup www.baidu.com\t\t#查询指定域名的dns信息`\n\n-  **route**\n\n```bash\nroute print\t\t#打印路由表\nroute add [network] mask [mask] [next-hop]\t#新增路由\n```\n\n-  **net**\n\n```bash\nnet view\t\t#查看当前局域网内的其他连接者\nnet start\t\t#查看开启了哪些服务\nnet start [serviceName]\t\t#开启某一个服务\nnet stop [serviceName]\t\t#停止某一个服务\n#将共享的某一个服务器的C盘映射成K盘，攻击者常用命令\nnet use k:\\\\[ipAddress]\\c$\n#以下命令建议需管理员权限\nnet share\t\t#查看本地开启的共享\nnet share ipc$\t#开启ipc$共享\nnet share ipc$ /del \t#删除ipc$共享\nnet share c$ /del \t\t#删除C盘的共享\n```\n\n### 2.1.2 Windows服务\n\n- **常见进程**\n\nSystem.exe ：系统进程，一个重要的进程。\n\nSystem Idle Process.exe ：系统进程，它的作用是显示系统有多少闲置的cpu资源。\n\nsvchost Service Host Process：是一个标准的动态连接库主机处理服务。Svchost用来启动服务。Svchost只是负责为这些服务提供启动的条件，其自身并不能实现任何服务的功能，也不能为用户提供任何服务。 经常会被病毒利用进行dll注入的进程。\n\nexplorer.exe ：用于控制Windows图形，包括开始菜单、任务栏，桌面和文件管理。\n\nlsass.exe ：系统进程，这是一个本地安全权限服务管理 进程详解：管理 IP安全策略以及启动 ISAKMP/Oakley (IKE) 和 IP 安全驱动程序。\n\nservices.exe：系统进程用于管理启动和停止Windows服务，该进程也管理计算机启动和关机时的运 行的服务，所以很重要。\n\nalg.exe：这是一个应用层网关服务用于网络共享，alg.exe是微软Windows操作系统自带的程序。它 用于处理微软Windows网络连接共享和网络连接防火墙。\n\ncsrss.exe： 微软客户端/服务端运行时子系统。该进程管理Windows图形相关任务。注意：有些病 毒也会创业该进程。\n\nmdm.exe ：微软Windows进程除错程序。用于使用可视化脚本工具对Internet Explorer除错。\n\ntaskmgr.exe： 任务管理器进程。\n\nrundll32.exe：用于在内存中运行DLL文件，它们会在应用程序中被使用，一般有多个。\n\nsmss.exe： 微软Windows操作系统的一部分。\n\nwinlogon ：管理用户登录和退出的。\n\nWuauclt.exe：Windows自动升级管理程序。\n\nspoolsv.exe ：打印的进程\n\n- **进程查看辅助工具**\n\nPchunter \n\nProcessExplorer\n\nProcessHacker\n\nProcessMonitor\n火绒剑\n\n### 2.1.3 Windows权限\n\n- **某些文件位置**\n\nC:\\Windows：Windows操作系统中最核心的文件夹，大部分系统文件都在此文件夹下。 \n\nC:\\Windows\\Fonts：字体文件夹，有些病毒会存放在此文件夹下。\n\nC:\\Windows\\System32：Windows文件夹中最重要的文件夹，一般用于存放Windows的系统文件和硬件驱动程序。\n\nC:\\Windows\\Temp：系统临时文件夹，有些病毒会存放在此文件夹下。\n\nC:\\Windows\\system32\\dirvers ：Windows驱动文件夹，有些驱动病毒存放会在此文件夹下。\n\n- **本地用户和组类型**\n  - 用户账户\n    - 本地用户\n    - 域用户\n\n  - 组账户\n    - everyone组\n    - network组\n\n- **安全标识符**\n\n安全主体的代表（标识用户、组和计算机账户的唯一编码）\n\n范例：S-1-5-21-1736401710-1141508419-1540318053-1000\n\n- **隐藏账户**\n\n账户被隐藏，无法通过net user命令查看。但可在用户列表中进行查看。\n\n![image-20220523165226762](https://s2.loli.net/2022/05/25/ZgfBdbTLHarlQtR.png)\n\n![image-20220523165244788](https://s2.loli.net/2022/05/25/TsF7uil4qCjhLDU.png)\n\n- **文件权限**\n\n使用访问控制列表进行文件权限管理\n\n权限： 完全控制、修改、 读取和执行、读取、写入、特别的权限\n\n## 2.2 linux\n\n###  2.2.1 常用命令\n\n-  **命令帮助**\n\n **--help参数：**\n\n如果想查看某个命令的帮助说明，可以在命令后输入—help参数。\n\n **man命令：**\n\n查看命令的正式说明文档，比较长 \n\n **格式**：man （命令）\n\n1. #### **文件目录管理**\n\n-  **目录操作**\n\n **ls命令**：\n\nls命令用来显示目标列表，在Linux中是使用率较高的命令。ls命令的输出信息可以进行彩色加亮显示，以分区不同类型的文件。\n\n**命令格式：**\n\n`ls (选项) (参数)`\n\n```bash\nls -a\t\t#显示当前目录下包括隐藏文件在内的所有文件列表\nls -t\t\t#最近修改的文件显示在最上面\nls –l\t\t#列出文件和文件夹的详细信息\nls -al\t\t#显示当前目录下包括影藏文件在内的所有文件详细信息\nls -lt\t\t#按时间列出文件和文件夹详细信息\nls -ltr\t\t#按修改时间列出文件和文件夹详细信息\nls -lut\t\t#按访问时间顺序查看\n```\n\n**mkdir命令：**\n\nmkdir mkdir命令目录基本操作 mkdir命令用来创建目录。该命令创建由dirname命名的目录。如果 在目录名的前面没有加任何路径名，则在当前目录下创建由dirname指定的目录；如果给出了一个 已经存在的路径，将会在该目录下创建一个指定的目录。在创建目录时，应保证新建的目录与它所\n在目录下的文件没有重名。\n\n**命令格式**：\n\n`mkdir [选项] 目录名称`\n\n**实例：**\n\n```bash\n#在目录/tmp下建立子目录 /eshare/破军，并且只有文件主有读、写和执行权限，其他人无权访问\nmkdir -pm 700 /tmp/eshare/破军\t\t\n#-m 建立目录的同时设置目录的权限\n#-p 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录\n```\n\n**rm命令：**\n\nrm命令可以删除一个目录中的一个或多个文件或目录，也可以将某个目录及其下属的所有文件及其 子目录均删除掉。对于链接文件，只是删除整个链接文件，而原有文件保持不变。\n\n**命令格式：**\n\n`rm [选项] 目录名称`\n\n**实例：**\n\n````bash\nrm -f 文件名\t\t\t#强行删除文件系统不再提示\nrm -r 文件名\t\t\t#将当前目录及子目录中所有档案删除\n````\n\n- **文件权限属性设置**\n\n**chmd命令：**\n\nchmod命令用来变更文件或目录的权限。\n\n权限范围的表示法如下： \n\nu User，即文件或目录的拥有者；\n\ng Group，即文件或目录的所属群组；\n\no Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围； \n\na All，即全部的用户，包含拥有者，所属群组以及其他用户；\n\nr 读取权限，数字代号为\"4\"; \n\nw 写入权限，数字代号为\"2\"；\n\nx 执行或切换权限，数字代号为\"1\"；\n\n-不具任何权限，数字代号为\"0\"；\n\ns 特殊功能说明：变更文件或目录的权限。\n\nlinux 文件的用户权限的分析图\n\n![image-20220523172317446](https://s2.loli.net/2022/05/25/3KVlpm1g8UitvPe.png)\n\n```bsh\n#为文件hello.sh设置自己可以执行，组员可以写入的权限 \nchmod u+x,g+w hello.sh \nchmod u=rwx,g=rw,o=r hello.sh \nchmod 764 hello.sh\n#对文件hello.sh的u,g,o都设置可执行属性\nchmod a+x hello.sh\n```\n\n- **文件查找**\n\n**find命令：**\n\nfind命令用来在指定目录下查找文件。\n\n**语法：**\n\n`find (选项) (参数)`\n\n参数：查找文件的起始目录\n\n```bash\n#根据文件或者正则表达式进行匹配：\nfind / -name \"*.txt\"\t\t#在/目录下查找以.txt结尾的文件名\nfind . -name \"*.txt\" -o -name \"*.pdf\"\t#当前目录及子目录下查找所有以.txt和.pdf结尾的文件\n#否定参数\nfind /home ! -name \"*.txt\"\t#找出/home下不是以.txt结尾的文件\n#根据文件时间戳进行搜索\nfind . -type f 时间戳\nUNIX/Linux文件系统每个文件都有三种时间戳： \n访问时间（-atime/天，-amin/分钟）：用户最近一次访问时间。 \n修改时间（-mtime/天，-mmin/分钟）：文件最后一次修改时间。 \n变化时间（-ctime/天，-cmin/分钟）：文件数据元（例如权限等）最后一次修改时间。 \n-mtime –ctime都可以用来根据文件创建时间来查找，\n-ctime相对-mtime的区别就是权限修改了，-ctime可以查到，-mtime不行。\n#实例\nfind . -type f -atime -7\t\t#搜索最近七天内被访问过的所有文件\nfind . -type f -atime 7\t\t\t#搜索恰好在七天前被访问过的所有文件\nfind . -type f -atime +7\t\t#搜索超过七天被访问过的所有文件\nfind . -type f -amin +10\t\t#搜索访问时间超过10分钟的所有文件\n#根据文件权限/所有权进行匹配\nfind . -type f -perm 777\t\t#当前目录下搜索出权限为777的文件\nfind . -type f -name \"*.php\" ! -perm 644  #找出当前目录下权限不是644的php文件\nfind . -type f -user tom\t\t#找出当前目录用户tom拥有的所有文件\n```\n\n- **文件内容查看**\n\n**more命令：**\n\nmore命令，功能类似 cat ，cat命令是整个文件的内容从上到下显示在屏幕上。 more会以一页一 页的显示方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键\n就会往回（back）一页显示。\n\n**语法：**\n\n`more (选项) (参数)`\n\n**实例：**\n\n```bash\n#设more.txt是当前目录下的文件\nmore more.txt\t\t#在屏幕上分页显示文件more.txt的内容\nmore +3 more.txt \t#显示文件more.txt从第三行起的内容 \nmore -5 more.txt \t#每屏显示5行内容\n```\n\n **less命令：**\n\nless命令的作用与more十分相似，都可以用来浏览文字档案的内容，相对于more命令来说更有弹 性，功能更多。用less命令显示文件时，用PageUp键向上翻页，用PageDown键向下翻页。要退出\nless程序，应按Q键。\n\n**实例：**\n\n`less -N /etc/passwd \t\t#查看/etc/passwd文件并显示行号`\n\n- **文件编辑**\n\n**vi命令**\n\nvi命令是UNIX操作系统和类UNIX操作系统中最通用的全屏幕纯文本编辑器。Linux中的vi编辑器叫 vim，它是vi的增强版（vi Improved），与vi编辑器完全兼容，而且实现了很多增强功能。\n\n**常用内置命令**：\n\n```bash\nCtrl+u：向文件首翻半屏； Ctrl+d：向文件尾翻半屏；\nCtrl+f：向文件尾翻一屏； Ctrl+b：向文件首翻一屏；\nEsc：从编辑模式切换到命令模式； \nZZ：命令模式下保存当前文件所做的修改后退出vi；\n:(命令) 可以输入一些命令，:q！ 可以不保存退出。\n:行号：光标跳转到指定行的行首；\n:$：光标跳转到最后一行的行首； \nx或X：删除一个字符，x删除光标后的，而X删除光标前的；\nD：删除从当前光标到光标所在行尾的全部字符； \ndd：删除光标行正行内容； \nndd：删除当前行及其后n-1行； \np：粘贴文本操作，用于将缓存区的内容粘贴到当前光标所在位置的下方； \nP：粘贴文本操作，用于将缓存区的内容粘贴到当前光标所在位置的上方； \n/字符串：文本查找操作，用于从当前光标所在位置开始向文件尾部查找指定字符串的内容；\na：在当前字符后添加文本； \nA：在行末添加文本； \ni：在当前字符前插入文本； \nI：在行首插入文本；\no：在当前行后面插入一空行；\n```\n\n**sed命令：**\n\nsed是一种流编辑器，它是文本处理中非常重要的工具，能够完美的配合正则表达式使用。处理时，把当前处理的行存储在临时缓冲区中，接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，除非你使用重定向存储输出。\n\n**命令格式：**\n\n```bash\nsed [options] 'command' file(s)\nsed [options] -f scriptfile file(s)\n```\n\n**实例：**\n\n```bash\n#将file中的字符串book替换为books并输出，但不修改原文件\nsed 's/book/books/' file\n```\n\n- **文件过滤**\n\n**grep命令**：\n\n是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。\n\n**实例：**\n\n```bash\n#在文件中搜索一个单词，命令会返回一个包含\"match_pattern\"的文本行\ngrep match_pattern file_name \ngrep \"match_pattern\" file_name\n```\n\n- **文件压缩与解压**\n\n**tar命令**：\n\ntar命令可以为linux的文件和目录创建档案。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，或者将一个打包文件还原成若干文件。 \n`tar [选项] [生成的新文件] [待打包压缩文件]`\n\n**常用选项：**\n\n| 选项 | 选项说明                                          |\n| ---- | ------------------------------------------------- |\n| -c   | 新建打包文件，同 -v 一起使用 查看过程中打包文件名 |\n| -x   | 解压文件， -c 解压到对应的文件目录。              |\n| -f   | 后面接要处理的文件                                |\n| -j   | 通过bzip2方式压缩或解压，最后以.tar.br2 为后缀    |\n| -z   | 通过gzip方式压缩或解压，最后以.tar.gz 为后缀      |\n| -v   | 压缩或解压过程中，显示出来过程                    |\n\n**实例：**\n\n```bash\n#将文件全部打包成tar包\ntar -cvf log.tar log2012.log \t\t#仅打包，不压缩！ \ntar -zcvf log.tar.gz log2012.log \t#打包后，以 gzip 压缩 \ntar -jcvf log.tar.bz2 log2012.log \t#打包后，以 bzip2 压缩\n#将tar包解压缩\ntar -zxvf /opt/soft/test/log.tar.gz\n```\n\n- 文件权限属性设置\n\n**stat命令：**\n\nstat命令用于显示文件的状态信息。stat命令的输出信息比ls命令的输出信息要更详细。\n\n**选项：**\n\n ```bash\n-L：支持符号连接； \n-f：显示文件系统状态而非文件状态； \n-t：以简洁方式输出信息； \n--help：显示指令的帮助信息；\n--version：显示指令的版本信息。\n ```\n\n**实例：**\n\n```bash\n[root@localhost ~]# stat myfile \n[root@localhost ~]# stat -f myfile\n```\n\n- **切换目录、盘符**\n\n```bash\ncd [path]:\\[folderName]\ncd / \t\t#切换到根目录\n```\n\n- **查看网卡**\n\n`ifconfig`\n\n- **查看当前位置**\n\n`pwd\t\t\t#查看当前目录位置`\n\n- **系统安全**\n\n**last、lastb命令：**\n\nlast命令用于显示用户最近登录信息。单独执行last命令，它会读取/var/log/wtmp的文件，并把 该文件的内容记录的登入系统的用户名单全部显示出来。\n\nlastb命令用于显示用户错误的登录列表，此指令可以发现系统的登录异常。单独执行lastb命令， 它会读取位于/var/log目录下，名称为btmp的文件，并把该文件内容记录的登入失败的用户名单，\n全部显示出来。\n\n**选项：**\n\n```bash\n-a：把从何处登入系统的主机名称或ip地址，显示在最后一行； \n-d：将IP地址转换成主机名称； \n-f <记录文件>：指定记录文件。 \n-n <显示列数>或-<显示列数>：设置列出名单的显示列数； \n-R：不显示登入系统的主机名称或IP地址；\n-x：显示系统关机，重新开机，以及执行等级的改变等信息。\n```\n\n**实例：**\n\n`last -10`\n\n**w命令：**\n\nw命令用于显示已经登陆系统的用户列表，并显示用户正在执行的指令。执行这个命令可得知目前 登入系统的用户有那些人，以及他们正在执行的程序。单独执行w命令会显示所有的用户，您也可\n指定用户名称，仅显示某位用户的相关信息。\n\n**选项：**\n\n```bash\n-h：不打印头信息； \n-u：当显示当前进程和cpu时间时忽略用户名； \n-s：使用短输出格式； \n-f：显示用户从哪登录；\n-V：显示版本信息\n```\n\n- **进程和作业管理**\n\n**ps命令**\n\nps命令用于报告当前系统的进程状态。可以搭配kill指令随时中断、删除不必要的程序。ps命令是最基本同时也是非常强大的进程查看命令，使用该命令可以确定有哪些进程正在运行和运行的状态 、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等，总之大部分信息都是可以通过执行该命令得到的。\n\n**选项：**\n\n```bash\n-e 显示所有进程。\n-f 全格式。\n-h 不显示标题。\n-l 长格式。\n-w 宽输出。\na 显示终端上的所有进程，包括其他用户的进程。\nr 只显示正在运行的进程。\nx 显示没有控制终端的进程。\n```\n\n**实例：**\n\n```bash\nps -aux \nps -ef\nps -aux | less\n```\n\n\n\n\n\n\n\n\n\n### 2.2.2 系统服务\n\n### 2.2.3 系统权限\n\n# 三、WEB基础\n\n## 3.1 Web服务构成\n\n### 3.1.1 了解web架构\n\n### 3.1.2 了解web服务\n\n## 3.2 HTTP协议原理\n\n### 3.2.1 了解HTTP请求方法\n\n### 3.2.2 了解HTTP请求状态码\n\n### 3.2.3 了解HTTP请求、响应头部\n\n## 3.3 Web日志分析方法\n\n### 3.3.1 了解Web日志分析基础知识\n\n# 四、安全漏洞基础\n\n### 4.1 Web TOP10 漏洞\n\n# 五、标准应急响应\n\n## 5.1 流程规范\n\n### 5.1.1 了解应急响应标准概念及分类\n\n### 5.1.2 了解应急响应处理流程\n\n### 5.1.3 掌握应急响应报告编写\n\n## 5.2 web应用应急响应\n\n### 5.2.1 Web 正常工作及入侵流程\n\n### 5.2.2 Webshell 安全事件及其应急处理\n\n### 5.2.3 黑链安全事件及其应急处理\n\n### 5.2.4 Web 日志分析\n\n## 5.3 Win系统应急响应\n\n### 5.3.1 Windows 病毒概念\n\n### 5.3.2 Windows 病毒查杀\n\n### 5.3.3 Windows 系统日志分析\n\n### 5.3.4 windows 应急响应入侵排查思路介绍\n\n### 5.3.5 临时处置方案\n\n### 5.3.6 日志分析，事件处置\n\n## 5.4 Linux 系统应急响应\n\n### 5.4.1 Linux 病毒概念\n\n### 5.4.2Linux 病毒查杀\n\n### 5.4.3 Linux 系统日志分析\n\n### 5.4.4 Linux 应急响应入侵排查思路介绍\n\n### 5.4.5 Linux 异常分析排查\n\n### 5.4.6 Linux 进程所对文件分析\n\n## 5.5 常见病毒处置案例 ##\n\n### 5.5.1 勒索挖矿病毒处置步骤\n\n### 5.5.2 勒索挖矿病毒加固建议\n\n# 六、安全运维 #\n\n## 6.1 TCE 安全产品介绍\n\n- 了解TCE常用安全产品的原理和使用\n\n## 6.2 服态势感知产品分析\n\n- 了解态势感知产品日志检测分析\n\n## 6.3 风险评估\n\n### 6.3.1 风险评估概述\n\n### 6.3.2 风险评估工作形式\n\n### 6.3.3 风险评估方法\n\n### 6.3.4 风险评估实施流程\n\n### 6.3.5 风险评估工具\n\n### 6.3.6 资产梳理\n\n## 6.4 重要时期安全保障\n\n### 6.4.1 网络安全攻防演练基础\n\n### 6.4.2 网络安全攻防演练进阶\n\n### 6.4.3 操作系统加固\n\n### 6.4.4 中间件加固\n\n## 6.5 渗透测试\n\n### 6.5.1 渗透测试基础\n\n### 6.5.2 信息收集技术\n\n### 6.5.3 常见渗透技术\n\n## 6.6 项目交付流程\n\n- 安服项目交付流程\n- 安服项目交付流程管理\n- 安服项目案例\n","slug":"hw知识汇总","published":1,"updated":"2022-05-25T15:58:33.766Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3nxqfh70001h4c7d6wk177y","content":"<h1 id=\"一、安全常识基础\"><a href=\"#一、安全常识基础\" class=\"headerlink\" title=\"一、安全常识基础\"></a>一、安全常识基础</h1><h2 id=\"1-1-安全简介\"><a href=\"#1-1-安全简介\" class=\"headerlink\" title=\"1.1 安全简介\"></a>1.1 安全简介</h2><h3 id=\"1-1-1-了解当前安全状况\"><a href=\"#1-1-1-了解当前安全状况\" class=\"headerlink\" title=\"1.1.1 了解当前安全状况\"></a>1.1.1 了解当前安全状况</h3><h2 id=\"1-2-热门安全事件\"><a href=\"#1-2-热门安全事件\" class=\"headerlink\" title=\"1.2 热门安全事件\"></a>1.2 热门安全事件</h2><h3 id=\"1-2-1-了解热门安全事件\"><a href=\"#1-2-1-了解热门安全事件\" class=\"headerlink\" title=\"1.2.1 了解热门安全事件\"></a>1.2.1 了解热门安全事件</h3><h2 id=\"1-3-安全术语\"><a href=\"#1-3-安全术语\" class=\"headerlink\" title=\"1.3 安全术语\"></a>1.3 安全术语</h2><ul>\n<li><strong>0DAY</strong></li>\n</ul>\n<p>“零日漏洞”(zero-day)又叫零时差攻击，是指被发现后立即被恶意利用的安全漏洞。</p>\n<ul>\n<li><strong>RCE</strong></li>\n</ul>\n<p>RCE漏洞，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统。</p>\n<ul>\n<li><strong>EXP</strong></li>\n</ul>\n<p>exploit，漏洞利用；利用漏洞攻击系统的代码。</p>\n<ul>\n<li><strong>POC</strong></li>\n</ul>\n<p>漏洞证明，漏洞报告中，通过一段描述或一个样例来证明漏洞确实存在。</p>\n<ul>\n<li><strong>CVE</strong></li>\n</ul>\n<p>公共漏洞和暴露，为广泛认同的信息安全漏洞或者已经暴露出来的弱点给出一个公共的名称。</p>\n<ul>\n<li><strong>Payload</strong></li>\n</ul>\n<p>（有效攻击负载）是包含在你用于一次漏洞利用（exploit）中的攻击代码。</p>\n<ul>\n<li><strong>后门</strong></li>\n</ul>\n<p>绕过安全控制而获取对程序或系统访问权的方法。</p>\n<ul>\n<li><strong>webshell</strong></li>\n</ul>\n<p>Webshell是通过服务器开放的端口获取服务器的某些权限。</p>\n<h3 id=\"1-3-6-常见高危风险端口\"><a href=\"#1-3-6-常见高危风险端口\" class=\"headerlink\" title=\"1.3.6 常见高危风险端口\"></a>1.3.6 常见高危风险端口</h3><table>\n<thead>\n<tr>\n<th align=\"left\">端口</th>\n<th align=\"left\">服务</th>\n<th align=\"left\">渗透测试</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">tcp 20,21</td>\n<td align=\"left\">FTP（文件传输协议）</td>\n<td align=\"left\">允许匿名的上传下载,爆破,嗅探,win提权,远程执行(proftpd 1.3.5),各类后门(proftpd,vsftp 2.3.4)</td>\n</tr>\n<tr>\n<td align=\"left\">tcp 22</td>\n<td align=\"left\">SSH （安全外壳协议 ）</td>\n<td align=\"left\">可根据已搜集到的信息尝试爆破,v1版本可中间人,ssh隧道及内网代理转发,文件传输等等</td>\n</tr>\n<tr>\n<td align=\"left\">tcp 23</td>\n<td align=\"left\">Telnet （ 远程终端协议）</td>\n<td align=\"left\">爆破,嗅探,一般常用于路由,交换登陆,可尝试弱口令</td>\n</tr>\n<tr>\n<td align=\"left\">tcp 25</td>\n<td align=\"left\">SMTP（简单邮件传输协议）</td>\n<td align=\"left\">邮件伪造,vrfy/expn查询邮件用户信息,可使用smtp-user-enum工具来自动跑</td>\n</tr>\n<tr>\n<td align=\"left\">tcp/udp 53</td>\n<td align=\"left\">DNS（域名系统）</td>\n<td align=\"left\">允许区域传送,dns劫持,缓存投毒,欺骗以及各种基于dns隧道的远控</td>\n</tr>\n<tr>\n<td align=\"left\">tcp 80</td>\n<td align=\"left\">Web服务端口</td>\n<td align=\"left\">可尝试经典的topn,vpn,owa,webmail,目标oa,各类Java控制台,各类服务器Web管理面板,各类Web中间件漏洞利用,各类Web框架漏洞利用等等……</td>\n</tr>\n<tr>\n<td align=\"left\">tcp 1433</td>\n<td align=\"left\">SQL Server（数据库管理系统）</td>\n<td align=\"left\">注入,提权,sa弱口令,爆破</td>\n</tr>\n<tr>\n<td align=\"left\">tcp 3306</td>\n<td align=\"left\">MySQL（数据库）</td>\n<td align=\"left\">注入,提权,爆破</td>\n</tr>\n<tr>\n<td align=\"left\">tcp 3389</td>\n<td align=\"left\">Windows rdp（桌面协议）</td>\n<td align=\"left\">shift后门[需要03以下的系统],爆破,ms12-020</td>\n</tr>\n</tbody></table>\n<h1 id=\"二、操作系统基础\"><a href=\"#二、操作系统基础\" class=\"headerlink\" title=\"二、操作系统基础\"></a>二、操作系统基础</h1><h2 id=\"2-1-windows\"><a href=\"#2-1-windows\" class=\"headerlink\" title=\"2.1 windows\"></a>2.1 windows</h2><h3 id=\"2-1-1-常用命令\"><a href=\"#2-1-1-常用命令\" class=\"headerlink\" title=\"2.1.1 常用命令\"></a>2.1.1 常用命令</h3><ol>\n<li><h4 id=\"用户-x2F-组管理\"><a href=\"#用户-x2F-组管理\" class=\"headerlink\" title=\"用户/组管理\"></a>用户/组管理</h4></li>\n</ol>\n<ul>\n<li><strong>添加或删除用户</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#添加一个永不过期的用户，并设置登录口令</span>\nnet user <span class=\"token punctuation\">[</span>userName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>password<span class=\"token punctuation\">]</span> /add /expires:never\n<span class=\"token comment\">#删除用户</span>\nnet user <span class=\"token punctuation\">[</span>userName<span class=\"token punctuation\">]</span> /delete\n<span class=\"token comment\">#将用户添加到管理员组</span>\nnet localgroup Administrators <span class=\"token punctuation\">[</span>userName<span class=\"token punctuation\">]</span> /add\n<span class=\"token comment\">#将用户从管理组删除</span>\nnet localgroup Administrators <span class=\"token punctuation\">[</span>userName<span class=\"token punctuation\">]</span> /delete\n<span class=\"token comment\">#修改当前用户密码</span>\nnet user <span class=\"token punctuation\">[</span>userName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>password<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>激活或禁用用户</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#激活用户</span>\nnet user <span class=\"token punctuation\">[</span>userName<span class=\"token punctuation\">]</span> /active:yes\n<span class=\"token comment\">#禁用用户</span>\nnet user <span class=\"token punctuation\">[</span>userName<span class=\"token punctuation\">]</span> /active:no<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>查看用户</strong></li>\n</ul>\n<p>​\t<code>net user</code></p>\n<ul>\n<li><strong>新建或删除用户组</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#新建用户组</span>\nnet localgroup <span class=\"token punctuation\">[</span>groupName<span class=\"token punctuation\">]</span> /add\n<span class=\"token comment\">#删除用户组</span>\nnet localgroup <span class=\"token punctuation\">[</span>groupName<span class=\"token punctuation\">]</span> /delete<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li><h4 id=\"文件和目录\"><a href=\"#文件和目录\" class=\"headerlink\" title=\"文件和目录\"></a>文件和目录</h4></li>\n</ol>\n<ul>\n<li><strong>列出目录结构</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">dir</span> <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">[</span>folderName<span class=\"token punctuation\">]</span>\n<span class=\"token function\">dir</span> /a:h /s\t\t<span class=\"token comment\">#显示当前目录及其子目录下的隐藏文件</span>\n<span class=\"token function\">dir</span> /a:s /s\t\t<span class=\"token comment\">#显示当前目录及其子目录下的系统文件</span>\n<span class=\"token function\">dir</span> /a:r /s\t\t<span class=\"token comment\">#显示当前目录及其子目录下的只读文件</span>\n<span class=\"token function\">dir</span> /a:a /s\t\t<span class=\"token comment\">#显示当前目录及其子目录下的存档文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>创建文件并向文件输出信息</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"test text\"</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span>.txt\t<span class=\"token comment\">#覆盖</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"test rext\"</span> <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">1</span>.txt\t<span class=\"token comment\">#追加</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>创建目录</strong></li>\n</ul>\n<p>​\t<code>md [folderName]</code></p>\n<ul>\n<li><strong>切换目录、盘符</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">[</span>folderName<span class=\"token punctuation\">]</span>\nd:\t\t<span class=\"token comment\">#切换到 D 盘</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>删除文件或目录</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">del <span class=\"token punctuation\">[</span>fileName<span class=\"token punctuation\">]</span>\t\t\t<span class=\"token comment\">#删除文件</span>\nrd <span class=\"token punctuation\">[</span>folderName<span class=\"token punctuation\">]</span>\t\t\t<span class=\"token comment\">#删除空目录（目录中不能有子目录和文件）</span>\nrd <span class=\"token punctuation\">[</span>folderName<span class=\"token punctuation\">]</span> /S /Q\t<span class=\"token comment\">#删除目录并同时删除目录中的子目录以及文件 \t\t</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>查看文件的内容</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">type</span> <span class=\"token punctuation\">[</span>fileName<span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">#在 DOS 下查看</span>\nstart <span class=\"token punctuation\">[</span>fileName<span class=\"token punctuation\">]</span>\t<span class=\"token comment\">#调用默认程序查看</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>设置文件或目录属性</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">attrib +S +H <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">[</span>fileName<span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">#添加系统文件和隐藏文件属性</span>\n<span class=\"token comment\">#处理文件夹及子文件里匹配的文件（包含该文件夹）</span>\nattrib +S +H <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">[</span>fileName<span class=\"token punctuation\">]</span> /S /D\n/S 处理当前文件夹及其子文件夹中的匹配文件 \n/D 也处理文件夹<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>重命名</strong></li>\n</ul>\n<p>​\t<code>ren [fileName1][fileName2]</code></p>\n<ul>\n<li><strong>显示目录树</strong></li>\n</ul>\n<p>​\t<code>tree [path]:\\[folderName] /F</code></p>\n<ul>\n<li><strong>查找文件内容</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> <span class=\"token punctuation\">[</span>/V<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>/C<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>/N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>/I<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>/OFF<span class=\"token punctuation\">[</span>LINE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"string\"</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>drive:<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>filename<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n/V 显示所有未包含指定字符串的行。\n/C 仅显示包含字符串的行数。\n/N 显示行号。 \n/I 搜索字符串时忽略大小写。\n/OFF<span class=\"token punctuation\">[</span>LINE<span class=\"token punctuation\">]</span> 不要跳过具有脱机属性集的文件。\n<span class=\"token string\">\"string\"</span> 指定要搜索的文本字符串。\n<span class=\"token punctuation\">[</span>drive:<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>filename<span class=\"token punctuation\">]</span> 指定要搜索的文件\n<span class=\"token function\">find</span> <span class=\"token string\">\"abc\"</span> <span class=\"token number\">1</span>.txt \t<span class=\"token comment\">#查找含有abc的行,并输出该行。</span>\n<span class=\"token function\">find</span> /n <span class=\"token string\">\"abc\"</span> <span class=\"token number\">1</span>.txt <span class=\"token comment\">#查找含有abc的行,并输出该行和行号。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li><h4 id=\"网络-x2F-服务\"><a href=\"#网络-x2F-服务\" class=\"headerlink\" title=\"网络/服务\"></a>网络/服务</h4></li>\n</ol>\n<ul>\n<li><strong>ping</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ping</span> -t -l <span class=\"token number\">65500</span> <span class=\"token punctuation\">[</span>IP or domain<span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">#死亡之ping</span>\n\t\t\t\t\t\t\t<span class=\"token comment\">#65500 表示数据长度上限，-t 表示不停地ping目标地址</span>\n<span class=\"token function\">ping</span> <span class=\"token punctuation\">[</span>ip<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>ipconfig</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ipconfig -all\t\t\t<span class=\"token comment\">#查看当前所有的ip 地址信息</span>\nipconfig /release\t\t<span class=\"token comment\">#清除当前获取到的ip 地址 </span>\nipconfig /renew\t\t\t<span class=\"token comment\">#重新获取ip 地址</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>natstat</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">netstat</span> -ano\t\t<span class=\"token comment\">#列出所有端口的使用情况 </span>\n<span class=\"token function\">netstat</span> -no\t\t\t<span class=\"token comment\">#显示连接进程的情况，通常用于查找是否有木马程序</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>arp （地址解析协议）</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">arp -a\t\t\t\t\t\t<span class=\"token comment\">#显示 ARP 列表</span>\narp -d\t\t\t\t\t\t<span class=\"token comment\">#清除 ARP 列表，需要管理员权限</span>\narp -s <span class=\"token punctuation\">[</span>ip<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>macAddress<span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">#添加静态项</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>tracert</strong></li>\n</ul>\n<p>​\t<code>tracert [ip or domain]\t\t#跟踪路由</code></p>\n<ul>\n<li><strong>nslookup</strong></li>\n</ul>\n<p>​\t<code>nslookup www.baidu.com\t\t#查询指定域名的dns信息</code></p>\n<ul>\n<li><strong>route</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">route print\t\t<span class=\"token comment\">#打印路由表</span>\nroute <span class=\"token function\">add</span> <span class=\"token punctuation\">[</span>network<span class=\"token punctuation\">]</span> mask <span class=\"token punctuation\">[</span>mask<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>next-hop<span class=\"token punctuation\">]</span>\t<span class=\"token comment\">#新增路由</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>net</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">net view\t\t<span class=\"token comment\">#查看当前局域网内的其他连接者</span>\nnet start\t\t<span class=\"token comment\">#查看开启了哪些服务</span>\nnet start <span class=\"token punctuation\">[</span>serviceName<span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">#开启某一个服务</span>\nnet stop <span class=\"token punctuation\">[</span>serviceName<span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">#停止某一个服务</span>\n<span class=\"token comment\">#将共享的某一个服务器的C盘映射成K盘，攻击者常用命令</span>\nnet use k:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span><span class=\"token punctuation\">[</span>ipAddress<span class=\"token punctuation\">]</span><span class=\"token punctuation\">\\</span>c$\n<span class=\"token comment\">#以下命令建议需管理员权限</span>\nnet share\t\t<span class=\"token comment\">#查看本地开启的共享</span>\nnet share ipc$\t<span class=\"token comment\">#开启ipc$共享</span>\nnet share ipc$ /del \t<span class=\"token comment\">#删除ipc$共享</span>\nnet share c$ /del \t\t<span class=\"token comment\">#删除C盘的共享</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-1-2-Windows服务\"><a href=\"#2-1-2-Windows服务\" class=\"headerlink\" title=\"2.1.2 Windows服务\"></a>2.1.2 Windows服务</h3><ul>\n<li><strong>常见进程</strong></li>\n</ul>\n<p>System.exe ：系统进程，一个重要的进程。</p>\n<p>System Idle Process.exe ：系统进程，它的作用是显示系统有多少闲置的cpu资源。</p>\n<p>svchost Service Host Process：是一个标准的动态连接库主机处理服务。Svchost用来启动服务。Svchost只是负责为这些服务提供启动的条件，其自身并不能实现任何服务的功能，也不能为用户提供任何服务。 经常会被病毒利用进行dll注入的进程。</p>\n<p>explorer.exe ：用于控制Windows图形，包括开始菜单、任务栏，桌面和文件管理。</p>\n<p>lsass.exe ：系统进程，这是一个本地安全权限服务管理 进程详解：管理 IP安全策略以及启动 ISAKMP/Oakley (IKE) 和 IP 安全驱动程序。</p>\n<p>services.exe：系统进程用于管理启动和停止Windows服务，该进程也管理计算机启动和关机时的运 行的服务，所以很重要。</p>\n<p>alg.exe：这是一个应用层网关服务用于网络共享，alg.exe是微软Windows操作系统自带的程序。它 用于处理微软Windows网络连接共享和网络连接防火墙。</p>\n<p>csrss.exe： 微软客户端/服务端运行时子系统。该进程管理Windows图形相关任务。注意：有些病 毒也会创业该进程。</p>\n<p>mdm.exe ：微软Windows进程除错程序。用于使用可视化脚本工具对Internet Explorer除错。</p>\n<p>taskmgr.exe： 任务管理器进程。</p>\n<p>rundll32.exe：用于在内存中运行DLL文件，它们会在应用程序中被使用，一般有多个。</p>\n<p>smss.exe： 微软Windows操作系统的一部分。</p>\n<p>winlogon ：管理用户登录和退出的。</p>\n<p>Wuauclt.exe：Windows自动升级管理程序。</p>\n<p>spoolsv.exe ：打印的进程</p>\n<ul>\n<li><strong>进程查看辅助工具</strong></li>\n</ul>\n<p>Pchunter </p>\n<p>ProcessExplorer</p>\n<p>ProcessHacker</p>\n<p>ProcessMonitor<br>火绒剑</p>\n<h3 id=\"2-1-3-Windows权限\"><a href=\"#2-1-3-Windows权限\" class=\"headerlink\" title=\"2.1.3 Windows权限\"></a>2.1.3 Windows权限</h3><ul>\n<li><strong>某些文件位置</strong></li>\n</ul>\n<p>C:\\Windows：Windows操作系统中最核心的文件夹，大部分系统文件都在此文件夹下。 </p>\n<p>C:\\Windows\\Fonts：字体文件夹，有些病毒会存放在此文件夹下。</p>\n<p>C:\\Windows\\System32：Windows文件夹中最重要的文件夹，一般用于存放Windows的系统文件和硬件驱动程序。</p>\n<p>C:\\Windows\\Temp：系统临时文件夹，有些病毒会存放在此文件夹下。</p>\n<p>C:\\Windows\\system32\\dirvers ：Windows驱动文件夹，有些驱动病毒存放会在此文件夹下。</p>\n<ul>\n<li><p><strong>本地用户和组类型</strong></p>\n<ul>\n<li><p>用户账户</p>\n<ul>\n<li>本地用户</li>\n<li>域用户</li>\n</ul>\n</li>\n<li><p>组账户</p>\n<ul>\n<li>everyone组</li>\n<li>network组</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>安全标识符</strong></p>\n</li>\n</ul>\n<p>安全主体的代表（标识用户、组和计算机账户的唯一编码）</p>\n<p>范例：S-1-5-21-1736401710-1141508419-1540318053-1000</p>\n<ul>\n<li><strong>隐藏账户</strong></li>\n</ul>\n<p>账户被隐藏，无法通过net user命令查看。但可在用户列表中进行查看。</p>\n<p><img src=\"https://s2.loli.net/2022/05/25/ZgfBdbTLHarlQtR.png\" alt=\"image-20220523165226762\"></p>\n<p><img src=\"https://s2.loli.net/2022/05/25/TsF7uil4qCjhLDU.png\" alt=\"image-20220523165244788\"></p>\n<ul>\n<li><strong>文件权限</strong></li>\n</ul>\n<p>使用访问控制列表进行文件权限管理</p>\n<p>权限： 完全控制、修改、 读取和执行、读取、写入、特别的权限</p>\n<h2 id=\"2-2-linux\"><a href=\"#2-2-linux\" class=\"headerlink\" title=\"2.2 linux\"></a>2.2 linux</h2><h3 id=\"2-2-1-常用命令\"><a href=\"#2-2-1-常用命令\" class=\"headerlink\" title=\"2.2.1 常用命令\"></a>2.2.1 常用命令</h3><ul>\n<li><strong>命令帮助</strong></li>\n</ul>\n<p> <strong>–help参数：</strong></p>\n<p>如果想查看某个命令的帮助说明，可以在命令后输入—help参数。</p>\n<p> <strong>man命令：</strong></p>\n<p>查看命令的正式说明文档，比较长 </p>\n<p> <strong>格式</strong>：man （命令）</p>\n<ol>\n<li><h4 id=\"文件目录管理\"><a href=\"#文件目录管理\" class=\"headerlink\" title=\"文件目录管理\"></a><strong>文件目录管理</strong></h4></li>\n</ol>\n<ul>\n<li><strong>目录操作</strong></li>\n</ul>\n<p> <strong>ls命令</strong>：</p>\n<p>ls命令用来显示目标列表，在Linux中是使用率较高的命令。ls命令的输出信息可以进行彩色加亮显示，以分区不同类型的文件。</p>\n<p><strong>命令格式：</strong></p>\n<p><code>ls (选项) (参数)</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> -a\t\t<span class=\"token comment\">#显示当前目录下包括隐藏文件在内的所有文件列表</span>\n<span class=\"token function\">ls</span> -t\t\t<span class=\"token comment\">#最近修改的文件显示在最上面</span>\n<span class=\"token function\">ls</span> –l\t\t<span class=\"token comment\">#列出文件和文件夹的详细信息</span>\n<span class=\"token function\">ls</span> -al\t\t<span class=\"token comment\">#显示当前目录下包括影藏文件在内的所有文件详细信息</span>\n<span class=\"token function\">ls</span> -lt\t\t<span class=\"token comment\">#按时间列出文件和文件夹详细信息</span>\n<span class=\"token function\">ls</span> -ltr\t\t<span class=\"token comment\">#按修改时间列出文件和文件夹详细信息</span>\n<span class=\"token function\">ls</span> -lut\t\t<span class=\"token comment\">#按访问时间顺序查看</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>mkdir命令：</strong></p>\n<p>mkdir mkdir命令目录基本操作 mkdir命令用来创建目录。该命令创建由dirname命名的目录。如果 在目录名的前面没有加任何路径名，则在当前目录下创建由dirname指定的目录；如果给出了一个 已经存在的路径，将会在该目录下创建一个指定的目录。在创建目录时，应保证新建的目录与它所<br>在目录下的文件没有重名。</p>\n<p><strong>命令格式</strong>：</p>\n<p><code>mkdir [选项] 目录名称</code></p>\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#在目录/tmp下建立子目录 /eshare/破军，并且只有文件主有读、写和执行权限，其他人无权访问</span>\n<span class=\"token function\">mkdir</span> -pm <span class=\"token number\">700</span> /tmp/eshare/破军\t\t\n<span class=\"token comment\">#-m 建立目录的同时设置目录的权限</span>\n<span class=\"token comment\">#-p 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>rm命令：</strong></p>\n<p>rm命令可以删除一个目录中的一个或多个文件或目录，也可以将某个目录及其下属的所有文件及其 子目录均删除掉。对于链接文件，只是删除整个链接文件，而原有文件保持不变。</p>\n<p><strong>命令格式：</strong></p>\n<p><code>rm [选项] 目录名称</code></p>\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> -f 文件名\t\t\t<span class=\"token comment\">#强行删除文件系统不再提示</span>\n<span class=\"token function\">rm</span> -r 文件名\t\t\t<span class=\"token comment\">#将当前目录及子目录中所有档案删除</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>文件权限属性设置</strong></li>\n</ul>\n<p><strong>chmd命令：</strong></p>\n<p>chmod命令用来变更文件或目录的权限。</p>\n<p>权限范围的表示法如下： </p>\n<p>u User，即文件或目录的拥有者；</p>\n<p>g Group，即文件或目录的所属群组；</p>\n<p>o Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围； </p>\n<p>a All，即全部的用户，包含拥有者，所属群组以及其他用户；</p>\n<p>r 读取权限，数字代号为”4”; </p>\n<p>w 写入权限，数字代号为”2”；</p>\n<p>x 执行或切换权限，数字代号为”1”；</p>\n<p>-不具任何权限，数字代号为”0”；</p>\n<p>s 特殊功能说明：变更文件或目录的权限。</p>\n<p>linux 文件的用户权限的分析图</p>\n<p><img src=\"https://s2.loli.net/2022/05/25/3KVlpm1g8UitvPe.png\" alt=\"image-20220523172317446\"></p>\n<pre class=\"line-numbers language-bsh\" data-language=\"bsh\"><code class=\"language-bsh\">#为文件hello.sh设置自己可以执行，组员可以写入的权限 \nchmod u+x,g+w hello.sh \nchmod u=rwx,g=rw,o=r hello.sh \nchmod 764 hello.sh\n#对文件hello.sh的u,g,o都设置可执行属性\nchmod a+x hello.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>文件查找</strong></li>\n</ul>\n<p><strong>find命令：</strong></p>\n<p>find命令用来在指定目录下查找文件。</p>\n<p><strong>语法：</strong></p>\n<p><code>find (选项) (参数)</code></p>\n<p>参数：查找文件的起始目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#根据文件或者正则表达式进行匹配：</span>\n<span class=\"token function\">find</span> / -name <span class=\"token string\">\"*.txt\"</span>\t\t<span class=\"token comment\">#在/目录下查找以.txt结尾的文件名</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -name <span class=\"token string\">\"*.txt\"</span> -o -name <span class=\"token string\">\"*.pdf\"</span>\t<span class=\"token comment\">#当前目录及子目录下查找所有以.txt和.pdf结尾的文件</span>\n<span class=\"token comment\">#否定参数</span>\n<span class=\"token function\">find</span> /home <span class=\"token operator\">!</span> -name <span class=\"token string\">\"*.txt\"</span>\t<span class=\"token comment\">#找出/home下不是以.txt结尾的文件</span>\n<span class=\"token comment\">#根据文件时间戳进行搜索</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f 时间戳\nUNIX/Linux文件系统每个文件都有三种时间戳： \n访问时间（-atime/天，-amin/分钟）：用户最近一次访问时间。 \n修改时间（-mtime/天，-mmin/分钟）：文件最后一次修改时间。 \n变化时间（-ctime/天，-cmin/分钟）：文件数据元（例如权限等）最后一次修改时间。 \n-mtime –ctime都可以用来根据文件创建时间来查找，\n-ctime相对-mtime的区别就是权限修改了，-ctime可以查到，-mtime不行。\n<span class=\"token comment\">#实例</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -atime -7\t\t<span class=\"token comment\">#搜索最近七天内被访问过的所有文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -atime <span class=\"token number\">7</span>\t\t\t<span class=\"token comment\">#搜索恰好在七天前被访问过的所有文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -atime +7\t\t<span class=\"token comment\">#搜索超过七天被访问过的所有文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -amin +10\t\t<span class=\"token comment\">#搜索访问时间超过10分钟的所有文件</span>\n<span class=\"token comment\">#根据文件权限/所有权进行匹配</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -perm <span class=\"token number\">777</span>\t\t<span class=\"token comment\">#当前目录下搜索出权限为777的文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -name <span class=\"token string\">\"*.php\"</span> <span class=\"token operator\">!</span> -perm <span class=\"token number\">644</span>  <span class=\"token comment\">#找出当前目录下权限不是644的php文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -user tom\t\t<span class=\"token comment\">#找出当前目录用户tom拥有的所有文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>文件内容查看</strong></li>\n</ul>\n<p><strong>more命令：</strong></p>\n<p>more命令，功能类似 cat ，cat命令是整个文件的内容从上到下显示在屏幕上。 more会以一页一 页的显示方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键<br>就会往回（back）一页显示。</p>\n<p><strong>语法：</strong></p>\n<p><code>more (选项) (参数)</code></p>\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#设more.txt是当前目录下的文件</span>\n<span class=\"token function\">more</span> more.txt\t\t<span class=\"token comment\">#在屏幕上分页显示文件more.txt的内容</span>\n<span class=\"token function\">more</span> +3 more.txt \t<span class=\"token comment\">#显示文件more.txt从第三行起的内容 </span>\n<span class=\"token function\">more</span> -5 more.txt \t<span class=\"token comment\">#每屏显示5行内容</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p> <strong>less命令：</strong></p>\n<p>less命令的作用与more十分相似，都可以用来浏览文字档案的内容，相对于more命令来说更有弹 性，功能更多。用less命令显示文件时，用PageUp键向上翻页，用PageDown键向下翻页。要退出<br>less程序，应按Q键。</p>\n<p><strong>实例：</strong></p>\n<p><code>less -N /etc/passwd \t\t#查看/etc/passwd文件并显示行号</code></p>\n<ul>\n<li><strong>文件编辑</strong></li>\n</ul>\n<p><strong>vi命令</strong></p>\n<p>vi命令是UNIX操作系统和类UNIX操作系统中最通用的全屏幕纯文本编辑器。Linux中的vi编辑器叫 vim，它是vi的增强版（vi Improved），与vi编辑器完全兼容，而且实现了很多增强功能。</p>\n<p><strong>常用内置命令</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Ctrl+u：向文件首翻半屏； Ctrl+d：向文件尾翻半屏；\nCtrl+f：向文件尾翻一屏； Ctrl+b：向文件首翻一屏；\nEsc：从编辑模式切换到命令模式； \nZZ：命令模式下保存当前文件所做的修改后退出vi；\n:<span class=\"token punctuation\">(</span>命令<span class=\"token punctuation\">)</span> 可以输入一些命令，:q！ 可以不保存退出。\n:行号：光标跳转到指定行的行首；\n:$：光标跳转到最后一行的行首； \nx或X：删除一个字符，x删除光标后的，而X删除光标前的；\nD：删除从当前光标到光标所在行尾的全部字符； \ndd：删除光标行正行内容； \nndd：删除当前行及其后n-1行； \np：粘贴文本操作，用于将缓存区的内容粘贴到当前光标所在位置的下方； \nP：粘贴文本操作，用于将缓存区的内容粘贴到当前光标所在位置的上方； \n/字符串：文本查找操作，用于从当前光标所在位置开始向文件尾部查找指定字符串的内容；\na：在当前字符后添加文本； \nA：在行末添加文本； \ni：在当前字符前插入文本； \nI：在行首插入文本；\no：在当前行后面插入一空行；<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>sed命令：</strong></p>\n<p>sed是一种流编辑器，它是文本处理中非常重要的工具，能够完美的配合正则表达式使用。处理时，把当前处理的行存储在临时缓冲区中，接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，除非你使用重定向存储输出。</p>\n<p><strong>命令格式：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sed</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token string\">'command'</span> file<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token function\">sed</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> -f scriptfile file<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#将file中的字符串book替换为books并输出，但不修改原文件</span>\n<span class=\"token function\">sed</span> <span class=\"token string\">'s/book/books/'</span> <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>文件过滤</strong></li>\n</ul>\n<p><strong>grep命令</strong>：</p>\n<p>是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p>\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#在文件中搜索一个单词，命令会返回一个包含\"match_pattern\"的文本行</span>\n<span class=\"token function\">grep</span> match_pattern file_name \n<span class=\"token function\">grep</span> <span class=\"token string\">\"match_pattern\"</span> file_name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>文件压缩与解压</strong></li>\n</ul>\n<p><strong>tar命令</strong>：</p>\n<p>tar命令可以为linux的文件和目录创建档案。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，或者将一个打包文件还原成若干文件。<br><code>tar [选项] [生成的新文件] [待打包压缩文件]</code></p>\n<p><strong>常用选项：</strong></p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>选项说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-c</td>\n<td>新建打包文件，同 -v 一起使用 查看过程中打包文件名</td>\n</tr>\n<tr>\n<td>-x</td>\n<td>解压文件， -c 解压到对应的文件目录。</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>后面接要处理的文件</td>\n</tr>\n<tr>\n<td>-j</td>\n<td>通过bzip2方式压缩或解压，最后以.tar.br2 为后缀</td>\n</tr>\n<tr>\n<td>-z</td>\n<td>通过gzip方式压缩或解压，最后以.tar.gz 为后缀</td>\n</tr>\n<tr>\n<td>-v</td>\n<td>压缩或解压过程中，显示出来过程</td>\n</tr>\n</tbody></table>\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#将文件全部打包成tar包</span>\n<span class=\"token function\">tar</span> -cvf log.tar log2012.log \t\t<span class=\"token comment\">#仅打包，不压缩！ </span>\n<span class=\"token function\">tar</span> -zcvf log.tar.gz log2012.log \t<span class=\"token comment\">#打包后，以 gzip 压缩 </span>\n<span class=\"token function\">tar</span> -jcvf log.tar.bz2 log2012.log \t<span class=\"token comment\">#打包后，以 bzip2 压缩</span>\n<span class=\"token comment\">#将tar包解压缩</span>\n<span class=\"token function\">tar</span> -zxvf /opt/soft/test/log.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>文件权限属性设置</li>\n</ul>\n<p><strong>stat命令：</strong></p>\n<p>stat命令用于显示文件的状态信息。stat命令的输出信息比ls命令的输出信息要更详细。</p>\n<p><strong>选项：</strong></p>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">-L：支持符号连接； \n-f：显示文件系统状态而非文件状态； \n-t：以简洁方式输出信息； \n--help：显示指令的帮助信息；\n--version：显示指令的版本信息。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># stat myfile </span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># stat -f myfile</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>切换目录、盘符</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">[</span>folderName<span class=\"token punctuation\">]</span>\n<span class=\"token builtin class-name\">cd</span> / \t\t<span class=\"token comment\">#切换到根目录</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>查看网卡</strong></li>\n</ul>\n<p><code>ifconfig</code></p>\n<ul>\n<li><strong>查看当前位置</strong></li>\n</ul>\n<p><code>pwd\t\t\t#查看当前目录位置</code></p>\n<ul>\n<li><strong>系统安全</strong></li>\n</ul>\n<p><strong>last、lastb命令：</strong></p>\n<p>last命令用于显示用户最近登录信息。单独执行last命令，它会读取/var/log/wtmp的文件，并把 该文件的内容记录的登入系统的用户名单全部显示出来。</p>\n<p>lastb命令用于显示用户错误的登录列表，此指令可以发现系统的登录异常。单独执行lastb命令， 它会读取位于/var/log目录下，名称为btmp的文件，并把该文件内容记录的登入失败的用户名单，<br>全部显示出来。</p>\n<p><strong>选项：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">-a：把从何处登入系统的主机名称或ip地址，显示在最后一行； \n-d：将IP地址转换成主机名称； \n-f <span class=\"token operator\">&lt;</span>记录文件<span class=\"token operator\">&gt;</span>：指定记录文件。 \n-n <span class=\"token operator\">&lt;</span>显示列数<span class=\"token operator\">&gt;</span>或-<span class=\"token operator\">&lt;</span>显示列数<span class=\"token operator\">&gt;</span>：设置列出名单的显示列数； \n-R：不显示登入系统的主机名称或IP地址；\n-x：显示系统关机，重新开机，以及执行等级的改变等信息。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>实例：</strong></p>\n<p><code>last -10</code></p>\n<p><strong>w命令：</strong></p>\n<p>w命令用于显示已经登陆系统的用户列表，并显示用户正在执行的指令。执行这个命令可得知目前 登入系统的用户有那些人，以及他们正在执行的程序。单独执行w命令会显示所有的用户，您也可<br>指定用户名称，仅显示某位用户的相关信息。</p>\n<p><strong>选项：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">-h：不打印头信息； \n-u：当显示当前进程和cpu时间时忽略用户名； \n-s：使用短输出格式； \n-f：显示用户从哪登录；\n-V：显示版本信息<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>进程和作业管理</strong></li>\n</ul>\n<p><strong>ps命令</strong></p>\n<p>ps命令用于报告当前系统的进程状态。可以搭配kill指令随时中断、删除不必要的程序。ps命令是最基本同时也是非常强大的进程查看命令，使用该命令可以确定有哪些进程正在运行和运行的状态 、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等，总之大部分信息都是可以通过执行该命令得到的。</p>\n<p><strong>选项：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">-e 显示所有进程。\n-f 全格式。\n-h 不显示标题。\n-l 长格式。\n-w 宽输出。\na 显示终端上的所有进程，包括其他用户的进程。\nr 只显示正在运行的进程。\nx 显示没有控制终端的进程。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ps</span> -aux \n<span class=\"token function\">ps</span> -ef\n<span class=\"token function\">ps</span> -aux <span class=\"token operator\">|</span> <span class=\"token function\">less</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n\n\n\n\n<h3 id=\"2-2-2-系统服务\"><a href=\"#2-2-2-系统服务\" class=\"headerlink\" title=\"2.2.2 系统服务\"></a>2.2.2 系统服务</h3><h3 id=\"2-2-3-系统权限\"><a href=\"#2-2-3-系统权限\" class=\"headerlink\" title=\"2.2.3 系统权限\"></a>2.2.3 系统权限</h3><h1 id=\"三、WEB基础\"><a href=\"#三、WEB基础\" class=\"headerlink\" title=\"三、WEB基础\"></a>三、WEB基础</h1><h2 id=\"3-1-Web服务构成\"><a href=\"#3-1-Web服务构成\" class=\"headerlink\" title=\"3.1 Web服务构成\"></a>3.1 Web服务构成</h2><h3 id=\"3-1-1-了解web架构\"><a href=\"#3-1-1-了解web架构\" class=\"headerlink\" title=\"3.1.1 了解web架构\"></a>3.1.1 了解web架构</h3><h3 id=\"3-1-2-了解web服务\"><a href=\"#3-1-2-了解web服务\" class=\"headerlink\" title=\"3.1.2 了解web服务\"></a>3.1.2 了解web服务</h3><h2 id=\"3-2-HTTP协议原理\"><a href=\"#3-2-HTTP协议原理\" class=\"headerlink\" title=\"3.2 HTTP协议原理\"></a>3.2 HTTP协议原理</h2><h3 id=\"3-2-1-了解HTTP请求方法\"><a href=\"#3-2-1-了解HTTP请求方法\" class=\"headerlink\" title=\"3.2.1 了解HTTP请求方法\"></a>3.2.1 了解HTTP请求方法</h3><h3 id=\"3-2-2-了解HTTP请求状态码\"><a href=\"#3-2-2-了解HTTP请求状态码\" class=\"headerlink\" title=\"3.2.2 了解HTTP请求状态码\"></a>3.2.2 了解HTTP请求状态码</h3><h3 id=\"3-2-3-了解HTTP请求、响应头部\"><a href=\"#3-2-3-了解HTTP请求、响应头部\" class=\"headerlink\" title=\"3.2.3 了解HTTP请求、响应头部\"></a>3.2.3 了解HTTP请求、响应头部</h3><h2 id=\"3-3-Web日志分析方法\"><a href=\"#3-3-Web日志分析方法\" class=\"headerlink\" title=\"3.3 Web日志分析方法\"></a>3.3 Web日志分析方法</h2><h3 id=\"3-3-1-了解Web日志分析基础知识\"><a href=\"#3-3-1-了解Web日志分析基础知识\" class=\"headerlink\" title=\"3.3.1 了解Web日志分析基础知识\"></a>3.3.1 了解Web日志分析基础知识</h3><h1 id=\"四、安全漏洞基础\"><a href=\"#四、安全漏洞基础\" class=\"headerlink\" title=\"四、安全漏洞基础\"></a>四、安全漏洞基础</h1><h3 id=\"4-1-Web-TOP10-漏洞\"><a href=\"#4-1-Web-TOP10-漏洞\" class=\"headerlink\" title=\"4.1 Web TOP10 漏洞\"></a>4.1 Web TOP10 漏洞</h3><h1 id=\"五、标准应急响应\"><a href=\"#五、标准应急响应\" class=\"headerlink\" title=\"五、标准应急响应\"></a>五、标准应急响应</h1><h2 id=\"5-1-流程规范\"><a href=\"#5-1-流程规范\" class=\"headerlink\" title=\"5.1 流程规范\"></a>5.1 流程规范</h2><h3 id=\"5-1-1-了解应急响应标准概念及分类\"><a href=\"#5-1-1-了解应急响应标准概念及分类\" class=\"headerlink\" title=\"5.1.1 了解应急响应标准概念及分类\"></a>5.1.1 了解应急响应标准概念及分类</h3><h3 id=\"5-1-2-了解应急响应处理流程\"><a href=\"#5-1-2-了解应急响应处理流程\" class=\"headerlink\" title=\"5.1.2 了解应急响应处理流程\"></a>5.1.2 了解应急响应处理流程</h3><h3 id=\"5-1-3-掌握应急响应报告编写\"><a href=\"#5-1-3-掌握应急响应报告编写\" class=\"headerlink\" title=\"5.1.3 掌握应急响应报告编写\"></a>5.1.3 掌握应急响应报告编写</h3><h2 id=\"5-2-web应用应急响应\"><a href=\"#5-2-web应用应急响应\" class=\"headerlink\" title=\"5.2 web应用应急响应\"></a>5.2 web应用应急响应</h2><h3 id=\"5-2-1-Web-正常工作及入侵流程\"><a href=\"#5-2-1-Web-正常工作及入侵流程\" class=\"headerlink\" title=\"5.2.1 Web 正常工作及入侵流程\"></a>5.2.1 Web 正常工作及入侵流程</h3><h3 id=\"5-2-2-Webshell-安全事件及其应急处理\"><a href=\"#5-2-2-Webshell-安全事件及其应急处理\" class=\"headerlink\" title=\"5.2.2 Webshell 安全事件及其应急处理\"></a>5.2.2 Webshell 安全事件及其应急处理</h3><h3 id=\"5-2-3-黑链安全事件及其应急处理\"><a href=\"#5-2-3-黑链安全事件及其应急处理\" class=\"headerlink\" title=\"5.2.3 黑链安全事件及其应急处理\"></a>5.2.3 黑链安全事件及其应急处理</h3><h3 id=\"5-2-4-Web-日志分析\"><a href=\"#5-2-4-Web-日志分析\" class=\"headerlink\" title=\"5.2.4 Web 日志分析\"></a>5.2.4 Web 日志分析</h3><h2 id=\"5-3-Win系统应急响应\"><a href=\"#5-3-Win系统应急响应\" class=\"headerlink\" title=\"5.3 Win系统应急响应\"></a>5.3 Win系统应急响应</h2><h3 id=\"5-3-1-Windows-病毒概念\"><a href=\"#5-3-1-Windows-病毒概念\" class=\"headerlink\" title=\"5.3.1 Windows 病毒概念\"></a>5.3.1 Windows 病毒概念</h3><h3 id=\"5-3-2-Windows-病毒查杀\"><a href=\"#5-3-2-Windows-病毒查杀\" class=\"headerlink\" title=\"5.3.2 Windows 病毒查杀\"></a>5.3.2 Windows 病毒查杀</h3><h3 id=\"5-3-3-Windows-系统日志分析\"><a href=\"#5-3-3-Windows-系统日志分析\" class=\"headerlink\" title=\"5.3.3 Windows 系统日志分析\"></a>5.3.3 Windows 系统日志分析</h3><h3 id=\"5-3-4-windows-应急响应入侵排查思路介绍\"><a href=\"#5-3-4-windows-应急响应入侵排查思路介绍\" class=\"headerlink\" title=\"5.3.4 windows 应急响应入侵排查思路介绍\"></a>5.3.4 windows 应急响应入侵排查思路介绍</h3><h3 id=\"5-3-5-临时处置方案\"><a href=\"#5-3-5-临时处置方案\" class=\"headerlink\" title=\"5.3.5 临时处置方案\"></a>5.3.5 临时处置方案</h3><h3 id=\"5-3-6-日志分析，事件处置\"><a href=\"#5-3-6-日志分析，事件处置\" class=\"headerlink\" title=\"5.3.6 日志分析，事件处置\"></a>5.3.6 日志分析，事件处置</h3><h2 id=\"5-4-Linux-系统应急响应\"><a href=\"#5-4-Linux-系统应急响应\" class=\"headerlink\" title=\"5.4 Linux 系统应急响应\"></a>5.4 Linux 系统应急响应</h2><h3 id=\"5-4-1-Linux-病毒概念\"><a href=\"#5-4-1-Linux-病毒概念\" class=\"headerlink\" title=\"5.4.1 Linux 病毒概念\"></a>5.4.1 Linux 病毒概念</h3><h3 id=\"5-4-2Linux-病毒查杀\"><a href=\"#5-4-2Linux-病毒查杀\" class=\"headerlink\" title=\"5.4.2Linux 病毒查杀\"></a>5.4.2Linux 病毒查杀</h3><h3 id=\"5-4-3-Linux-系统日志分析\"><a href=\"#5-4-3-Linux-系统日志分析\" class=\"headerlink\" title=\"5.4.3 Linux 系统日志分析\"></a>5.4.3 Linux 系统日志分析</h3><h3 id=\"5-4-4-Linux-应急响应入侵排查思路介绍\"><a href=\"#5-4-4-Linux-应急响应入侵排查思路介绍\" class=\"headerlink\" title=\"5.4.4 Linux 应急响应入侵排查思路介绍\"></a>5.4.4 Linux 应急响应入侵排查思路介绍</h3><h3 id=\"5-4-5-Linux-异常分析排查\"><a href=\"#5-4-5-Linux-异常分析排查\" class=\"headerlink\" title=\"5.4.5 Linux 异常分析排查\"></a>5.4.5 Linux 异常分析排查</h3><h3 id=\"5-4-6-Linux-进程所对文件分析\"><a href=\"#5-4-6-Linux-进程所对文件分析\" class=\"headerlink\" title=\"5.4.6 Linux 进程所对文件分析\"></a>5.4.6 Linux 进程所对文件分析</h3><h2 id=\"5-5-常见病毒处置案例\"><a href=\"#5-5-常见病毒处置案例\" class=\"headerlink\" title=\"5.5 常见病毒处置案例\"></a>5.5 常见病毒处置案例</h2><h3 id=\"5-5-1-勒索挖矿病毒处置步骤\"><a href=\"#5-5-1-勒索挖矿病毒处置步骤\" class=\"headerlink\" title=\"5.5.1 勒索挖矿病毒处置步骤\"></a>5.5.1 勒索挖矿病毒处置步骤</h3><h3 id=\"5-5-2-勒索挖矿病毒加固建议\"><a href=\"#5-5-2-勒索挖矿病毒加固建议\" class=\"headerlink\" title=\"5.5.2 勒索挖矿病毒加固建议\"></a>5.5.2 勒索挖矿病毒加固建议</h3><h1 id=\"六、安全运维\"><a href=\"#六、安全运维\" class=\"headerlink\" title=\"六、安全运维\"></a>六、安全运维</h1><h2 id=\"6-1-TCE-安全产品介绍\"><a href=\"#6-1-TCE-安全产品介绍\" class=\"headerlink\" title=\"6.1 TCE 安全产品介绍\"></a>6.1 TCE 安全产品介绍</h2><ul>\n<li>了解TCE常用安全产品的原理和使用</li>\n</ul>\n<h2 id=\"6-2-服态势感知产品分析\"><a href=\"#6-2-服态势感知产品分析\" class=\"headerlink\" title=\"6.2 服态势感知产品分析\"></a>6.2 服态势感知产品分析</h2><ul>\n<li>了解态势感知产品日志检测分析</li>\n</ul>\n<h2 id=\"6-3-风险评估\"><a href=\"#6-3-风险评估\" class=\"headerlink\" title=\"6.3 风险评估\"></a>6.3 风险评估</h2><h3 id=\"6-3-1-风险评估概述\"><a href=\"#6-3-1-风险评估概述\" class=\"headerlink\" title=\"6.3.1 风险评估概述\"></a>6.3.1 风险评估概述</h3><h3 id=\"6-3-2-风险评估工作形式\"><a href=\"#6-3-2-风险评估工作形式\" class=\"headerlink\" title=\"6.3.2 风险评估工作形式\"></a>6.3.2 风险评估工作形式</h3><h3 id=\"6-3-3-风险评估方法\"><a href=\"#6-3-3-风险评估方法\" class=\"headerlink\" title=\"6.3.3 风险评估方法\"></a>6.3.3 风险评估方法</h3><h3 id=\"6-3-4-风险评估实施流程\"><a href=\"#6-3-4-风险评估实施流程\" class=\"headerlink\" title=\"6.3.4 风险评估实施流程\"></a>6.3.4 风险评估实施流程</h3><h3 id=\"6-3-5-风险评估工具\"><a href=\"#6-3-5-风险评估工具\" class=\"headerlink\" title=\"6.3.5 风险评估工具\"></a>6.3.5 风险评估工具</h3><h3 id=\"6-3-6-资产梳理\"><a href=\"#6-3-6-资产梳理\" class=\"headerlink\" title=\"6.3.6 资产梳理\"></a>6.3.6 资产梳理</h3><h2 id=\"6-4-重要时期安全保障\"><a href=\"#6-4-重要时期安全保障\" class=\"headerlink\" title=\"6.4 重要时期安全保障\"></a>6.4 重要时期安全保障</h2><h3 id=\"6-4-1-网络安全攻防演练基础\"><a href=\"#6-4-1-网络安全攻防演练基础\" class=\"headerlink\" title=\"6.4.1 网络安全攻防演练基础\"></a>6.4.1 网络安全攻防演练基础</h3><h3 id=\"6-4-2-网络安全攻防演练进阶\"><a href=\"#6-4-2-网络安全攻防演练进阶\" class=\"headerlink\" title=\"6.4.2 网络安全攻防演练进阶\"></a>6.4.2 网络安全攻防演练进阶</h3><h3 id=\"6-4-3-操作系统加固\"><a href=\"#6-4-3-操作系统加固\" class=\"headerlink\" title=\"6.4.3 操作系统加固\"></a>6.4.3 操作系统加固</h3><h3 id=\"6-4-4-中间件加固\"><a href=\"#6-4-4-中间件加固\" class=\"headerlink\" title=\"6.4.4 中间件加固\"></a>6.4.4 中间件加固</h3><h2 id=\"6-5-渗透测试\"><a href=\"#6-5-渗透测试\" class=\"headerlink\" title=\"6.5 渗透测试\"></a>6.5 渗透测试</h2><h3 id=\"6-5-1-渗透测试基础\"><a href=\"#6-5-1-渗透测试基础\" class=\"headerlink\" title=\"6.5.1 渗透测试基础\"></a>6.5.1 渗透测试基础</h3><h3 id=\"6-5-2-信息收集技术\"><a href=\"#6-5-2-信息收集技术\" class=\"headerlink\" title=\"6.5.2 信息收集技术\"></a>6.5.2 信息收集技术</h3><h3 id=\"6-5-3-常见渗透技术\"><a href=\"#6-5-3-常见渗透技术\" class=\"headerlink\" title=\"6.5.3 常见渗透技术\"></a>6.5.3 常见渗透技术</h3><h2 id=\"6-6-项目交付流程\"><a href=\"#6-6-项目交付流程\" class=\"headerlink\" title=\"6.6 项目交付流程\"></a>6.6 项目交付流程</h2><ul>\n<li>安服项目交付流程</li>\n<li>安服项目交付流程管理</li>\n<li>安服项目案例</li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"一、安全常识基础\"><a href=\"#一、安全常识基础\" class=\"headerlink\" title=\"一、安全常识基础\"></a>一、安全常识基础</h1><h2 id=\"1-1-安全简介\"><a href=\"#1-1-安全简介\" class=\"headerlink\" title=\"1.1 安全简介\"></a>1.1 安全简介</h2><h3 id=\"1-1-1-了解当前安全状况\"><a href=\"#1-1-1-了解当前安全状况\" class=\"headerlink\" title=\"1.1.1 了解当前安全状况\"></a>1.1.1 了解当前安全状况</h3><h2 id=\"1-2-热门安全事件\"><a href=\"#1-2-热门安全事件\" class=\"headerlink\" title=\"1.2 热门安全事件\"></a>1.2 热门安全事件</h2><h3 id=\"1-2-1-了解热门安全事件\"><a href=\"#1-2-1-了解热门安全事件\" class=\"headerlink\" title=\"1.2.1 了解热门安全事件\"></a>1.2.1 了解热门安全事件</h3><h2 id=\"1-3-安全术语\"><a href=\"#1-3-安全术语\" class=\"headerlink\" title=\"1.3 安全术语\"></a>1.3 安全术语</h2><ul>\n<li><strong>0DAY</strong></li>\n</ul>\n<p>“零日漏洞”(zero-day)又叫零时差攻击，是指被发现后立即被恶意利用的安全漏洞。</p>\n<ul>\n<li><strong>RCE</strong></li>\n</ul>\n<p>RCE漏洞，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统。</p>\n<ul>\n<li><strong>EXP</strong></li>\n</ul>\n<p>exploit，漏洞利用；利用漏洞攻击系统的代码。</p>\n<ul>\n<li><strong>POC</strong></li>\n</ul>\n<p>漏洞证明，漏洞报告中，通过一段描述或一个样例来证明漏洞确实存在。</p>\n<ul>\n<li><strong>CVE</strong></li>\n</ul>\n<p>公共漏洞和暴露，为广泛认同的信息安全漏洞或者已经暴露出来的弱点给出一个公共的名称。</p>\n<ul>\n<li><strong>Payload</strong></li>\n</ul>\n<p>（有效攻击负载）是包含在你用于一次漏洞利用（exploit）中的攻击代码。</p>\n<ul>\n<li><strong>后门</strong></li>\n</ul>\n<p>绕过安全控制而获取对程序或系统访问权的方法。</p>\n<ul>\n<li><strong>webshell</strong></li>\n</ul>\n<p>Webshell是通过服务器开放的端口获取服务器的某些权限。</p>\n<h3 id=\"1-3-6-常见高危风险端口\"><a href=\"#1-3-6-常见高危风险端口\" class=\"headerlink\" title=\"1.3.6 常见高危风险端口\"></a>1.3.6 常见高危风险端口</h3><table>\n<thead>\n<tr>\n<th align=\"left\">端口</th>\n<th align=\"left\">服务</th>\n<th align=\"left\">渗透测试</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">tcp 20,21</td>\n<td align=\"left\">FTP（文件传输协议）</td>\n<td align=\"left\">允许匿名的上传下载,爆破,嗅探,win提权,远程执行(proftpd 1.3.5),各类后门(proftpd,vsftp 2.3.4)</td>\n</tr>\n<tr>\n<td align=\"left\">tcp 22</td>\n<td align=\"left\">SSH （安全外壳协议 ）</td>\n<td align=\"left\">可根据已搜集到的信息尝试爆破,v1版本可中间人,ssh隧道及内网代理转发,文件传输等等</td>\n</tr>\n<tr>\n<td align=\"left\">tcp 23</td>\n<td align=\"left\">Telnet （ 远程终端协议）</td>\n<td align=\"left\">爆破,嗅探,一般常用于路由,交换登陆,可尝试弱口令</td>\n</tr>\n<tr>\n<td align=\"left\">tcp 25</td>\n<td align=\"left\">SMTP（简单邮件传输协议）</td>\n<td align=\"left\">邮件伪造,vrfy&#x2F;expn查询邮件用户信息,可使用smtp-user-enum工具来自动跑</td>\n</tr>\n<tr>\n<td align=\"left\">tcp&#x2F;udp 53</td>\n<td align=\"left\">DNS（域名系统）</td>\n<td align=\"left\">允许区域传送,dns劫持,缓存投毒,欺骗以及各种基于dns隧道的远控</td>\n</tr>\n<tr>\n<td align=\"left\">tcp 80</td>\n<td align=\"left\">Web服务端口</td>\n<td align=\"left\">可尝试经典的topn,vpn,owa,webmail,目标oa,各类Java控制台,各类服务器Web管理面板,各类Web中间件漏洞利用,各类Web框架漏洞利用等等……</td>\n</tr>\n<tr>\n<td align=\"left\">tcp 1433</td>\n<td align=\"left\">SQL Server（数据库管理系统）</td>\n<td align=\"left\">注入,提权,sa弱口令,爆破</td>\n</tr>\n<tr>\n<td align=\"left\">tcp 3306</td>\n<td align=\"left\">MySQL（数据库）</td>\n<td align=\"left\">注入,提权,爆破</td>\n</tr>\n<tr>\n<td align=\"left\">tcp 3389</td>\n<td align=\"left\">Windows rdp（桌面协议）</td>\n<td align=\"left\">shift后门[需要03以下的系统],爆破,ms12-020</td>\n</tr>\n</tbody></table>\n<h1 id=\"二、操作系统基础\"><a href=\"#二、操作系统基础\" class=\"headerlink\" title=\"二、操作系统基础\"></a>二、操作系统基础</h1><h2 id=\"2-1-windows\"><a href=\"#2-1-windows\" class=\"headerlink\" title=\"2.1 windows\"></a>2.1 windows</h2><h3 id=\"2-1-1-常用命令\"><a href=\"#2-1-1-常用命令\" class=\"headerlink\" title=\"2.1.1 常用命令\"></a>2.1.1 常用命令</h3><ol>\n<li><h4 id=\"用户-x2F-组管理\"><a href=\"#用户-x2F-组管理\" class=\"headerlink\" title=\"用户&#x2F;组管理\"></a>用户&#x2F;组管理</h4></li>\n</ol>\n<ul>\n<li><strong>添加或删除用户</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#添加一个永不过期的用户，并设置登录口令</span>\nnet user <span class=\"token punctuation\">[</span>userName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>password<span class=\"token punctuation\">]</span> /add /expires:never\n<span class=\"token comment\">#删除用户</span>\nnet user <span class=\"token punctuation\">[</span>userName<span class=\"token punctuation\">]</span> /delete\n<span class=\"token comment\">#将用户添加到管理员组</span>\nnet localgroup Administrators <span class=\"token punctuation\">[</span>userName<span class=\"token punctuation\">]</span> /add\n<span class=\"token comment\">#将用户从管理组删除</span>\nnet localgroup Administrators <span class=\"token punctuation\">[</span>userName<span class=\"token punctuation\">]</span> /delete\n<span class=\"token comment\">#修改当前用户密码</span>\nnet user <span class=\"token punctuation\">[</span>userName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>password<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>激活或禁用用户</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#激活用户</span>\nnet user <span class=\"token punctuation\">[</span>userName<span class=\"token punctuation\">]</span> /active:yes\n<span class=\"token comment\">#禁用用户</span>\nnet user <span class=\"token punctuation\">[</span>userName<span class=\"token punctuation\">]</span> /active:no<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>查看用户</strong></li>\n</ul>\n<p>​\t<code>net user</code></p>\n<ul>\n<li><strong>新建或删除用户组</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#新建用户组</span>\nnet localgroup <span class=\"token punctuation\">[</span>groupName<span class=\"token punctuation\">]</span> /add\n<span class=\"token comment\">#删除用户组</span>\nnet localgroup <span class=\"token punctuation\">[</span>groupName<span class=\"token punctuation\">]</span> /delete<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li><h4 id=\"文件和目录\"><a href=\"#文件和目录\" class=\"headerlink\" title=\"文件和目录\"></a>文件和目录</h4></li>\n</ol>\n<ul>\n<li><strong>列出目录结构</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">dir</span> <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">[</span>folderName<span class=\"token punctuation\">]</span>\n<span class=\"token function\">dir</span> /a:h /s\t\t<span class=\"token comment\">#显示当前目录及其子目录下的隐藏文件</span>\n<span class=\"token function\">dir</span> /a:s /s\t\t<span class=\"token comment\">#显示当前目录及其子目录下的系统文件</span>\n<span class=\"token function\">dir</span> /a:r /s\t\t<span class=\"token comment\">#显示当前目录及其子目录下的只读文件</span>\n<span class=\"token function\">dir</span> /a:a /s\t\t<span class=\"token comment\">#显示当前目录及其子目录下的存档文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>创建文件并向文件输出信息</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"test text\"</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span>.txt\t<span class=\"token comment\">#覆盖</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"test rext\"</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>.txt\t<span class=\"token comment\">#追加</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>创建目录</strong></li>\n</ul>\n<p>​\t<code>md [folderName]</code></p>\n<ul>\n<li><strong>切换目录、盘符</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">[</span>folderName<span class=\"token punctuation\">]</span>\nd:\t\t<span class=\"token comment\">#切换到 D 盘</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>删除文件或目录</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">del <span class=\"token punctuation\">[</span>fileName<span class=\"token punctuation\">]</span>\t\t\t<span class=\"token comment\">#删除文件</span>\nrd <span class=\"token punctuation\">[</span>folderName<span class=\"token punctuation\">]</span>\t\t\t<span class=\"token comment\">#删除空目录（目录中不能有子目录和文件）</span>\nrd <span class=\"token punctuation\">[</span>folderName<span class=\"token punctuation\">]</span> /S /Q\t<span class=\"token comment\">#删除目录并同时删除目录中的子目录以及文件 \t\t</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>查看文件的内容</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">type</span> <span class=\"token punctuation\">[</span>fileName<span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">#在 DOS 下查看</span>\nstart <span class=\"token punctuation\">[</span>fileName<span class=\"token punctuation\">]</span>\t<span class=\"token comment\">#调用默认程序查看</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>设置文件或目录属性</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">attrib +S +H <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">[</span>fileName<span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">#添加系统文件和隐藏文件属性</span>\n<span class=\"token comment\">#处理文件夹及子文件里匹配的文件（包含该文件夹）</span>\nattrib +S +H <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">[</span>fileName<span class=\"token punctuation\">]</span> /S /D\n/S 处理当前文件夹及其子文件夹中的匹配文件 \n/D 也处理文件夹<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>重命名</strong></li>\n</ul>\n<p>​\t<code>ren [fileName1][fileName2]</code></p>\n<ul>\n<li><strong>显示目录树</strong></li>\n</ul>\n<p>​\t<code>tree [path]:\\[folderName] /F</code></p>\n<ul>\n<li><strong>查找文件内容</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> <span class=\"token punctuation\">[</span>/V<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>/C<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>/N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>/I<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>/OFF<span class=\"token punctuation\">[</span>LINE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"string\"</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>drive:<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>filename<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n/V 显示所有未包含指定字符串的行。\n/C 仅显示包含字符串的行数。\n/N 显示行号。 \n/I 搜索字符串时忽略大小写。\n/OFF<span class=\"token punctuation\">[</span>LINE<span class=\"token punctuation\">]</span> 不要跳过具有脱机属性集的文件。\n<span class=\"token string\">\"string\"</span> 指定要搜索的文本字符串。\n<span class=\"token punctuation\">[</span>drive:<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>filename<span class=\"token punctuation\">]</span> 指定要搜索的文件\n<span class=\"token function\">find</span> <span class=\"token string\">\"abc\"</span> <span class=\"token number\">1</span>.txt \t<span class=\"token comment\">#查找含有abc的行,并输出该行。</span>\n<span class=\"token function\">find</span> /n <span class=\"token string\">\"abc\"</span> <span class=\"token number\">1</span>.txt <span class=\"token comment\">#查找含有abc的行,并输出该行和行号。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li><h4 id=\"网络-x2F-服务\"><a href=\"#网络-x2F-服务\" class=\"headerlink\" title=\"网络&#x2F;服务\"></a>网络&#x2F;服务</h4></li>\n</ol>\n<ul>\n<li><strong>ping</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ping</span> -t -l <span class=\"token number\">65500</span> <span class=\"token punctuation\">[</span>IP or domain<span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">#死亡之ping</span>\n\t\t\t\t\t\t\t<span class=\"token comment\">#65500 表示数据长度上限，-t 表示不停地ping目标地址</span>\n<span class=\"token function\">ping</span> <span class=\"token punctuation\">[</span>ip<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>ipconfig</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ipconfig -all\t\t\t<span class=\"token comment\">#查看当前所有的ip 地址信息</span>\nipconfig /release\t\t<span class=\"token comment\">#清除当前获取到的ip 地址 </span>\nipconfig /renew\t\t\t<span class=\"token comment\">#重新获取ip 地址</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>natstat</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">netstat</span> -ano\t\t<span class=\"token comment\">#列出所有端口的使用情况 </span>\n<span class=\"token function\">netstat</span> -no\t\t\t<span class=\"token comment\">#显示连接进程的情况，通常用于查找是否有木马程序</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>arp （地址解析协议）</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">arp -a\t\t\t\t\t\t<span class=\"token comment\">#显示 ARP 列表</span>\narp -d\t\t\t\t\t\t<span class=\"token comment\">#清除 ARP 列表，需要管理员权限</span>\narp -s <span class=\"token punctuation\">[</span>ip<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>macAddress<span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">#添加静态项</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>tracert</strong></li>\n</ul>\n<p>​\t<code>tracert [ip or domain]\t\t#跟踪路由</code></p>\n<ul>\n<li><strong>nslookup</strong></li>\n</ul>\n<p>​\t<code>nslookup www.baidu.com\t\t#查询指定域名的dns信息</code></p>\n<ul>\n<li><strong>route</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">route print\t\t<span class=\"token comment\">#打印路由表</span>\nroute <span class=\"token function\">add</span> <span class=\"token punctuation\">[</span>network<span class=\"token punctuation\">]</span> mask <span class=\"token punctuation\">[</span>mask<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>next-hop<span class=\"token punctuation\">]</span>\t<span class=\"token comment\">#新增路由</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>net</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">net view\t\t<span class=\"token comment\">#查看当前局域网内的其他连接者</span>\nnet start\t\t<span class=\"token comment\">#查看开启了哪些服务</span>\nnet start <span class=\"token punctuation\">[</span>serviceName<span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">#开启某一个服务</span>\nnet stop <span class=\"token punctuation\">[</span>serviceName<span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">#停止某一个服务</span>\n<span class=\"token comment\">#将共享的某一个服务器的C盘映射成K盘，攻击者常用命令</span>\nnet use k:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span><span class=\"token punctuation\">[</span>ipAddress<span class=\"token punctuation\">]</span><span class=\"token punctuation\">\\</span>c$\n<span class=\"token comment\">#以下命令建议需管理员权限</span>\nnet share\t\t<span class=\"token comment\">#查看本地开启的共享</span>\nnet share ipc$\t<span class=\"token comment\">#开启ipc$共享</span>\nnet share ipc$ /del \t<span class=\"token comment\">#删除ipc$共享</span>\nnet share c$ /del \t\t<span class=\"token comment\">#删除C盘的共享</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-1-2-Windows服务\"><a href=\"#2-1-2-Windows服务\" class=\"headerlink\" title=\"2.1.2 Windows服务\"></a>2.1.2 Windows服务</h3><ul>\n<li><strong>常见进程</strong></li>\n</ul>\n<p>System.exe ：系统进程，一个重要的进程。</p>\n<p>System Idle Process.exe ：系统进程，它的作用是显示系统有多少闲置的cpu资源。</p>\n<p>svchost Service Host Process：是一个标准的动态连接库主机处理服务。Svchost用来启动服务。Svchost只是负责为这些服务提供启动的条件，其自身并不能实现任何服务的功能，也不能为用户提供任何服务。 经常会被病毒利用进行dll注入的进程。</p>\n<p>explorer.exe ：用于控制Windows图形，包括开始菜单、任务栏，桌面和文件管理。</p>\n<p>lsass.exe ：系统进程，这是一个本地安全权限服务管理 进程详解：管理 IP安全策略以及启动 ISAKMP&#x2F;Oakley (IKE) 和 IP 安全驱动程序。</p>\n<p>services.exe：系统进程用于管理启动和停止Windows服务，该进程也管理计算机启动和关机时的运 行的服务，所以很重要。</p>\n<p>alg.exe：这是一个应用层网关服务用于网络共享，alg.exe是微软Windows操作系统自带的程序。它 用于处理微软Windows网络连接共享和网络连接防火墙。</p>\n<p>csrss.exe： 微软客户端&#x2F;服务端运行时子系统。该进程管理Windows图形相关任务。注意：有些病 毒也会创业该进程。</p>\n<p>mdm.exe ：微软Windows进程除错程序。用于使用可视化脚本工具对Internet Explorer除错。</p>\n<p>taskmgr.exe： 任务管理器进程。</p>\n<p>rundll32.exe：用于在内存中运行DLL文件，它们会在应用程序中被使用，一般有多个。</p>\n<p>smss.exe： 微软Windows操作系统的一部分。</p>\n<p>winlogon ：管理用户登录和退出的。</p>\n<p>Wuauclt.exe：Windows自动升级管理程序。</p>\n<p>spoolsv.exe ：打印的进程</p>\n<ul>\n<li><strong>进程查看辅助工具</strong></li>\n</ul>\n<p>Pchunter </p>\n<p>ProcessExplorer</p>\n<p>ProcessHacker</p>\n<p>ProcessMonitor<br>火绒剑</p>\n<h3 id=\"2-1-3-Windows权限\"><a href=\"#2-1-3-Windows权限\" class=\"headerlink\" title=\"2.1.3 Windows权限\"></a>2.1.3 Windows权限</h3><ul>\n<li><strong>某些文件位置</strong></li>\n</ul>\n<p>C:\\Windows：Windows操作系统中最核心的文件夹，大部分系统文件都在此文件夹下。 </p>\n<p>C:\\Windows\\Fonts：字体文件夹，有些病毒会存放在此文件夹下。</p>\n<p>C:\\Windows\\System32：Windows文件夹中最重要的文件夹，一般用于存放Windows的系统文件和硬件驱动程序。</p>\n<p>C:\\Windows\\Temp：系统临时文件夹，有些病毒会存放在此文件夹下。</p>\n<p>C:\\Windows\\system32\\dirvers ：Windows驱动文件夹，有些驱动病毒存放会在此文件夹下。</p>\n<ul>\n<li><p><strong>本地用户和组类型</strong></p>\n<ul>\n<li><p>用户账户</p>\n<ul>\n<li>本地用户</li>\n<li>域用户</li>\n</ul>\n</li>\n<li><p>组账户</p>\n<ul>\n<li>everyone组</li>\n<li>network组</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>安全标识符</strong></p>\n</li>\n</ul>\n<p>安全主体的代表（标识用户、组和计算机账户的唯一编码）</p>\n<p>范例：S-1-5-21-1736401710-1141508419-1540318053-1000</p>\n<ul>\n<li><strong>隐藏账户</strong></li>\n</ul>\n<p>账户被隐藏，无法通过net user命令查看。但可在用户列表中进行查看。</p>\n<p><img src=\"https://s2.loli.net/2022/05/25/ZgfBdbTLHarlQtR.png\" alt=\"image-20220523165226762\"></p>\n<p><img src=\"https://s2.loli.net/2022/05/25/TsF7uil4qCjhLDU.png\" alt=\"image-20220523165244788\"></p>\n<ul>\n<li><strong>文件权限</strong></li>\n</ul>\n<p>使用访问控制列表进行文件权限管理</p>\n<p>权限： 完全控制、修改、 读取和执行、读取、写入、特别的权限</p>\n<h2 id=\"2-2-linux\"><a href=\"#2-2-linux\" class=\"headerlink\" title=\"2.2 linux\"></a>2.2 linux</h2><h3 id=\"2-2-1-常用命令\"><a href=\"#2-2-1-常用命令\" class=\"headerlink\" title=\"2.2.1 常用命令\"></a>2.2.1 常用命令</h3><ul>\n<li><strong>命令帮助</strong></li>\n</ul>\n<p> <strong>–help参数：</strong></p>\n<p>如果想查看某个命令的帮助说明，可以在命令后输入—help参数。</p>\n<p> <strong>man命令：</strong></p>\n<p>查看命令的正式说明文档，比较长 </p>\n<p> <strong>格式</strong>：man （命令）</p>\n<ol>\n<li><h4 id=\"文件目录管理\"><a href=\"#文件目录管理\" class=\"headerlink\" title=\"文件目录管理\"></a><strong>文件目录管理</strong></h4></li>\n</ol>\n<ul>\n<li><strong>目录操作</strong></li>\n</ul>\n<p> <strong>ls命令</strong>：</p>\n<p>ls命令用来显示目标列表，在Linux中是使用率较高的命令。ls命令的输出信息可以进行彩色加亮显示，以分区不同类型的文件。</p>\n<p><strong>命令格式：</strong></p>\n<p><code>ls (选项) (参数)</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> -a\t\t<span class=\"token comment\">#显示当前目录下包括隐藏文件在内的所有文件列表</span>\n<span class=\"token function\">ls</span> -t\t\t<span class=\"token comment\">#最近修改的文件显示在最上面</span>\n<span class=\"token function\">ls</span> –l\t\t<span class=\"token comment\">#列出文件和文件夹的详细信息</span>\n<span class=\"token function\">ls</span> -al\t\t<span class=\"token comment\">#显示当前目录下包括影藏文件在内的所有文件详细信息</span>\n<span class=\"token function\">ls</span> -lt\t\t<span class=\"token comment\">#按时间列出文件和文件夹详细信息</span>\n<span class=\"token function\">ls</span> -ltr\t\t<span class=\"token comment\">#按修改时间列出文件和文件夹详细信息</span>\n<span class=\"token function\">ls</span> -lut\t\t<span class=\"token comment\">#按访问时间顺序查看</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>mkdir命令：</strong></p>\n<p>mkdir mkdir命令目录基本操作 mkdir命令用来创建目录。该命令创建由dirname命名的目录。如果 在目录名的前面没有加任何路径名，则在当前目录下创建由dirname指定的目录；如果给出了一个 已经存在的路径，将会在该目录下创建一个指定的目录。在创建目录时，应保证新建的目录与它所<br>在目录下的文件没有重名。</p>\n<p><strong>命令格式</strong>：</p>\n<p><code>mkdir [选项] 目录名称</code></p>\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#在目录/tmp下建立子目录 /eshare/破军，并且只有文件主有读、写和执行权限，其他人无权访问</span>\n<span class=\"token function\">mkdir</span> -pm <span class=\"token number\">700</span> /tmp/eshare/破军\t\t\n<span class=\"token comment\">#-m 建立目录的同时设置目录的权限</span>\n<span class=\"token comment\">#-p 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>rm命令：</strong></p>\n<p>rm命令可以删除一个目录中的一个或多个文件或目录，也可以将某个目录及其下属的所有文件及其 子目录均删除掉。对于链接文件，只是删除整个链接文件，而原有文件保持不变。</p>\n<p><strong>命令格式：</strong></p>\n<p><code>rm [选项] 目录名称</code></p>\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> -f 文件名\t\t\t<span class=\"token comment\">#强行删除文件系统不再提示</span>\n<span class=\"token function\">rm</span> -r 文件名\t\t\t<span class=\"token comment\">#将当前目录及子目录中所有档案删除</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>文件权限属性设置</strong></li>\n</ul>\n<p><strong>chmd命令：</strong></p>\n<p>chmod命令用来变更文件或目录的权限。</p>\n<p>权限范围的表示法如下： </p>\n<p>u User，即文件或目录的拥有者；</p>\n<p>g Group，即文件或目录的所属群组；</p>\n<p>o Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围； </p>\n<p>a All，即全部的用户，包含拥有者，所属群组以及其他用户；</p>\n<p>r 读取权限，数字代号为”4”; </p>\n<p>w 写入权限，数字代号为”2”；</p>\n<p>x 执行或切换权限，数字代号为”1”；</p>\n<p>-不具任何权限，数字代号为”0”；</p>\n<p>s 特殊功能说明：变更文件或目录的权限。</p>\n<p>linux 文件的用户权限的分析图</p>\n<p><img src=\"https://s2.loli.net/2022/05/25/3KVlpm1g8UitvPe.png\" alt=\"image-20220523172317446\"></p>\n<pre class=\"line-numbers language-bsh\" data-language=\"bsh\"><code class=\"language-bsh\">#为文件hello.sh设置自己可以执行，组员可以写入的权限 \nchmod u+x,g+w hello.sh \nchmod u&#x3D;rwx,g&#x3D;rw,o&#x3D;r hello.sh \nchmod 764 hello.sh\n#对文件hello.sh的u,g,o都设置可执行属性\nchmod a+x hello.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>文件查找</strong></li>\n</ul>\n<p><strong>find命令：</strong></p>\n<p>find命令用来在指定目录下查找文件。</p>\n<p><strong>语法：</strong></p>\n<p><code>find (选项) (参数)</code></p>\n<p>参数：查找文件的起始目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#根据文件或者正则表达式进行匹配：</span>\n<span class=\"token function\">find</span> / -name <span class=\"token string\">\"*.txt\"</span>\t\t<span class=\"token comment\">#在/目录下查找以.txt结尾的文件名</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -name <span class=\"token string\">\"*.txt\"</span> -o -name <span class=\"token string\">\"*.pdf\"</span>\t<span class=\"token comment\">#当前目录及子目录下查找所有以.txt和.pdf结尾的文件</span>\n<span class=\"token comment\">#否定参数</span>\n<span class=\"token function\">find</span> /home <span class=\"token operator\">!</span> -name <span class=\"token string\">\"*.txt\"</span>\t<span class=\"token comment\">#找出/home下不是以.txt结尾的文件</span>\n<span class=\"token comment\">#根据文件时间戳进行搜索</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f 时间戳\nUNIX/Linux文件系统每个文件都有三种时间戳： \n访问时间（-atime/天，-amin/分钟）：用户最近一次访问时间。 \n修改时间（-mtime/天，-mmin/分钟）：文件最后一次修改时间。 \n变化时间（-ctime/天，-cmin/分钟）：文件数据元（例如权限等）最后一次修改时间。 \n-mtime –ctime都可以用来根据文件创建时间来查找，\n-ctime相对-mtime的区别就是权限修改了，-ctime可以查到，-mtime不行。\n<span class=\"token comment\">#实例</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -atime -7\t\t<span class=\"token comment\">#搜索最近七天内被访问过的所有文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -atime <span class=\"token number\">7</span>\t\t\t<span class=\"token comment\">#搜索恰好在七天前被访问过的所有文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -atime +7\t\t<span class=\"token comment\">#搜索超过七天被访问过的所有文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -amin +10\t\t<span class=\"token comment\">#搜索访问时间超过10分钟的所有文件</span>\n<span class=\"token comment\">#根据文件权限/所有权进行匹配</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -perm <span class=\"token number\">777</span>\t\t<span class=\"token comment\">#当前目录下搜索出权限为777的文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -name <span class=\"token string\">\"*.php\"</span> <span class=\"token operator\">!</span> -perm <span class=\"token number\">644</span>  <span class=\"token comment\">#找出当前目录下权限不是644的php文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -user tom\t\t<span class=\"token comment\">#找出当前目录用户tom拥有的所有文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>文件内容查看</strong></li>\n</ul>\n<p><strong>more命令：</strong></p>\n<p>more命令，功能类似 cat ，cat命令是整个文件的内容从上到下显示在屏幕上。 more会以一页一 页的显示方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键<br>就会往回（back）一页显示。</p>\n<p><strong>语法：</strong></p>\n<p><code>more (选项) (参数)</code></p>\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#设more.txt是当前目录下的文件</span>\n<span class=\"token function\">more</span> more.txt\t\t<span class=\"token comment\">#在屏幕上分页显示文件more.txt的内容</span>\n<span class=\"token function\">more</span> +3 more.txt \t<span class=\"token comment\">#显示文件more.txt从第三行起的内容 </span>\n<span class=\"token function\">more</span> -5 more.txt \t<span class=\"token comment\">#每屏显示5行内容</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p> <strong>less命令：</strong></p>\n<p>less命令的作用与more十分相似，都可以用来浏览文字档案的内容，相对于more命令来说更有弹 性，功能更多。用less命令显示文件时，用PageUp键向上翻页，用PageDown键向下翻页。要退出<br>less程序，应按Q键。</p>\n<p><strong>实例：</strong></p>\n<p><code>less -N /etc/passwd \t\t#查看/etc/passwd文件并显示行号</code></p>\n<ul>\n<li><strong>文件编辑</strong></li>\n</ul>\n<p><strong>vi命令</strong></p>\n<p>vi命令是UNIX操作系统和类UNIX操作系统中最通用的全屏幕纯文本编辑器。Linux中的vi编辑器叫 vim，它是vi的增强版（vi Improved），与vi编辑器完全兼容，而且实现了很多增强功能。</p>\n<p><strong>常用内置命令</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Ctrl+u：向文件首翻半屏； Ctrl+d：向文件尾翻半屏；\nCtrl+f：向文件尾翻一屏； Ctrl+b：向文件首翻一屏；\nEsc：从编辑模式切换到命令模式； \nZZ：命令模式下保存当前文件所做的修改后退出vi；\n:<span class=\"token punctuation\">(</span>命令<span class=\"token punctuation\">)</span> 可以输入一些命令，:q！ 可以不保存退出。\n:行号：光标跳转到指定行的行首；\n:$：光标跳转到最后一行的行首； \nx或X：删除一个字符，x删除光标后的，而X删除光标前的；\nD：删除从当前光标到光标所在行尾的全部字符； \ndd：删除光标行正行内容； \nndd：删除当前行及其后n-1行； \np：粘贴文本操作，用于将缓存区的内容粘贴到当前光标所在位置的下方； \nP：粘贴文本操作，用于将缓存区的内容粘贴到当前光标所在位置的上方； \n/字符串：文本查找操作，用于从当前光标所在位置开始向文件尾部查找指定字符串的内容；\na：在当前字符后添加文本； \nA：在行末添加文本； \ni：在当前字符前插入文本； \nI：在行首插入文本；\no：在当前行后面插入一空行；<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>sed命令：</strong></p>\n<p>sed是一种流编辑器，它是文本处理中非常重要的工具，能够完美的配合正则表达式使用。处理时，把当前处理的行存储在临时缓冲区中，接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，除非你使用重定向存储输出。</p>\n<p><strong>命令格式：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sed</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token string\">'command'</span> file<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token function\">sed</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> -f scriptfile file<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#将file中的字符串book替换为books并输出，但不修改原文件</span>\n<span class=\"token function\">sed</span> <span class=\"token string\">'s/book/books/'</span> <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>文件过滤</strong></li>\n</ul>\n<p><strong>grep命令</strong>：</p>\n<p>是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p>\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#在文件中搜索一个单词，命令会返回一个包含\"match_pattern\"的文本行</span>\n<span class=\"token function\">grep</span> match_pattern file_name \n<span class=\"token function\">grep</span> <span class=\"token string\">\"match_pattern\"</span> file_name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>文件压缩与解压</strong></li>\n</ul>\n<p><strong>tar命令</strong>：</p>\n<p>tar命令可以为linux的文件和目录创建档案。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，或者将一个打包文件还原成若干文件。<br><code>tar [选项] [生成的新文件] [待打包压缩文件]</code></p>\n<p><strong>常用选项：</strong></p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>选项说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-c</td>\n<td>新建打包文件，同 -v 一起使用 查看过程中打包文件名</td>\n</tr>\n<tr>\n<td>-x</td>\n<td>解压文件， -c 解压到对应的文件目录。</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>后面接要处理的文件</td>\n</tr>\n<tr>\n<td>-j</td>\n<td>通过bzip2方式压缩或解压，最后以.tar.br2 为后缀</td>\n</tr>\n<tr>\n<td>-z</td>\n<td>通过gzip方式压缩或解压，最后以.tar.gz 为后缀</td>\n</tr>\n<tr>\n<td>-v</td>\n<td>压缩或解压过程中，显示出来过程</td>\n</tr>\n</tbody></table>\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#将文件全部打包成tar包</span>\n<span class=\"token function\">tar</span> -cvf log.tar log2012.log \t\t<span class=\"token comment\">#仅打包，不压缩！ </span>\n<span class=\"token function\">tar</span> -zcvf log.tar.gz log2012.log \t<span class=\"token comment\">#打包后，以 gzip 压缩 </span>\n<span class=\"token function\">tar</span> -jcvf log.tar.bz2 log2012.log \t<span class=\"token comment\">#打包后，以 bzip2 压缩</span>\n<span class=\"token comment\">#将tar包解压缩</span>\n<span class=\"token function\">tar</span> -zxvf /opt/soft/test/log.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>文件权限属性设置</li>\n</ul>\n<p><strong>stat命令：</strong></p>\n<p>stat命令用于显示文件的状态信息。stat命令的输出信息比ls命令的输出信息要更详细。</p>\n<p><strong>选项：</strong></p>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">-L：支持符号连接； \n-f：显示文件系统状态而非文件状态； \n-t：以简洁方式输出信息； \n--help：显示指令的帮助信息；\n--version：显示指令的版本信息。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># stat myfile </span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># stat -f myfile</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>切换目录、盘符</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">[</span>folderName<span class=\"token punctuation\">]</span>\n<span class=\"token builtin class-name\">cd</span> / \t\t<span class=\"token comment\">#切换到根目录</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>查看网卡</strong></li>\n</ul>\n<p><code>ifconfig</code></p>\n<ul>\n<li><strong>查看当前位置</strong></li>\n</ul>\n<p><code>pwd\t\t\t#查看当前目录位置</code></p>\n<ul>\n<li><strong>系统安全</strong></li>\n</ul>\n<p><strong>last、lastb命令：</strong></p>\n<p>last命令用于显示用户最近登录信息。单独执行last命令，它会读取&#x2F;var&#x2F;log&#x2F;wtmp的文件，并把 该文件的内容记录的登入系统的用户名单全部显示出来。</p>\n<p>lastb命令用于显示用户错误的登录列表，此指令可以发现系统的登录异常。单独执行lastb命令， 它会读取位于&#x2F;var&#x2F;log目录下，名称为btmp的文件，并把该文件内容记录的登入失败的用户名单，<br>全部显示出来。</p>\n<p><strong>选项：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">-a：把从何处登入系统的主机名称或ip地址，显示在最后一行； \n-d：将IP地址转换成主机名称； \n-f <span class=\"token operator\">&lt;</span>记录文件<span class=\"token operator\">></span>：指定记录文件。 \n-n <span class=\"token operator\">&lt;</span>显示列数<span class=\"token operator\">></span>或-<span class=\"token operator\">&lt;</span>显示列数<span class=\"token operator\">></span>：设置列出名单的显示列数； \n-R：不显示登入系统的主机名称或IP地址；\n-x：显示系统关机，重新开机，以及执行等级的改变等信息。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>实例：</strong></p>\n<p><code>last -10</code></p>\n<p><strong>w命令：</strong></p>\n<p>w命令用于显示已经登陆系统的用户列表，并显示用户正在执行的指令。执行这个命令可得知目前 登入系统的用户有那些人，以及他们正在执行的程序。单独执行w命令会显示所有的用户，您也可<br>指定用户名称，仅显示某位用户的相关信息。</p>\n<p><strong>选项：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">-h：不打印头信息； \n-u：当显示当前进程和cpu时间时忽略用户名； \n-s：使用短输出格式； \n-f：显示用户从哪登录；\n-V：显示版本信息<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>进程和作业管理</strong></li>\n</ul>\n<p><strong>ps命令</strong></p>\n<p>ps命令用于报告当前系统的进程状态。可以搭配kill指令随时中断、删除不必要的程序。ps命令是最基本同时也是非常强大的进程查看命令，使用该命令可以确定有哪些进程正在运行和运行的状态 、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等，总之大部分信息都是可以通过执行该命令得到的。</p>\n<p><strong>选项：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">-e 显示所有进程。\n-f 全格式。\n-h 不显示标题。\n-l 长格式。\n-w 宽输出。\na 显示终端上的所有进程，包括其他用户的进程。\nr 只显示正在运行的进程。\nx 显示没有控制终端的进程。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>实例：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ps</span> -aux \n<span class=\"token function\">ps</span> -ef\n<span class=\"token function\">ps</span> -aux <span class=\"token operator\">|</span> <span class=\"token function\">less</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n\n\n\n\n<h3 id=\"2-2-2-系统服务\"><a href=\"#2-2-2-系统服务\" class=\"headerlink\" title=\"2.2.2 系统服务\"></a>2.2.2 系统服务</h3><h3 id=\"2-2-3-系统权限\"><a href=\"#2-2-3-系统权限\" class=\"headerlink\" title=\"2.2.3 系统权限\"></a>2.2.3 系统权限</h3><h1 id=\"三、WEB基础\"><a href=\"#三、WEB基础\" class=\"headerlink\" title=\"三、WEB基础\"></a>三、WEB基础</h1><h2 id=\"3-1-Web服务构成\"><a href=\"#3-1-Web服务构成\" class=\"headerlink\" title=\"3.1 Web服务构成\"></a>3.1 Web服务构成</h2><h3 id=\"3-1-1-了解web架构\"><a href=\"#3-1-1-了解web架构\" class=\"headerlink\" title=\"3.1.1 了解web架构\"></a>3.1.1 了解web架构</h3><h3 id=\"3-1-2-了解web服务\"><a href=\"#3-1-2-了解web服务\" class=\"headerlink\" title=\"3.1.2 了解web服务\"></a>3.1.2 了解web服务</h3><h2 id=\"3-2-HTTP协议原理\"><a href=\"#3-2-HTTP协议原理\" class=\"headerlink\" title=\"3.2 HTTP协议原理\"></a>3.2 HTTP协议原理</h2><h3 id=\"3-2-1-了解HTTP请求方法\"><a href=\"#3-2-1-了解HTTP请求方法\" class=\"headerlink\" title=\"3.2.1 了解HTTP请求方法\"></a>3.2.1 了解HTTP请求方法</h3><h3 id=\"3-2-2-了解HTTP请求状态码\"><a href=\"#3-2-2-了解HTTP请求状态码\" class=\"headerlink\" title=\"3.2.2 了解HTTP请求状态码\"></a>3.2.2 了解HTTP请求状态码</h3><h3 id=\"3-2-3-了解HTTP请求、响应头部\"><a href=\"#3-2-3-了解HTTP请求、响应头部\" class=\"headerlink\" title=\"3.2.3 了解HTTP请求、响应头部\"></a>3.2.3 了解HTTP请求、响应头部</h3><h2 id=\"3-3-Web日志分析方法\"><a href=\"#3-3-Web日志分析方法\" class=\"headerlink\" title=\"3.3 Web日志分析方法\"></a>3.3 Web日志分析方法</h2><h3 id=\"3-3-1-了解Web日志分析基础知识\"><a href=\"#3-3-1-了解Web日志分析基础知识\" class=\"headerlink\" title=\"3.3.1 了解Web日志分析基础知识\"></a>3.3.1 了解Web日志分析基础知识</h3><h1 id=\"四、安全漏洞基础\"><a href=\"#四、安全漏洞基础\" class=\"headerlink\" title=\"四、安全漏洞基础\"></a>四、安全漏洞基础</h1><h3 id=\"4-1-Web-TOP10-漏洞\"><a href=\"#4-1-Web-TOP10-漏洞\" class=\"headerlink\" title=\"4.1 Web TOP10 漏洞\"></a>4.1 Web TOP10 漏洞</h3><h1 id=\"五、标准应急响应\"><a href=\"#五、标准应急响应\" class=\"headerlink\" title=\"五、标准应急响应\"></a>五、标准应急响应</h1><h2 id=\"5-1-流程规范\"><a href=\"#5-1-流程规范\" class=\"headerlink\" title=\"5.1 流程规范\"></a>5.1 流程规范</h2><h3 id=\"5-1-1-了解应急响应标准概念及分类\"><a href=\"#5-1-1-了解应急响应标准概念及分类\" class=\"headerlink\" title=\"5.1.1 了解应急响应标准概念及分类\"></a>5.1.1 了解应急响应标准概念及分类</h3><h3 id=\"5-1-2-了解应急响应处理流程\"><a href=\"#5-1-2-了解应急响应处理流程\" class=\"headerlink\" title=\"5.1.2 了解应急响应处理流程\"></a>5.1.2 了解应急响应处理流程</h3><h3 id=\"5-1-3-掌握应急响应报告编写\"><a href=\"#5-1-3-掌握应急响应报告编写\" class=\"headerlink\" title=\"5.1.3 掌握应急响应报告编写\"></a>5.1.3 掌握应急响应报告编写</h3><h2 id=\"5-2-web应用应急响应\"><a href=\"#5-2-web应用应急响应\" class=\"headerlink\" title=\"5.2 web应用应急响应\"></a>5.2 web应用应急响应</h2><h3 id=\"5-2-1-Web-正常工作及入侵流程\"><a href=\"#5-2-1-Web-正常工作及入侵流程\" class=\"headerlink\" title=\"5.2.1 Web 正常工作及入侵流程\"></a>5.2.1 Web 正常工作及入侵流程</h3><h3 id=\"5-2-2-Webshell-安全事件及其应急处理\"><a href=\"#5-2-2-Webshell-安全事件及其应急处理\" class=\"headerlink\" title=\"5.2.2 Webshell 安全事件及其应急处理\"></a>5.2.2 Webshell 安全事件及其应急处理</h3><h3 id=\"5-2-3-黑链安全事件及其应急处理\"><a href=\"#5-2-3-黑链安全事件及其应急处理\" class=\"headerlink\" title=\"5.2.3 黑链安全事件及其应急处理\"></a>5.2.3 黑链安全事件及其应急处理</h3><h3 id=\"5-2-4-Web-日志分析\"><a href=\"#5-2-4-Web-日志分析\" class=\"headerlink\" title=\"5.2.4 Web 日志分析\"></a>5.2.4 Web 日志分析</h3><h2 id=\"5-3-Win系统应急响应\"><a href=\"#5-3-Win系统应急响应\" class=\"headerlink\" title=\"5.3 Win系统应急响应\"></a>5.3 Win系统应急响应</h2><h3 id=\"5-3-1-Windows-病毒概念\"><a href=\"#5-3-1-Windows-病毒概念\" class=\"headerlink\" title=\"5.3.1 Windows 病毒概念\"></a>5.3.1 Windows 病毒概念</h3><h3 id=\"5-3-2-Windows-病毒查杀\"><a href=\"#5-3-2-Windows-病毒查杀\" class=\"headerlink\" title=\"5.3.2 Windows 病毒查杀\"></a>5.3.2 Windows 病毒查杀</h3><h3 id=\"5-3-3-Windows-系统日志分析\"><a href=\"#5-3-3-Windows-系统日志分析\" class=\"headerlink\" title=\"5.3.3 Windows 系统日志分析\"></a>5.3.3 Windows 系统日志分析</h3><h3 id=\"5-3-4-windows-应急响应入侵排查思路介绍\"><a href=\"#5-3-4-windows-应急响应入侵排查思路介绍\" class=\"headerlink\" title=\"5.3.4 windows 应急响应入侵排查思路介绍\"></a>5.3.4 windows 应急响应入侵排查思路介绍</h3><h3 id=\"5-3-5-临时处置方案\"><a href=\"#5-3-5-临时处置方案\" class=\"headerlink\" title=\"5.3.5 临时处置方案\"></a>5.3.5 临时处置方案</h3><h3 id=\"5-3-6-日志分析，事件处置\"><a href=\"#5-3-6-日志分析，事件处置\" class=\"headerlink\" title=\"5.3.6 日志分析，事件处置\"></a>5.3.6 日志分析，事件处置</h3><h2 id=\"5-4-Linux-系统应急响应\"><a href=\"#5-4-Linux-系统应急响应\" class=\"headerlink\" title=\"5.4 Linux 系统应急响应\"></a>5.4 Linux 系统应急响应</h2><h3 id=\"5-4-1-Linux-病毒概念\"><a href=\"#5-4-1-Linux-病毒概念\" class=\"headerlink\" title=\"5.4.1 Linux 病毒概念\"></a>5.4.1 Linux 病毒概念</h3><h3 id=\"5-4-2Linux-病毒查杀\"><a href=\"#5-4-2Linux-病毒查杀\" class=\"headerlink\" title=\"5.4.2Linux 病毒查杀\"></a>5.4.2Linux 病毒查杀</h3><h3 id=\"5-4-3-Linux-系统日志分析\"><a href=\"#5-4-3-Linux-系统日志分析\" class=\"headerlink\" title=\"5.4.3 Linux 系统日志分析\"></a>5.4.3 Linux 系统日志分析</h3><h3 id=\"5-4-4-Linux-应急响应入侵排查思路介绍\"><a href=\"#5-4-4-Linux-应急响应入侵排查思路介绍\" class=\"headerlink\" title=\"5.4.4 Linux 应急响应入侵排查思路介绍\"></a>5.4.4 Linux 应急响应入侵排查思路介绍</h3><h3 id=\"5-4-5-Linux-异常分析排查\"><a href=\"#5-4-5-Linux-异常分析排查\" class=\"headerlink\" title=\"5.4.5 Linux 异常分析排查\"></a>5.4.5 Linux 异常分析排查</h3><h3 id=\"5-4-6-Linux-进程所对文件分析\"><a href=\"#5-4-6-Linux-进程所对文件分析\" class=\"headerlink\" title=\"5.4.6 Linux 进程所对文件分析\"></a>5.4.6 Linux 进程所对文件分析</h3><h2 id=\"5-5-常见病毒处置案例\"><a href=\"#5-5-常见病毒处置案例\" class=\"headerlink\" title=\"5.5 常见病毒处置案例\"></a>5.5 常见病毒处置案例</h2><h3 id=\"5-5-1-勒索挖矿病毒处置步骤\"><a href=\"#5-5-1-勒索挖矿病毒处置步骤\" class=\"headerlink\" title=\"5.5.1 勒索挖矿病毒处置步骤\"></a>5.5.1 勒索挖矿病毒处置步骤</h3><h3 id=\"5-5-2-勒索挖矿病毒加固建议\"><a href=\"#5-5-2-勒索挖矿病毒加固建议\" class=\"headerlink\" title=\"5.5.2 勒索挖矿病毒加固建议\"></a>5.5.2 勒索挖矿病毒加固建议</h3><h1 id=\"六、安全运维\"><a href=\"#六、安全运维\" class=\"headerlink\" title=\"六、安全运维\"></a>六、安全运维</h1><h2 id=\"6-1-TCE-安全产品介绍\"><a href=\"#6-1-TCE-安全产品介绍\" class=\"headerlink\" title=\"6.1 TCE 安全产品介绍\"></a>6.1 TCE 安全产品介绍</h2><ul>\n<li>了解TCE常用安全产品的原理和使用</li>\n</ul>\n<h2 id=\"6-2-服态势感知产品分析\"><a href=\"#6-2-服态势感知产品分析\" class=\"headerlink\" title=\"6.2 服态势感知产品分析\"></a>6.2 服态势感知产品分析</h2><ul>\n<li>了解态势感知产品日志检测分析</li>\n</ul>\n<h2 id=\"6-3-风险评估\"><a href=\"#6-3-风险评估\" class=\"headerlink\" title=\"6.3 风险评估\"></a>6.3 风险评估</h2><h3 id=\"6-3-1-风险评估概述\"><a href=\"#6-3-1-风险评估概述\" class=\"headerlink\" title=\"6.3.1 风险评估概述\"></a>6.3.1 风险评估概述</h3><h3 id=\"6-3-2-风险评估工作形式\"><a href=\"#6-3-2-风险评估工作形式\" class=\"headerlink\" title=\"6.3.2 风险评估工作形式\"></a>6.3.2 风险评估工作形式</h3><h3 id=\"6-3-3-风险评估方法\"><a href=\"#6-3-3-风险评估方法\" class=\"headerlink\" title=\"6.3.3 风险评估方法\"></a>6.3.3 风险评估方法</h3><h3 id=\"6-3-4-风险评估实施流程\"><a href=\"#6-3-4-风险评估实施流程\" class=\"headerlink\" title=\"6.3.4 风险评估实施流程\"></a>6.3.4 风险评估实施流程</h3><h3 id=\"6-3-5-风险评估工具\"><a href=\"#6-3-5-风险评估工具\" class=\"headerlink\" title=\"6.3.5 风险评估工具\"></a>6.3.5 风险评估工具</h3><h3 id=\"6-3-6-资产梳理\"><a href=\"#6-3-6-资产梳理\" class=\"headerlink\" title=\"6.3.6 资产梳理\"></a>6.3.6 资产梳理</h3><h2 id=\"6-4-重要时期安全保障\"><a href=\"#6-4-重要时期安全保障\" class=\"headerlink\" title=\"6.4 重要时期安全保障\"></a>6.4 重要时期安全保障</h2><h3 id=\"6-4-1-网络安全攻防演练基础\"><a href=\"#6-4-1-网络安全攻防演练基础\" class=\"headerlink\" title=\"6.4.1 网络安全攻防演练基础\"></a>6.4.1 网络安全攻防演练基础</h3><h3 id=\"6-4-2-网络安全攻防演练进阶\"><a href=\"#6-4-2-网络安全攻防演练进阶\" class=\"headerlink\" title=\"6.4.2 网络安全攻防演练进阶\"></a>6.4.2 网络安全攻防演练进阶</h3><h3 id=\"6-4-3-操作系统加固\"><a href=\"#6-4-3-操作系统加固\" class=\"headerlink\" title=\"6.4.3 操作系统加固\"></a>6.4.3 操作系统加固</h3><h3 id=\"6-4-4-中间件加固\"><a href=\"#6-4-4-中间件加固\" class=\"headerlink\" title=\"6.4.4 中间件加固\"></a>6.4.4 中间件加固</h3><h2 id=\"6-5-渗透测试\"><a href=\"#6-5-渗透测试\" class=\"headerlink\" title=\"6.5 渗透测试\"></a>6.5 渗透测试</h2><h3 id=\"6-5-1-渗透测试基础\"><a href=\"#6-5-1-渗透测试基础\" class=\"headerlink\" title=\"6.5.1 渗透测试基础\"></a>6.5.1 渗透测试基础</h3><h3 id=\"6-5-2-信息收集技术\"><a href=\"#6-5-2-信息收集技术\" class=\"headerlink\" title=\"6.5.2 信息收集技术\"></a>6.5.2 信息收集技术</h3><h3 id=\"6-5-3-常见渗透技术\"><a href=\"#6-5-3-常见渗透技术\" class=\"headerlink\" title=\"6.5.3 常见渗透技术\"></a>6.5.3 常见渗透技术</h3><h2 id=\"6-6-项目交付流程\"><a href=\"#6-6-项目交付流程\" class=\"headerlink\" title=\"6.6 项目交付流程\"></a>6.6 项目交付流程</h2><ul>\n<li>安服项目交付流程</li>\n<li>安服项目交付流程管理</li>\n<li>安服项目案例</li>\n</ul>\n"},{"title":"蓝队面试题","date":"2022-05-25T00:18:04.000Z","toc":true,"_content":"\nOCEAN’S 安全面试题整理系列文章：\n\n1. [渗透测试&网络&CTF面试题整理](https://blog.csdn.net/q20010619/article/details/124329818)\n2. [PHP&Java&Py&漏洞利用or运维面试题整理](https://blog.csdn.net/q20010619/article/details/124329764?spm=1001.2014.3001.5501)\n3. [红队面试题整理](https://blog.csdn.net/q20010619/article/details/123185212)\n4. [蓝队面试题整理（含回答）](https://blog.csdn.net/q20010619/article/details/123015066)\n5. [HR问题](https://github.com/Leezj9671/Pentest_Interview/blob/master/HR问题.md)\n\n\n\n\n# 🅰️应急响应🛡️\n\n## ⬆️宏观题\n\n### 1.基本思路流程\n\n1. 收集信息：收集客户信息和中毒主机信息，包括样本\n2. 判断类型：判断是否是安全事件，何种安全事件，勒索、挖矿、断网、DoS 等等\n3. 抑制范围：隔离使受害⾯不继续扩⼤\n4. 深入分析：日志分析、进程分析、启动项分析、样本分析方便后期溯源\n5. 清理处置：杀掉进程，删除文件，打补丁，删除异常系统服务，清除后门账号防止事件扩大，处理完毕后恢复生产\n6. 产出报告：整理并输出完整的安全事件报告\n\n### 2.Windows入侵排查思路\n\n1. 检查系统账号安全\n\n   1. 查看服务器是否有弱口令，远程管理端口是否对公网开放（使用`netstat -ano `命令、或者问服务器管理员）\n\n   2. `lusrmgr.msc `命令查看服务器是否存在可疑账号、新增账号，如有管理员群组的（Administrators）里的新增账户，如有，请立即禁用或删除掉\n\n   3. 用 D 盾或者注册表中查看服务器是否存在隐藏账号、克隆账号\n\n   4. 结合日志，查看管理员登录时间、用户名是否存在异常\n\n      检查方法：Win+R 打开运行，输入“eventvwr.msc”，回车运行，打开“事件查看器”，导出 Windows 日志–安全，利用 Log Parser 进行分析\n\n2. 检查异常端口、进程\n\n   1. `netstat -ano`检查端口连接情况，是否有远程连接、可疑连接\n   2. 任务管理器-进程\n\n3. 检查启动项、计划任务、服务\n\n4. 检查系统相关信息\n\n   查看系统版本以及补丁信息\n\n   查找可疑目录及文件\n\n5. 日志分析\n\n### 3.Linux入侵排查思路\n\n1. 账号安全\n\n   ```bash\n   who\t\t查看当前登录用户（tty本地登陆 pts远程登录）\n   w \t\t查看系统信息，想知道某一时刻用户的行为\n   uptime\t查看登陆多久、多少用户，负载\n   ```\n\n   ```bash\n   1、用户信息文件/etc/passwd\n   root:x:0:0:root:/root:/bin/bash\n   account:password:UID:GID:GECOS:directory:shell\n   用户名：密码：用户ID：组ID：用户说明：家目录：登陆之后shell\n   注意：无密码只允许本机登陆，远程不允许登陆\n   \n   2、影子文件/etc/shadow\n   root:$6$oGs1PqhL2p3ZetrE$X7o7bzoouHQVSEmSgsYN5UD4.kMHx6qgbTqwNVC5oOAouXvcjQSt.Ft7ql1WpkopY0UV9ajBwUt1DpYxTCVvI/:16809:0:99999:7:::\n   用户名：加密密码：密码最后一次修改日期：两次密码的修改时间间隔：密码有效期：密码修改到期到的警告天数：密码过期之后的宽限天数：账号失效时间：保留\n   ```\n\n   `/etc/passwd` 存储一般的用户信息，任何人都可以访问；`/etc/shadow` 存储用户的密码信息，只有 root 用户可以访问\n\n2. 历史命令\n\n   ```bash\n   通过 .bash_history 查看帐号执行过的系统命令\n   1、root的历史命令 histroy\n   2、打开 /home 各帐号目录下的 .bash_history，查看普通帐号的历史命令\n   \n   历史操作命令的清除：history -c\n   但此命令并不会清除保存在文件中的记录，因此需要手动删除.bash_profile文件中的记录\n   ```\n\n3. 检查异常端口\n\n   ```bash\n   netstat -antlp|more\n   查看下pid所对应的进程文件路径，\n   运行ls -l /proc/$PID/exe或file /proc/$PID/exe（$PID 为对应的pid 号）\n   ```\n\n4. 检查异常进程\n\n   ```bash\n   ps aux | grep pid\n   ```\n\n5. 检查开机启动项\n\n   开机启动配置文件\n\n   ```bash\n   /etc/rc.local\n   /etc/rc.d/rc[0~6].d\n   ```\n\n6. 检查定时任务\n\n   ```bash\n   crontab -l 列出某个用户cron服务的详细内容\n   Tips：默认编写的crontab文件会保存在 (/var/spool/cron/用户名 例如: /var/spool/cron/root\n   crontab -r 删除每个用户cront任务(谨慎：删除所有的计划任务)\n   crontab -e 使用编辑器编辑当前的crontab文件\n   如：*/1 * * * * echo \"hello world\" >> /tmp/test.txt 每分钟写入文件\n   2、利用anacron实现异步定时任务调度\n   ```\n\n   重点关注\n\n   ```\n   /var/spool/cron/*\n   /etc/crontab\n   /etc/cron.d/*\n   /etc/cron.daily/*\n   /etc/cron.hourly/*\n   /etc/cron.monthly/*\n   /etc/cron.weekly/\n   /etc/anacrontab\n   /var/spool/anacron/*\n   ```\n\n7. 检查服务\n\n   chkconfig --list 命令，可以查看系统运行的服务\n\n8. 检查异常文件\n\n9. 检查系统日志\n\n### Linux的登录日志查看文件\n\n- 日志默认存放位置：/var/log/\n- 查看可登录的账户 cat/etc/passwd|grep ‘/bin/bash’\n- 查看所有用户最后的登录信息 lastlog\n- 查看用户最近登录信息 last 其中，/var/log/wtmp 存储登录成功的信息、btmp 存储登录失败的信息、utmp 存储当前正在登录的信息\n- 查看当前用户登录系统情况 who\n\n### Linux常用排查命令\n\n这个问题就是 linux 入侵排查排查的一部分\n\nhttps://cloud.tencent.com/developer/article/1822210\n\n系统信息\n\n1. 查看当前系统状态 top\n2. 操作系统信息 uname -a\n3. 查看当前系统进程信息 ps\n4. 查看历史命令 history\n5. 列出本机所有的连接和监听的端口 netstat\n6. 查看谁在使用某个端口 lsof\n\n用户登录\n\n1. 查看当前用户登录系统情况 who\n\n2. 分析超级权限账户 awk-F： ‘{if（$3==0）print $1}’/etc/passwd\n\n3. 查看可登录的账户 cat/etc/passwd|grep ‘/bin/bash’\n\n4. 查看用户错误的登录信息 lastb\n\n5. 查看所有用户最后的登录信息 lastlog\n\n6. 查看用户最近登录信息 last\n\n   /var/log/ 其中，/var/log/wtmp 存储登录成功的信息、btmp存储登录失败的信息、utmp存储当前正在登录的信息\n\n7. 查看空口令账户 awk-F： ‘length（$2）==0 {print $1}’/etc/shadow\n\n### Linux基线规范\n\n每个公司有每个公司的基线规范体系，但是答题分为下列五个方面\n\n**账号管理和授权**\n\n- 检查特殊账号，是否存在空密码的账户和 root 权限账户\n- 禁用或删除无用账号\n- 添加口令策略:`/etc/login.defs`修改配置文件，设置过期时间、连续认证失败次数\n- 禁止 root 远程登录，限制root用户直接登录。\n- 检查 su 权限。`vi /etc/pam.d/su`添加`auth required pam_wheel.so group=test`\n\n**服务**\n\n- 关闭不必要的服务\n- SSH 服务安全\n  - 不允许 root 账号直接登录系统，`PermitRootLogin=no`\n  - 修改 SSH 使用的协议版本为 2\n  - 修改允许密码错误次数（默认 6 次），`MaxAuthTries=3`\n\n**文件系统**\n\n- 设置 umask 值 `vi /etc/profile` 添加行 `umask 027`\n- 设置登录超时 `vi /etc/profile` 修改配置文件，将以 `TMOUT=` 开头的行注释，设置为 `TMOUT=180`\n\n**日志**\n\n- 启用 syslogd 日志，配置日志目录权限，或者设置日志服务器\n\n- 记录所有用户的登录和操作日志，通过脚本代码实现记录所有用户的登录操作日志，防止出现安全事件后无据可查\n\n  https://www.alibabacloud.com/help/zh/faq-detail/49809.htm\n\n**IP 协议安全要求**\n\n- 远程登录取消 telnet 采用 ssh\n- 设置 /etc/hosts.allow 和 deny\n- 禁止 ICMP 重定向\n- 禁止源路由转发\n- 防 ssh 破解，iptables (对已经建立的所有链接都放行，限制每分钟连接 ssh 的次数)+ denyhost (添加 ip 拒绝访问)\n\n**Linux 安全基线检查**\n\nLinux：https://cloud.tencent.com/developer/article/1668982\n\n### Windows 安全基线检查\n\nWindows：https://cloud.tencent.com/developer/article/1668937\n\n主要包括五个方面：身份鉴别、访问控制、安全审计、资源控制、剩余信息保护\n\n- **身份鉴别**\n\n  更改缺省账户\n\n  检查Guest用户是否禁用\n\n  密码复杂性要求\n\n  密码长度最小不能小于8位\n\n- **访问控制**\n\n  共享账户检查\n\n  远程关机授权\n\n  本地关机\n\n  授权帐户登陆\n\n- **安全审计**\n\n  用户登录日志记录\n\n  系统日志完备性检查\n\n  登录超时管理\n\n- **资源控制**\n\n  登录超时管理\n\n  远程登录超时配置\n\n- **剩余信息保护**\n\n  不显示上次的用户名\n\n  关机前清除虚拟内存页面\n\n  不启用可还原的加密来存储密码\n\n### 中间件基线规范（APACHE）\n\n> https://www.alibabacloud.com/help/zh/faq-detail/52981.htm\n\n配置\n\n- 账号\n- 授权\n- 日志\n- session 过期时间（防ddos）\n- 绑定监听地址\n\n禁止\n\n- 目录权限\n- 访问外部文件\n- CGI\n- 非法HTTP方法（PUT DELETE）\n\n隐藏\n\n- 服务版本号\n- 重定向错误页面\n\n删除\n\n- 配置文件\n- 默认安装的无用文件\n\n### 中间件常见漏洞\n\nhttps://www.freebuf.com/articles/web/192063.html\n\n**（一） IIS**\n1、PUT漏洞\n\n2、短文件名猜解\n\n3、远程代码执行\n\n4、解析漏洞\n\n**（二） Apache**\n1、解析漏洞\n\n2、目录遍历\n\n**（三） Nginx**\n1、文件解析\n\n2、目录遍历\n\n3、CRLF注入\n\n4、目录穿越\n\n**（四）Tomcat**\n1、远程代码执行\n\n2、war后门文件部署\n\n**（五）jBoss**\n1、反序列化漏洞\n\n2、war后门文件部署\n\n**（六）WebLogic**\n1、反序列化漏洞\n\n2、SSRF\n\n3、任意文件上传\n\n4、war后门文件部署\n\n**（七）其它中间件相关漏洞**\n1、FastCGI未授权访问、任意命令执行\n\n2、PHPCGI远程代码执行\n\n### Linux、Windows安全加固\n\n**IIS 服务器应该做哪些方面的保护措施？**\n\n整理来源：http://www.williamlong.info/archives/118.html\n\n1. 保持 Windows 升级\n2. 使用 IIS 防范工具\n3. 移除缺省的 Web 站点\n4. 如果你并不需要 FTP 和 SMTP 服务，请卸载它们\n5. 有规则地检查你的管理员组和服务:\n6. 严格控制服务器的写访问权限\n7. 设置复杂的密码\n8. 减少/排除 Web 服务器上的共享\n9. 禁用 TCP/IP 协议中的 NetBIOS\n10. 使用 TCP 端口阻塞\n11. 仔细检查 .bat 和 .exe 文件：每周搜索一次 .bat\n12. 管理 IIS 目录安全\n13. 使用 NTFS 安全\n14. 管理用户账户\n15. 审计你的 Web 服务器\n\n**Linux系统安全加固需要注意的内容**\n\n1. 关闭不必要的系统服务\n2. 更改 SSH 默认端口\n3. 禁止 root 用户远程 ssh 登录\n4. 限制用户使用 su 命令切换 root\n5. 密码复杂度策略\n6. 检查密码重复使用次数限制\n7. 检查是否存在空口令账号\n8. 禁止同时按下 ctrl+alt+del 重启\n9. 禁用 telnet 服务\n\n### 框架漏洞&常见命令注入漏洞？php? Strust2 ?\n\n- Struts2 OGNL 注入\n- weblogic\n- fastjson\n- TP5 代码执行\n- laravel：debug mode 远程代码执行漏洞（CVE-2021-3129）\n- Spring Expression Language SPEL 表达式注入\n- Spring Security Oauth2 远程代码执行\n- [Spring框架漏洞总结](https://www.freebuf.com/articles/web/286666.html)\n\n### 常见安全工具、设备\n\n**工具**\n\n- 端口及漏洞扫描：Namp、Masscan\n- 抓包：Wireshark，Burpsuite、Fiddler、HttpCanary\n- Web自动化安全扫描：Nessus、Awvs、Appscan、Xray\n- 信息收集：Oneforall、hole\n- 漏洞利用：MSF、CS\n- Webshell 管理：菜刀、蚁剑、冰蝎、哥斯拉\n\n**设备**\n\n[网络安全设备常识](https://wiki.wgpsec.org/knowledge/base/safety.html)\n\n常见的 HW 设备有：公安部网防G01、K01、360网康/网神防火墙、微步威胁情报、安恒云-Web应用防火墙（玄武盾）、默安蜜罐、知道创宇蜜罐、山石防火墙\n\n![image-20211224223800578](https://s2.loli.net/2022/05/25/ie4h5RDb9mOgKcZ.png)\n\n即客户拥有物理的基础设施（自建机房、自购设备、网络）\n\n- NGAF/NGFW：下一代 Web 应用防火墙（Next Generation Application Firewall，[通防火墙和下一代防火墙的区别](https://www.huaweicloud.com/zhishi/edit-582196.html)），聚合了以下功能\n\n  - IDS\n    - HIDS：基于主机的入侵检测系统\n    - NIDS：基于网络的入侵检测系统\n    - HIDS+NIDS：基于混合数据源的入侵检测系统\n  - IPS：入侵防御系统\n  - AV：反病毒系统\n\n- EDR：主机安全管理\\终端检测和响应\n\n  EDR 实时监测终端上发生的各类行为，采集终端运行状态，在后端通过大数据安全分析、机器学习、沙箱分析、行为分析、机器学习等技术，提供深度持续监控、威胁检测、高级威胁分析、调查取证、事件响应处置、追踪溯源等功能，可第一时间检测并发现恶意活动，包括已知和未知威胁，并快速智能地做出响应，全面赋予终端主动、积极的安全防御能力\n\n  简单来说就是给内网环境中所有主机安装管理软件终端，可以在管理平台集中管理和数据分析过滤，基本所有安全厂商都有自己的 EDR 产品\n\n- 运维审计和管理平台（堡垒机）\n\n- DAS：数据库安全审计平台\n\n- LAS：日志审计安全平台\n\n- AC：上网行为管理系统\n\n- 伪装欺骗系统（蜜罐、蜜网）\n\n- SIP：安全态势感知平台\n\n  这个算是让整套系统性能得到提升的灵魂了，定位为客户的安全大脑，是一个集检测、可视、响应处置于一体的大数据安全分析平台。产品以大数据分析为核心，支持主流的安全设备、网络设备、操作系统等多源数据接入，利用大数据、关联分析、告警降噪等技术，实现海量数据的统一挖掘分析\n\n**云网络**\n\n云网络包括私有云和公有云\n\n- 云主机安全\n- 云防火墙\n- 云堡垒机\n- 云蜜罐\n- 云 DDOS 防护\n- 等等\n\n### 绿盟设备\n\n- 堡垒机 SAS-H Series，堡垒机采用“物理旁路，逻辑串联”的部署思路\n- 绿盟威胁情报云 NTI https://nti.nsfocus.com/\n- 抗拒绝服务攻击系统 ADS\n- 安全和漏洞管理 AIRO\n- 网络入侵防护系统 IDPS\n- web 应用防火墙\n\n### 你拿到的cnvd\n\n### **工作经历\n\n安全服务工程师\n\n参加渗透测试、地方服务、HW\n\n根据客户方要求对所给资产进行了详细细致的渗透测试。挖掘漏洞，发现漏洞的第一时间与客户方汇报，使客户方能够及时整改修补问题漏洞，防止造成漏洞危害扩大\n\n### 攻防演练\n\n攻防演练中担任什么角色\n\n### 护网的分组和流程？\n\n护网的分组是在领导小组之下分为防护检测组，综合研判组，应急溯源组。流程大致分为备战，临战，决战三个阶段\n\n**备战阶段**，主要任务是进行两方面的操作，一是减少攻击面，即资产梳理，减少暴露面；二是排查风险点，即通过漏洞扫描，渗透测试，弱口令等进行自查\n\n**临战阶段**，主要任务也大致可以分为两个部分，一是进行内部演练，发现疏忽处并进行相应整改；二是可以适当增加安全设备，比如WAF，IPS，IDS，SOC，堡垒机等\n\n**决战阶段**，作为新人，主要就是坚守岗位，有应急日志就看自己能不能解决，不能就上报，服从上级安排，优化防护，持续整改\n\n### 简历有护网经历，你能谈谈护网的情况吗\n\n参加过护网蓝队，负责事件研判工作，主要使用 ips，ids 等设备做流量监控与日志分析工作判断安全事件是否为误判\n\n监控、研判、处置、溯源\n\n对安全管理中心发出的态势排查单进行排查，并将排查结果反馈给安全管理中心，对安全管理中心发出的封堵工单和解封工单进行对应的封堵与解封，每两小时反馈一次排查结果、设备巡检报告、封堵情况。查看呼池 DDOS 设备，记录并排查告警信息\n\n### 蓝队研判\n\n研判工作要充分利用已有安全设备（需要提前了解客户的网络拓扑以及部署设备情况），分析其近期的设备告警，将全部流量日志（日志条件：源地址，目的地址，端口，事件名称，时间，规则 ID，发生 次数等）根据研判标准进行筛选（像挖矿、蠕虫、病毒、拒绝服务这类不太可能为攻击方发起的攻击的事件，直接过滤掉，减少告警数量），一般情况下，真实攻击不可能只持续一次，它一定是长时间、周期性、多 IP 的进行攻击\n\n对于告警结合威胁情报库如：微步、奇安信威胁情报中心、**绿盟威胁情报云**等对于流量日志的原 IP 地址进行分析，判断其是否为恶意攻击，推荐使用微步的插件，如果确认为攻击行为或者不能确认是否为攻击行为，进行下一步操作，在之前准备好的表格中查找 IP 是否为客户内网部署的设备，如果不是，继续进行下一步，在事件上报平台查看是否有其他人提交过，如果没有，则上报\n\n然后根据流量日志，对请求数据包和返回数据包分析判断其是否为误报，需要留意 X-Forwarded-For（简称XFF）和 x-real-ip 可以了解些 webshell 工具的流量特征，尤其是免杀 webshell，有可能不会被设备识别\n\n最后上报事件时，尽可能提供完整的截图，包括源 ip、目的ip，请求包请求体，响应包响应体等重要信息，以方便后续人员研判溯源\n\n> 注：不要任意忽略内网告警，适当情况下可以往前推排查时间\n\n### 蓝队组成\n\n蓝队的主要工作包括前期安全检查、整改与加固，演习期间进行网络安全监测、预警、分析、验证、处置，后期复盘总结现有防护工作中的不足之处，为后续常态化的网络安全防护措施提供优化依据\n\n监控、研判、处置、溯源\n\n### SQL注入检测\n\nSQL注入攻击检测可根据入侵事件发生的前后进行区分，在入侵前可以对 Payload 进行检测等方式以预防 SQL 注入攻击。在入侵检测后可以通过对数据库、IIS 日志等进行检查以进行判断\n\n传统的SQL注入检测方法通常根据经验提取特征，然后基于规则库匹配的方法来检测是否为 SQL 注入语句，其设计一般较为复杂，且规则模式更新频繁，在此采用机器学习的方式尝试对 SQL 注入语句进行检测\n\n### DDOS CC应急思路以及如何防范\n\n目前对于低网络层的 DDoS 攻击有一些有效的防护手段，如丢弃第一次 SYN 包，上流量防护设备，上 WAF 封禁地址等\n\n比较难缠的是第七层，第八层的 CC 攻击，它会找到目标网站上比较消耗资源的关键位置，重复发起攻击以消耗 CPU/内存/数据库/IO 等资源，目前的应付手段有：\n\n1. 优化资源消耗高位置的代码\n2. 增加硬件设备\n3. 上云\n4. 购买专业安全公司的安全服务\n5. 除此之外，隐藏服务器的真实 IP、上云 WAF、CDN、 负载均衡等设备，或者暂时将域名解析到公安网警网站等也是可以作为选择方案\n\n- 网络设备设施\n  - 拼带宽，加大带宽，但是成本太高\n  - 使用硬件防火墙\n  - 选用高性能设备\n- 抗 D 思想和方案\n  - 负载均衡\n  - 花钱买流量清洗服务\n  - CDN：web 层，比如 cc 攻击\n  - 分布式集群防御\n  - 高防：防大部分攻击，udp、大型的 cc 攻击\n- 预防为主\n  - 系统漏洞\n  - 系统资源优化\n  - 过滤不必要的服务和端口\n  - 限制特定流量：检查访问来源做适当限制\n\n### 挖矿病毒判断&挖矿常见手段&处理\n\n[挖矿病毒，自己搜搜](https://zhuanlan.zhihu.com/p/139019250)\n\n挖矿木马占用系统资源进行挖矿行为，一般电脑会有以下特征\n\n1. 系统响应缓慢\n2. CPU/显卡使用率过高\n3. 内存/带宽占用高\n\n登录进可疑主机后，可以通过以下方式确认挖矿木马（即入侵排查流程）\n\n1. 查看进程（系统命令 ps、Is 有可能被替换）\n2. 检查日志、检查系统用户\n3. 发现异常文件\n\n**挖矿常用手段**\n\n1. 未授权访问或弱口令：Redis 未授权访问、Docker API 未授权访问、Hadoop Yarn 未授权访问、NFS 未授权访问、Rsync 弱口令、PostgreSQL 弱口令、Tomcat 弱口令、SSH 弱口令、Telnet 弱口令、Windows 远程桌面弱口令\n2. 远程命令执行漏洞：WebLogic XML 反序列化漏洞、Jenkins 反序列化、Jboss 远程代码执行、Spring 远程代码执行、ElasticSearch 命令执行、永恒之蓝、Struts2 系列漏洞、常见 CMS 的远程命令执行漏洞\n3. 新爆的高危漏洞：一般每次爆发新的高危漏洞，都会紧跟一波大规模的全网扫描利用和挖矿\n\n**清除挖矿木马**\n\n**原因排查**\n\n一旦发现服务器被挖矿，应该首先查看挖矿进程所属的用户，根据挖矿进程的运行用户去排查该用户下是否还运行着其它进程，确定这些进程是否有上述经常被黑客利用的漏洞。如果有常见的漏洞，则应该重点对此进行排查找到原因\n\n**清除木马**\n\n1. 及时隔离主机\n\n   部分带有蠕虫功能的挖矿木马在取得本机的控制权后，会以本机为跳板机，对同一局域网内的其他主机进行已知漏洞的扫描和进一步利用， 所以发现挖矿现象后，在不影响业务的前提下应该及时隔离受感染主机，然后进行下一步分析\n\n2. 删除文件、阻断与矿池通讯\n\n   ```bash\n   iptables -A INPUT -S xmr.crypto- pool.fr -j DROP\n   iptables -A OUTPUT -d xmr.crypto- pool.fr -j DROP\n   ```\n\n3. 清除定时任务\n\n   大部分挖矿进程会在受感染主机中写入定时任务来完成程序的驻留，当安全人员只清除挖矿木马时，定时任务会再次从服务器下载挖矿进程或者直接执行挖矿脚本，导致挖矿进程清除失败\n\n4. 清除启动项\n\n   有的挖矿进程为了实现长期驻留，会向系统中添加启动项来确保系统重启后挖矿进程还能重新启动，所以在清除时还应该关注启动项中的内容如果有可疑的启动项，也应该进行排查，确认是挖矿进程后，对其进行清除\n\n5. kill 挖矿进程\n\n   对于单进程挖矿程序，直接结束挖矿进程即可。但是对于大多数的挖矿进程，如果挖矿进程有守护进程，应先杀死守护进程再杀死挖矿进程，避免清除不彻底\n   在实际的清除工作中，应找到本机上运行的挖矿脚本，根据脚本的执行流程确定木马的驻留方式， 并按照顺序进行清除， 避免清除不彻底\n\n6. 清除公钥文件\n\n   在用户 home 目录的 .ssh 目录下放置 authoruzed_keys 文件，从而免密登录该机器也是一种常见的保持服务器控制权的手段。在排查过程中应该查看该文件中是否有可疑公钥信息，有的话直接删除，避免攻击者再次免密登录该主机\n\n### 服务器存在webshell，如何处理？\n\n网站被植入 webshell，意味着网站存在可利用的高危漏洞，攻击者通过利用漏洞入侵网站，写入 webshell 接管网站的控制权\n\n1. 及时隔离主机\n2. 定位事件范围，查看文件 webshell 文件的创建时间，对 webshell 取证样本\n3. 通过创建时间结合日志分析可疑行为，以及启动用户的其他进程确定漏洞\n4. 清除 webshell 及残留文件，修复漏洞，参考上题\n\n### 排查 shell 应该用什么命令来进行排查\n\nfind 命令\n\n```bash\nfind /var/www/html -name \"*.php\" |xargs egrep 'assert|eval|phpinfo\\(\\)|\\(base64_decoolcode|shell_exec|passthru|file_put_contents\\(\\.\\*\\$|base64_decode\\('\n```\n\n### 如何检测webshell\n\n**主机层面**\n\n- 静态检测\n\n  静态检测通过匹配特征码，特征值，危险函数函数来查找 webshell 的方法，只能查找已知的 webshell\n\n- 动态检测\n\n  webshell 传到服务器了，在执行函数时这些对于系统调用、系统配置、数据库、文件的操作动作都是可以作为判断依据\n\n- 日志检测\n\n  使用 webshell 一般不会在系统日志中留下记录，但是会在网站的 web 日志中留下 webshell 页面的访问数据和数据提交记录\n\n- 语法检测\n\n  语法语义分析形式，是根据 php 语言扫描编译的实现方式，进行剥离代码、注释，分析变量、函数、字符串、语言结构的分析方式，来实现关键危险函数的捕捉方式这样可以完美解决漏报的情况但误报上\n\n**流量层面**\n\n### Webshell管理工具的流量特征\n\n[冰蝎动态二进制加密WebShell特征分析](https://www.freebuf.com/articles/web/213905.html)\n\n[常见WebShell客户端的流量特征及检测思路](https://www.freebuf.com/column/204796.html)\n\n**菜刀**\n\n菜刀 webshell 只使用了 url 编码 + base64 编码\n\nshell 特征就是传输参数名为 z0，还存在`int_set(\"display_erros\",\"0\")`字符串特征\n\n**蚁剑**\n\n默认的蚁剑 shell，连接时会请求两次，其请求体只是经过 url 编码，其流量中也存在和蚁剑一样的代码\n\n第一次请求，关闭报错和 magic_quotes，接下来去获取主机的信息\n\n第二次请求，会把主机目录列出来\n\n**冰蝎2.0**\n\n使用 aes 加密发起三次请求\n\n第一次请求服务端产生密钥写入 session，session 和当前会话绑定，不同的客户端的密钥也是不同的\n\n第二次请求是为了获取 key，第三次使用 key 的 aes 加密进行通信\n\n**冰蝎3.0**\n\n使用 aes 加密发起两次请求\n\n3.0 分析流量发现相比 2.0 少了动态密钥的获取的请求，不再使用随机生成 key，改为取连接密码的 md5 加密值的前 16 位作为密钥\n\n一次请求为判断是否可以建立连接，少了俩次 get 获取冰蝎动态密钥的行为，第二次发送 phpinfo 等代码执行，获取网站的信息\n\n**哥斯拉**\n\n支持 n 种加密\n\n采用了和冰蝎 3.0 一样的密钥交换方式，哥斯拉建立连接时会发起三次请求，第一次请求数据超级长，建立 session，第二三次请求确认连接\n\n### 常见端口漏洞\n\n**数据库类（扫描弱口令）**\n\n- 1433：MSSQL\n- 1521：Oracle\n- 3306：Mysql\n- 5432：PostgreSQL\n\n**特殊服务类（未授权/命令执行）**\n\n- 443：ssl 心脏滴血\n- 873：Rsync 未授权\n- 5984：CouchDB http：//xxx:5984/_utils/\n- 6379：Redis 未授权\n- 7001、7002：Weblogic 默认弱口令\n- 8088：Hadoop Yarn 资源管理系统 REST API 存在未授权\n- 8161：Apache ActiveMQ 未授权、弱口令，put 文件上传，move 文件移动\n- 9200、9300：elasticsearch 命令执行\n- 11211：Memcache 未授权，telnet ip 就可以获得服务器敏感信息\n- 27017、27018：Mongodb 未授权\n- 50000：SAP 命令执行\n- 50070、50030 Hadoop 未授权访问\n\n**常用端口类（弱口令/端口爆破）**\n\n- 21：FTP 弱口令，匿名 anonymous/空登录，以及 ms12-073\n- 25：SMTP 简单邮件传输服务器端口\n- 23：Telnet 的端口，Telnet 是一种可以远程登录并管理远程机器的服务\n- 22：ssh 端口，PcAnywhere 建立 TCP 和这一端口的连接可能是为了寻找 ssh，这一服务有许多弱点\n- 53：dns 端口\n- 139：属于 TCP 协议，是为 NetBIOS Session Service 提供的，主要提供 Windows 文件和打印机共享以及 Unix 中的 Samba 服务\n- 445：网络共享 smb 服务，尝试利用 ms08067，ms17010 等以及 IPC$ 攻击手段\n- 2601、2604：zebra 路由，默认密码 zebra\n\n### 三次握手与四次挥手\n\nhttps://www.eet-china.com/mp/a44399.html\n\n背景：TCP 位于传输层，作用是提供可靠的字节流服务，为了准确无误地将数据送达目的地，TCP 协议采纳三次握手四次挥手策略\n\n**三次握手（three-way handshaking）**\n\nTCP 三次握手，其实就是 TCP 应用在发送数据前，通过 TCP 协议跟通信对方协商好连接信息，建立起 TCP 的连接关系\n\n1. 第一次握手：客户端发送 `SYN` 报文，并进入 `SYN_SENT` 状态，等待服务器的确认\n2. 第二次握手：服务器收到 `SYN` 报文，需要给客户端发送 `ACK` 确认报文，同时服务器也要向客户端发送一个 `SYN` 报文，所以也就是向客户端发送 `SYN + ACK` 报文，此时服务器进入 `SYN_RCVD` 状态\n3. 第三次握手：客户端收到 `SYN + ACK` 报文，向服务器发送确认包，客户端进入 `ESTABLISHED` 状态。待服务器收到客户端发送的 `ACK` 包也会进入 `ESTABLISHED` 状态，完成三次握手\n\n**四次挥手（Four-Way-Wavehand）**\n\n当我们的应用程序不需要数据通信了，就会发起断开 TCP 连接。建立一个连接需要三次握手，而终止一个连接需要经过四次挥手\n\n1. 第一次挥手：客户端发送一个 `FIN`，用来关闭客户端到服务端的数据传送，客户端进入 `FIN_WAIT_1` 状态\n2. 第二次挥手：服务端收到 `FIN` 后，发送一个 `ACK` 给客户端，确认序号为收到序号 +1（与SYN相同，一个FIN占用一个序号），服务端进入 `CLOSE_WAIT` 状态\n3. 第三次挥手：服务端发送一个 `FIN`，用来关闭服务端到 客户端的数据传送，服务端进入 `LAST_ACK` 状态\n4. 第四次挥手：客户端收到 `FIN` 后，客户端进入 `TIME_WAIT` 状态，接着发送一个 `ACK` 给服务端，确认序号为收到序号 +1，服务端进入 `CLOSED` 状态，完成四次挥手\n\n### 一个大范围影响的0day被曝光，作为甲方安全工程师，应该如何处理(★★)\n\n1. 首先是评估 0day 对自身系统的影响（这部分评估需要根据漏洞利用的利用点、是否需要交互、是否会影响系统的 CIA，是否有在野利用 poc，影响资产是否暴露在公网等很多因素决定，详情可以参考 CVSS ）\n2. 如果确定有影响的话且有 poc，第一件事是先分析 poc 执行后会在什么地方留下痕迹，我们有什么样的设备去采集这些痕迹所留下的数据，比如说 ntlm relay 这种，可以考虑从 Windows 事件日志当中 event_id 等于 4769 的事件入手编写对应的规则，这样的话可以利用 SIEM 或者实时日志分析平台跑起来，可以建立起初步的感知防线，后期触发告警，人肉运营也可以快速止损\n3. 日常建立完整的纵深防御体系，不要依赖于某一道防线\n\n### 服务器操作系统的安全防范？\n\n1. 停止运行不需要的软件（很可能成为外部攻击的入口）\n2. 定期实施漏洞防范措施（选定软件时确认软件的升级状况，确定打补丁方式，关注各种漏洞信息，确认漏洞后调查补丁状况以及防范对策，并制定对应计划）\n3. 对不需要对外公开的端口或者服务加以访问限制（通过端口扫描确认各端口服务状态）\n4. 提高认证强度\n\n### 怎么发现有没有被攻击\n\n攻击判断可以建立在设备的基础上，利用设备的告警，如果没有设备的话可以参考以下\n\n网站被攻击：网站被跳转到赌博网站，网站首页被篡改，百度快照被改，网站被植入 webshell 脚本木马，网站被 DDOS、CC 压力攻击\n\n服务器被黑：服务器系统中木马病毒，服务器管理员账号密码被改，服务器被攻击者远程控制，服务器的带宽向外发包，服务器被流量攻击，ARP攻击（目前这种比较少了，现在都是基于阿里云，百度云，腾讯云等云服务器）\n\n对登录记录、系统日志、web 日志等进行分析\n\n## ⬆️细节题\n\n### 你能大概说一下，比如数据包或者日志，你的分析思路是什么，以及你会用到哪些工具或者那些网站进行查询？\n\n用流量监测的安全设备，比如天眼，查看报文，分析报文里和 host 和网站目录路径，查看是否可疑，使用微步查询 host 是否为恶意，使用 wireshark 对数据包深度分析\n\n看一下请求的网站路径，源 IP 与目的 IP 地址，host 字段的值以及发包内容等\n\n工具有 wireshark，网站的话微步在线等威胁情报中心\n\n### 文件上传和命令执行，有看过相关日志吗\n\n文件：可能在系统有上传功能或者有文本编辑器，看一下是否有 base64 加密或者 url 加密，解码验证一下是否有恶意代码\n\n系统日志：有没有 web 容器做了一些危险行为，比如 bash 反弹 shell 等\n\n网络应用日志：有没有异常的网站文件，类似 webshell 等，**就有可能是命令执行**\n\n### windows日志分析工具\n\nLog Parser、LogParser Lizard、Event Log Explorer\n\n### Linux日志分析技巧命令\n\n1. 定位有多少IP在爆破主机的root帐号：\n\n   ```bash\n   grep \"Failed password for root\" /var/log/secure | awk '{print $11}' | sort | uniq -c | sort -nr | more\n   ```\n\n2. 定位有哪些IP在爆破：\n\n   ```bash\n   grep \"Failed password\" /var/log/secure|grep -E -o \"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\"|uniq -c\n   ```\n\n3. 爆破用户名字典是什么？\n\n   ```bash\n   grep \"Failed password\" /var/log/secure|perl -e 'while($_=<>){ /for(.*?) from/; print\"$1\\n\";}'|uniq -c|sort -nr\n   ```\n\n4. 登录成功的IP有哪些\n\n   ```bash\n   grep \"Accepted \" /var/log/secure | awk '{print $11}' | sort | uniq -c | sort -nr | more\n   登录成功的日期、用户名、IP：\n   grep \"Accepted \" /var/log/secure | awk '{print $1,$2,$3,$9,$11}'\n   ```\n\n5. 增加一个用户kali日志：\n\n   ```bash\n   Jul 10 00:12:15 localhost useradd[2382]: new group: name=kali, GID=1001\n   Jul 10 00:12:15 localhost useradd[2382]: new user: name=kali, UID=1001, GID=1001,\n   home=/home/kali\n   , shell=/bin/bash\n   Jul 10 00:12:58 localhost passwd: pam_unix(passwd:chauthtok): password changed for kali\n   #grep \"useradd\" /var/log/secure\n   ```\n\n6. 删除用户kali日志：\n\n   ```bash\n   Jul 10 00:14:17 localhost userdel[2393]: delete user 'kali'\n   Jul 10 00:14:17 localhost userdel[2393]: removed group 'kali' owned by 'kali'\n   Jul 10 00:14:17 localhost userdel[2393]: removed shadow group 'kali' owned by 'kali'\n   # grep \"userdel\" /var/log/secure\n   ```\n\n7. su切换用户：\n\n   ```bash\n   Jul 10 00:38:13 localhost su: pam_unix(su-l:session): session opened for user good by\n   root(uid=0)\n   sudo授权执行:\n   sudo -l\n   Jul 10 00:43:09 localhost sudo: good : TTY=pts/4 ; PWD=/home/good ; USER=root ;\n   COMMAND=/sbin/shutdown -r now\n   ```\n\n### 给你一个比较大的日志，应该如何分析\n\n- 攻击规则匹配，通过正则匹配日志中的攻击请求\n- 统计方法，统计请求出现次数，次数少于同类请求平均次数则为异常请求\n- 白名单模式，为正常请求建立白名单，不在名单范围内则为异常请求\n- HMM 模型，类似于白名单，不同点在于可对正常请求自动化建立模型，从而通过正常模型找出不匹配者则为异常请求\n- 借助日志分析工具，如 LogForensics 腾讯实验室 https://security.tencent.com/index.php/opensource/detail/15\n\n### Windows在应急响应中的安全日志以及对应场景\n\n### 设备误报如何处理\n\n（日志）\n\n### Windows和Linux的日志文件放在哪里\n\n- Windows 主要有以下三类日志记录系统事件：应用程序日志、系统日志和安全日志\n\n  系统日志：` %SystemRoot%\\System32\\Winevt\\Logs\\System.evtx`\n\n  应用程序日志：`%SystemRoot%\\System32\\Winevt\\Logs\\Application.evtx`\n\n  安全日志：`%SystemRoot%\\System32\\Winevt\\Logs\\Security.evtx`\n\n- Linux\n\n  日志默认存放位置：`/var/log/`\n  查看日志配置情况：more /etc/rsyslog.conf\n\n### 常见中间件的配置文件路径\n\n- apache：`/etc/httpd/conf`\n- nginx：`/etc/nginx`\n- iis7：`C:\\Windows\\System32\\inetsrv\\config\\`\n\n### 如何查看系统内存 shell\n\n- 文章汇总：[link](https://blog.csdn.net/shuteer_xu/article/details/117458250)\n- 查杀内存马：[link](https://gv7.me/articles/2020/kill-java-web-filter-memshell/)\n- php、python、java内存马分析：[link](https://www.geekby.site/2021/09/webshell内存马分析/)\n\n### Java 内存马排查\n\nhttps://www.freebuf.com/articles/web/274466.html\n\n如果我们通过检测工具或者其他手段发现了一些内存webshell的痕迹，需要有一个排查的思路来进行跟踪分析，也是根据各类型的原理，列出一个排查思路。\n\n> 如果是jsp注入，日志中排查可疑jsp的访问请求。\n>\n> 如果是代码执行漏洞，排查中间件的error.log，查看是否有可疑的报错，判断注入时间和方法\n>\n> 根据业务使用的组件排查是否可能存在java代码执行漏洞以及是否存在过webshell，排查框架漏洞，反序列化漏洞。\n>\n> 如果是servlet或者spring的controller类型，根据上报的webshell的url查找日志（日志可能被关闭，不一定有），根据url最早访问时间确定被注入时间。\n>\n> 如果是filter或者listener类型，可能会有较多的404但是带有参数的请求，或者大量请求不同url但带有相同的参数，或者页面并不存在但返回200\n\n### 如何修改WEB端口？如果不能修改端口还有什么利用方法？\n\n修改 web 端口：修改中间件配置文件中的 web 服务端口即可\n\n不能修改的话可以使用端口映射，使用 nginx 反向代理也可以\n\n### 获得文件读取漏洞，通常会读哪些文件，Linux和windows都谈谈\n\n**通用**\n\n- 找 Web 应用的配置文件，指不定有外联数据库\n- 找 Web 中间件的配置文件，指不定有 Tomcat 配置界面的用户密码\n- 找系统文件\n\n**linux**\n\n- `etc/passwd、etc/shadow`直接读密码\n\n- `/etc/hosts` # 主机信息\n\n- `/root/.bashrc` # 环境变量\n\n- `/root/.bash_history` # 还有root外的其他用户\n\n- `/root/.viminfo` # vim 信息\n\n- `/root/.ssh/id_rsa` # 拿私钥直接ssh\n\n- `/proc/xxxx/cmdline` # 进程状态枚举 xxxx 可以为0000-9999 使用burpsuite\n\n- 数据库 config 文件\n\n- web 日志 `access.log, error.log`\n\n- ssh 日志\n\n  ```bash\n  /root/.ssh/id_rsa\n  /root/.ssh/id_rsa.pub\n  /root/.ssh/authorized_keys\n  /etc/ssh/sshd_config\n  /var/log/secure\n  /etc/sysconfig/network-scripts/ifcfg-eth0\n  /etc/syscomfig/network-scripts/ifcfg-eth1\n  ```\n\n- `/var/lib/php/sess_PHPSESSID` # 非常规问题 session 文件( 参考 平安科技的一道session包含 http://www.jianshu.com/p/2c24ea34566b)\n\n**windows**\n\n- `C:\\boot.ini` //查看系统版本\n- `C:\\Windows\\System32\\inetsrv\\MetaBase.xml` //IIS 配置文件\n- `C:\\Windows\\repair\\sam` //存储系统初次安装的密码\n- `C:\\Program Files\\mysql\\my.ini` //Mysql 配置\n- `C:\\Program Files\\mysql\\data\\mysql\\user.MY D` //Mysql root\n- `C:\\Windows\\php.ini` //php 配置信息\n- `C:\\Windows\\my.ini` //Mysql 配置信息\n\n### 如何分析被代理出来的数据流\n\n分析数据包请求头中的 xff、referer 等收集有用的信息\n\n[基于网络欺骗与浏览器指纹的WEB攻击溯源](https://www.freebuf.com/articles/web/245585.html)\n\n### windows端口进程间转换\n\n端口->进程\n\n1. `netstat -ano | findstr “port”`查看目前的网络连接，定位可疑的 ESTABLISHED\n2. 根据`netstat `定位出的 pid，再通过`tasklist`命令进行进程定位` tasklist | findstr “PID”`\n\n![image-20220103194348302](https://s2.loli.net/2022/05/25/NVM7Jl4bv8sqyiK.png)\n\n### 查看进程对应的程序位置\n\n任务管理器–选择对应进程–右键打开文件位置运行输入 wmic，cmd界面 输入 process\n\n查看 Windows 服务所对应的端口\n\n`%system%/system32/drivers/etc/services`（一般 %system% 就是 C:\\Windows）\n\n### 查看windows进程的方法\n\n1. 开始 – 运行 – 输入`msinfo32` 命令，依次点击 “软件环境 – 正在运行任务” 就可以查看到进程的详细信息，比如进程路径、进程ID、文件创建日期以及启动时间等\n2. 打开D盾_web查杀工具，进程查看，关注没有签名信息的进程\n3. 通过微软官方提供的 Process Explorer 等工具进行排查\n\n查看**可疑的进程**及其子进程。可以通过观察以下内容：\n\n- 没有签名验证信息的进程\n- 没有描述信息的进程\n- 进程的属主\n- 进程的路径是否合法\n- CPU 或内存资源占用长时间过高的进程\n\n### 你能说明文件上传的原理吗？\n\n- PHP：如果系统中存在可以上传文件的功能点，就可以上传后门脚本文件，通过一些方法绕过上传限制，如果能访问后门的的话，系统存在文件上传漏洞，可以借助后门执行命令\n- Java：上传 jsp 代码\n- Asp/Aspx\n- Python：因为脚本需要译后生成 pyc 字节码文件，所以不存在文件上传\n\n### 文件上传攻击特征？\n\n能够上传文件的接口，应用程序对用户上传文件类型不校验或者校验不严格可绕过，导致任意类型文件上传，攻击者可上传 webshell 拿到服务器权限，在这个过程中攻击者必然会上传恶意脚本文件\n\n### 文件上传加固方法？\n\n1. 后端限制文件上传白名单，头像不允许上传 svg\n2. 上传后文件随机重命名，不要输出保存文件位置\n3. 图片文件可以二次渲染，使用对象存储 oss\n4. 文件目录取消执行权限，PHP 设置 basedir\n\n### 用过Nmap扫描工具吗\n\nnmap 扫描基础命令\n\n- -sT TCP (全)连接扫描，准确但留下大量日志记录\n- -sS TCP SYN (半)扫描，速度较快，不会留下日志\n- -sN null 扫描，标志位全为 0，不适用 Windows\n- -sF FIN 扫描，标志位 FIN=1，不适用 Windows\n- -O 查看目标主机系统版本\n- -sV 探测服务版本\n- -A 全面扫描\n\n![img](https://s2.loli.net/2022/05/25/rdcNnQ5zoyEqHhK.png)\n\n### 你做过渗透测试的工作吗？\n\n首先信息收集，收集子域名、Whois、C段、旁站、Web 系统指纹识别，然后测试 web 系统的漏洞\n\n### 暴力破解加固方法？\n\n1. 添加强度较高的验证码，不易被破解\n2. 修改密码设置规则，提高用户的密码强度\n3. 同一账号登陆次数锁定，生成锁定日志\n4. 定期排查弱口令\n\n### Sql注入加固措施？\n\n对于输入的字符进行过滤\n\n使用 PDO 预编译语句处理\n\n### 一台主机在内网进行横向攻击，你应该怎么做？\n\n确定攻击来源，是不是员工内部误操作，比如询问运维是否有自动化轮训脚本\n\n如果没有，确定是攻击，结合时间点，根据设备信息，看一下安全事件，进程，流量\n\n找到问题主机，开始应急响应流程：准备、检测、遏制、根除、恢复、跟踪，具体的操作要交给现场运维去处理\n\n### 你还用过其他态势感知的产品吗？\n\nips，ids，hids，堡垒机等\n\n### 命令行工具用的什么比较多？\n\nxshell、xftp、finalshell\n\n### 你用过微步吗？\n\n微步在线是一个威胁情报中心，可以通过 ip 或域名查询其是不是恶意的，对于判断恶意链接具有一定的参考性，他还有一个插件可以在页面选中就能进行查询，还是一个比较好用的工具\n\n### 什么是跨域，JSONP与CORS\n\n**同源策略**\n\n同源策略：域名、协议、端口均相同\n\n浏览器执行 JavaScript 脚本时，会检查这个脚本属于那个页面，如果不是同源页面，就不会被执行\n\n**什么是跨域？**\n\n跨域：指的是浏览器不能执行其它网站的脚本，它是由浏览器的同源策略造成的，是浏览器的安全限制！\n\n**JSONP跨域**\n\n利用 js script 标签中 src 属性可以跨域的特性，使用 callback 参数的函数名来接收数据\n\n只支持 GET 请求，不支持 POST 等其它请求，也不支持复杂请求，只支持简单请求\n\n**CORS跨域**\n\n支持所有的请求，包含 GET、POST、OPTOIN、PUT、DELETE 等既支持复杂请求，也支持简单请求\n\nJSONP 与 CORS 的使用目的相同，并且都需要服务端和客户端同时支持，但 CORS 的功能更加强大\n\n**JSONP和CORS的优缺点**\n\n1. JSONP 的主要优势在于对浏览器的支持较好；虽然目前主流浏览器都支持 CORS，但 IE9 及以下不支持 CORS\n2. JSONP 只能用于获取资源（即只读，类似于 GET 请求）；CORS 支持所有类型的 HTTP 请求，功能完善\n3. JSONP 只会发一次请求；而对于复杂请求，CORS 会发两次请求\n\n**应用场景**\n\n如果需要兼容IE低版本浏览器，无疑，JSONP\n\n如果需要对服务端资源进行操作，无疑，CORS\n\n其他情况的话，根据自己的对需求的分析来决定和使用\n\n### http状态与无连接\n\n**无连接**\n\n1. 每一个访问都是无连接，服务器挨个处理访问队列里的访问，处理完一个就关闭连接，这事儿就完了，然后处理下一个新的\n2. 无连接的含义是限制每次连接只处理一个请求服务器处理完客户的请求，并收到客户的应答后，即断开连接\n\n**无状态**\n\n1. 协议对于事务处理没有记忆能力\n2. 对同一个 url 请求没有上下文关系\n3. 每次的请求都是独立的，它的执行情况和结果与前面的请求和之后的请求是无直接关系的，它不会受前面的请求应答情况直接影响，也不会直接影响后面的请求应答情况\n4. 服务器中没有保存客户端的状态，客户端必须每次带上自己的状态去请求服务器\n\n### 什么是路由表\n\n在计算机网络中，路由表（routing table）或称路由择域信息库（RIB, Routing Information Base），是一个存储在路由器或者联网计算机中的电子表格（文件）或类数据库路由表存储着指向特定网络地址的路径（在有些情况下，还记录有路径的路由度量值）路由表中含有网络周边的拓扑信息路由表建立的主要目标是为了实现路由协议和静态路由选择\n\n每个路由器中都有一个路由表和 FIB(Forward Information Base) 表：路由表用来决策路由，FIB 用来转发分组路由表中有三类路由：\n\n1. 链路层协议发现的路由（即是直连路由）\n2. 静态路由\n3. 动态路由协议 RIP、OSRF 发现的路由\n\n### 非sql数据库\n\nZookeeper，HBase、Redis、MongoDB、Couchbase、LevelDB\n\n### 常见OA系统\n\nPHP：通达OA、泛微 Eoffice\n\nJava：泛微OA/云桥、致远OA、蓝凌OA、用友OA\n\nASP：启莱OA\n\n### 横向越权漏洞的修复\n\n横向越权：横向越权指的是攻击者尝试访问与他拥有相同权限的用户的资源\n\n纵向越权：纵向越权指的是一个低级别攻击者尝试访问高级别用户的资源\n\n对于纵向越权，我们可以通过设置用户角色，为不同的角色提供不同的权限来避免\n\n为了防止横向越权，我们可以使用缓存来进行辅助，当登录成功或者进行操作时，我们在缓存中存储一对由用户名和一个唯一的数字组成的数据（token），然后返回放入的唯一数据在重置密码时我们的参数不仅需要用户名和密码还需要前面生成的唯一数字，根据用户名在缓存中取出对应的数字，如果取出的数字和参数中传入的想等，则证明重置的当前用户的密码，否则不是，且不予以重置\n\n### 如何打击黑灰产工具\n\n1. 全面监控和快速响应（溯源）：对黑灰进行长期跟进，了解黑灰产工具的传播链条和路径，第一时间捕获活跃的黑灰产工具（建立特征词监控，数据取样、交叉分析）\n2. 建立软件指纹库，增加风险识别能力\n3. 建立黑灰产情报共享，最大化情报价值\n\n### 如何反爬\n\n1. 后台对访问进行统计，如果单个 IP 访问超过阈值，予以封锁\n2. 后台对访问进行统计，如果单个 session 访问超过阈值，予以封锁\n3. 后台对访问进行统计，如果单个 userAgent 访问超过阈值，予以封锁\n4. 以上的组合\n\n### Linux下查找服务端口的命令\n\nLinux下查找服务端口的命令？一句话查找80端口服务的命令？\n\n使用grep 命令 要使用 grep 命令在Linux 中查找指定服务的默认端口号，只需运行\n\n```bash\ngrep <port> /etc/services\ngrep services /etc/services\n```\n\n![image-20220107203438844](https://s2.loli.net/2022/05/25/qZVnLyhwU1mDdXs.png)\n\n### 如何发现钓鱼邮件\n\n**钓鱼邮件发现**\n\n发现途径如下：\n\n邮件系统异常登录告警、员工上报、异常行为告警、邮件蜜饵告警\n\n推荐接入微步或奇安信的情报数据。对邮件内容出现的 URL 做扫描，可以发现大量的异常链接\n\n### 钓鱼邮件处置\n\nhttps://www.freebuf.com/articles/es/264037.html\n\n1. 屏蔽办公区域对钓鱼邮件内容涉及站点、URL 访问\n\n   根据办公环境实际情况可以在上网行为管理、路由器、交换机上进行屏蔽\n\n   邮件内容涉及域名、IP 均都应该进行屏蔽\n\n   对访问钓鱼网站的内网 IP 进行记录，以便后续排查溯源可能的后果\n\n2. 屏蔽钓鱼邮件\n\n   屏蔽钓鱼邮件来源邮箱域名\n\n   屏蔽钓鱼邮件来源 IP\n\n   有条件的可以根据邮件内容进行屏蔽\n\n   删除还在邮件服务器未被客户端收取钓鱼邮件\n\n3. 处理接收到钓鱼邮件的用户\n\n   - 根据钓鱼邮件发件人进行日志回溯\n\n     此处除了需要排查有多少人接收到钓鱼邮件之外，还需要排查是否公司通讯录泄露。采用 TOP500 姓氏撞库发送钓鱼邮件的攻击方式相对后续防护较为简单。如果发现是使用公司通讯录顺序则需要根据通讯录的离职情况及新加入员工排查通讯录泄露时间。毕竟有针对性的社工库攻击威力要比 TOP100、TOP500 大很多\n\n   - 通知已接收钓鱼邮件的用户进行处理\n\n   - **删除钓鱼邮件**\n\n   - **系统改密**\n\n   - **全盘扫毒**\n\n4. 后续：溯源、员工培训提升安全意识\n\n### 如何查看区分是扫描流量和手动流量\n\n（扫描数据量大，请求有规律，手动扫描间隔较少）\n\n### 遇到.exe文件如何处理？\n\n首先看它的来源和去向，然后可以下载但不运行，放入微步沙箱中，看是否有后门，若有后门，就用 IDA 反汇编得到恶意攻击者的有用信息，再进一步描绘出攻击者画像进行溯源\n\n### Linux 的 Selinux 是什么？如何设置 Selinux？\n\nSELinux 是一种安全子系统，它能控制程序只能访问特定文件使用 setup 工具进入图形化关闭搜索或者修改`/etc/sysconfig/selinux` 文件\n\n```bash\nSELINUX=disabled\n```\n\n防火墙打开使用 `service iptables start` 或则`/etc/init.d/iptables start`\n\n### iptables 工作在 TCP/IP 模型中的哪层？\n\n网络层\n\n### 日志分析ELK的使用和分析\n\n> https://www.zhihu.com/question/21427267\n>\n> - Elasticsearch是个开源分布式搜索引擎，它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。\n> - Logstash是一个完全开源的工具，他可以对你的日志进行收集、过滤，并将其存储供以后使用（如，搜索）。\n> - Kibana 也是一个开源和免费的工具，它Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助您汇总、分析和搜索重要数据日志。\n\n举例-阿里规范 用户历史命令记录\n\n缺点：安全性不够。使用x-pack实现安全认证及权限管理功能\n\n### awk sed的使用\n\n### Log4j\n\nlog4j 是 javaweb 的日志组件，用来记录 web 日志\n\n去指定下载文件的 url 在搜索框或者搜索的 url 里面，加上 ${jndi:ldap://127.0.0.1/test} ，log4j 会对这串代码进行表达式解析，给 lookup 传递一个恶意的参数指定，参数指的是比如 ldap 不存在的资源 $ 是会被直接执行的。后面再去指定下载文件的 url，去下载我们的恶意文件。比如是 x.class 下载完成后，并且会执行代码块\n\n修复：升级 Log4j 到最新版本，根据业务判断是否关闭 lookup\n\n## ⬆️入侵检测&防御\n\n### WAF产品如何来拦截攻击？\n\nWaf 产品有三种\n\n1. 云 Waf\n\n   用户不需要在自己的网络中安装软件程序或部署硬件设备，就可以对网站实施安全防护，它的主要实现方式是**利用 DNS 技术**，通过移交域名解析权来实现安全防护。用户的请求首先发送到云端节点进行检测，如存在异常请求则进行拦截否则将请求转发至真实服务器\n\n2. Web 防护软件\n\n   安装在需要防护的服务器上，实现方式通常是 **Waf 监听端口或以 Web 容器扩展**方式进行请求检测和阻断\n\n3. 硬件 Web 防火墙\n\n   Waf **串行部署**在 Web 服务器前端，用于检测、阻断异常流量。常规硬件 Waf 的实现方式是通过**代理技术**代理来自外部的流量\n\n原理都相同，通过部署在 Web 服务器前方串行接入来将 Web 流量牵引到 WAF 设备中进行清洗或者拦截，最终只把正常用户的请求转发给服务器\n\n当前市场上 Waf 产品核心的防护机制是“规则”，每一个请求、会话，经过抓包，“开包检查”，每一项规则都会检查到，一旦检查不通过，就会被认为是非法访问，拒绝处理\n\n### WAF有哪些防护方式？\n\n- Web基础防护\n\n  可防范常规的 web 应用攻击，如 SQL 注入攻击、XSS 跨站攻击等，可检测 webshell，检查 HTTP 上传通道中的网页木马，打开开关即实时生效\n\n- CC 攻击防护\n\n  可根据 IP、Cookie 或者 Referer 字段名设置灵活的限速策略，有效缓解 CC 攻击\n\n- 精准访问防护\n\n  对常见 HTTP 字段进行条件组合， 支持定制化防护策略如CSRF防护，通过自定义规则的配置，更精准的识别恶意伪造请求、保护网站敏感信息、提高防护精准性\n\n- IP 黑白名单\n\n  添加终拦截与始终放行的黑白名单 IP，增加防御准确性\n\n- 地理位置访问控制\n\n  添加地理位置访问控制规则，针对来源 IP 进行自定义访问控制\n\n- 网页防篡改\n\n  对网站的静态网页进行缓存配置，当用户访问时返回给用户缓存的正常页面，并随机检测网页是否被篡改\n\n- 网站反爬虫\n\n  动态分析网站业务模型，结合人机识别技术和数据风控手段，精准识别爬虫行为\n\n- 误报屏蔽\n\n  针对特定请求忽略某些攻击检测规则，用于处理误报事件\n\n- 隐私屏蔽\n\n  隐私信息屏蔽，避免用户的密码等信息出现在事件日志中\n\n- 防敏感信息泄露\n\n  防止在页面中泄露用户的敏感信息，例如：用户的身份证号码、手机号码、电子邮箱等\n\n### 不安全的第三方组件的漏洞如何做前置规避？\n\n第三方组件缺陷又被归结为供应链安全问题，供应链安全需要多方面考虑。没有万能方案，但是组织可以用分层防御的组合来保护供应链\n\n- 安全战略评估\n\n  要评估风险与合规性，需要针对业务挑战、需求和目标评估现有的安全治理框架——包括数据隐私、第三方风险和IT法规合规需求及差距。安全风险量化、安全开发、法规和标准合规性以及安全教育和培训是关键\n\n- 事件响应计划与编排\n\n  提前为入侵、关闭或中断做好准备，并拥有稳健的事件响应计划很重要。通过实践、测试和易执行的响应计划和补救措施，防止损失\n\nhttps://www.freebuf.com/articles/neopoints/261681.html\n\n### 如果现在要你写一个检测命令注入的脚本？\n\n你会怎么写，有哪些要注意的地方，如果别人的脚本检测出来了你的脚本没检测出来你觉的你的脚本会存在什么问题，脚本检测过程中如果没有回显你会怎么做\n\n# 🅰️溯源\n\n![image-20220103203355953](https://s2.loli.net/2022/05/25/2ZAenxgQsu6b7DC.png)\n\n## ⬆️基本步骤\n\n### 1.攻击源捕获\n\n- 安全设备报警，如扫描IP、威胁阻断、病毒木马、入侵事件等\n- 日志与流量分析，异常的通讯流量、攻击源与攻击目标等\n- 服务器资源异常，异常的文件、账号、进程、端口，启动项、计划任务和服务等\n- 邮件钓鱼，获取恶意文件样本、钓鱼网站 URL 等\n- 蜜罐系统，获取攻击者 ID、电脑信息、浏览器指纹、行为、意图的相关信息\n\n### 2.溯源反制手段\n\n- IP 定位技术\n  根据IP定位物理地址–代理 IP\n  溯源案例：通过 IP 端口扫描，反向渗透服务器进行分析，最终定位到攻击者相关信息\n- ID 追踪术\n  ID 追踪术，搜索引擎、社交平台、技术论坛、社工库匹配\n  溯源案例：利用 ID 从技术论坛追溯邮箱，继续通过邮箱反追踪真实姓名，通过姓名找到相关简历信息\n- 网站 url\n  域名 Whois 查询–注册人姓名、地址、电话和邮箱 --域名隐私保护\n  溯源案例：通过攻击 IP 历史解析记录/域名，对域名注册信息进行溯源分析\n- 恶意样本分析\n  提取样本特征、用户名、ID、邮箱、C2 服务器等信息–同源分析\n  溯源案例：样本分析过程中，发现攻击者的个人 ID 和 QQ，成功定位到攻击者\n- 社交账号\n  基于 JSONP 跨域，获取攻击者的主机信息、浏览器信息、真实 IP 及社交信息等\n  利用条件：可以找到相关社交网站的 jsonp 接口泄露敏感信息，相关网站登录未注销\n\n### 3.攻击者画像\n\n- 攻击路径\n\n  攻击目的：拿到权限、窃取数据、获取利益、DDOS 等\n  网络代理：代理 IP、跳板机、C2 服务器等\n  攻击手法：鱼叉式邮件钓鱼、Web渗透、水坑攻击、近源渗透、社会工程等\n\n- 攻击者身份画像\n\n  虚拟身份：ID、昵称、网名\n  真实身份：姓名、物理位置\n  联系方式：手机号、qq/微信、邮箱\n  组织情况：单位名称、职位信息\n\n### 技巧\n\n1. 域名、ip 反查目标个人信息\n2. 支付宝转账，确定目标姓氏\n3. 淘宝找回密码，确定目标名字\n4. 企业微信手机号查公司名称\n5. REG007 查注册应用、网站\n6. 程序 PDB 信息泄露\n\n### 主动防御\n\n[基于网络欺骗与浏览器指纹的WEB攻击溯源](https://www.freebuf.com/articles/web/245585.html)\n\n1. 浏览器指纹技术\n2. 网络欺骗技术，蜜罐蜜网\n\n### 流量溯源\n\n可利用流量工具 wireshark 进行溯源：\n\n1. 查看 eval、 z0、 shell whoami 等关键字，查看出现次数过多的时候， 需要查看是哪个页面发起的请求，有可能是 webshell\n2. 通过 WireShark 工具快速搜索关键字，定位到异常流量包\n3. 找出异常 IP 和所上传的内容，查看是否为 webshell\n\n如何定位到攻击IP：\n\n1. 首先通过选择 - 统计 - 对话查看流量的走向情况， 定位可疑的 IP 地址\n\n2. 根据定位到的 IP 地址，尝试对上传的 webshell 进行定位\n\n   ```bash\n   ip.addr == ip && http matches\n   \"uploadllevallselectlxp_cmdshell\" && http.request.method == \"POST\"\n   12\n   ```\n\n3. 查找到 webshell 后尝试溯源漏洞位置\n\n   ```bash\n   http.request.uri contains \"webshell.php\"\n   1\n   ```\n\n   定位到最开始 webshell 执行或上传的时候\n\n4. 根据最开始的 HTTP 上传包或者其他漏洞特征定位漏洞类型\n\n### wireshark\n\nwireshark 简单的过滤规则\n\n- 过滤ip：\n\n  过滤源 ip 地址：ip.src1.1.1.1\n\n  目的 ip 地址：ip.dst1.1.1.1\n\n- 过滤端口：\n\n  过滤80端口：tcp.port == 80\n\n  源端口：tcp.srcport == 80\n\n  目的端：tcp.dstport == 80\n\n- 协议过滤：直接输入协议名即可，如 http 协议 http\n\n- http 模式过滤：过滤 get/post 包 httprequest.mothod == “GET/POST”\n\n### 常用取证工具\n\nWireshark、xplico、 Volatility、 FastlR Collector、Autopsy、 Dumplt、 FTK Imager、Foremost、Scalpel、 Bulk_ exetractor 等\n\n### 优秀文章\n\n[域前置溯源方法思考](https://www.anquanke.com/post/id/260888)\n\n## ⬆️其他\n\n### 对蜜罐的了解\n","source":"_posts/蓝队面试题.md","raw":"---\ntitle: 蓝队面试题\ndate: 2022-05-25 08:18:04\ntags:\ntoc: true\n---\n\nOCEAN’S 安全面试题整理系列文章：\n\n1. [渗透测试&网络&CTF面试题整理](https://blog.csdn.net/q20010619/article/details/124329818)\n2. [PHP&Java&Py&漏洞利用or运维面试题整理](https://blog.csdn.net/q20010619/article/details/124329764?spm=1001.2014.3001.5501)\n3. [红队面试题整理](https://blog.csdn.net/q20010619/article/details/123185212)\n4. [蓝队面试题整理（含回答）](https://blog.csdn.net/q20010619/article/details/123015066)\n5. [HR问题](https://github.com/Leezj9671/Pentest_Interview/blob/master/HR问题.md)\n\n\n\n\n# 🅰️应急响应🛡️\n\n## ⬆️宏观题\n\n### 1.基本思路流程\n\n1. 收集信息：收集客户信息和中毒主机信息，包括样本\n2. 判断类型：判断是否是安全事件，何种安全事件，勒索、挖矿、断网、DoS 等等\n3. 抑制范围：隔离使受害⾯不继续扩⼤\n4. 深入分析：日志分析、进程分析、启动项分析、样本分析方便后期溯源\n5. 清理处置：杀掉进程，删除文件，打补丁，删除异常系统服务，清除后门账号防止事件扩大，处理完毕后恢复生产\n6. 产出报告：整理并输出完整的安全事件报告\n\n### 2.Windows入侵排查思路\n\n1. 检查系统账号安全\n\n   1. 查看服务器是否有弱口令，远程管理端口是否对公网开放（使用`netstat -ano `命令、或者问服务器管理员）\n\n   2. `lusrmgr.msc `命令查看服务器是否存在可疑账号、新增账号，如有管理员群组的（Administrators）里的新增账户，如有，请立即禁用或删除掉\n\n   3. 用 D 盾或者注册表中查看服务器是否存在隐藏账号、克隆账号\n\n   4. 结合日志，查看管理员登录时间、用户名是否存在异常\n\n      检查方法：Win+R 打开运行，输入“eventvwr.msc”，回车运行，打开“事件查看器”，导出 Windows 日志–安全，利用 Log Parser 进行分析\n\n2. 检查异常端口、进程\n\n   1. `netstat -ano`检查端口连接情况，是否有远程连接、可疑连接\n   2. 任务管理器-进程\n\n3. 检查启动项、计划任务、服务\n\n4. 检查系统相关信息\n\n   查看系统版本以及补丁信息\n\n   查找可疑目录及文件\n\n5. 日志分析\n\n### 3.Linux入侵排查思路\n\n1. 账号安全\n\n   ```bash\n   who\t\t查看当前登录用户（tty本地登陆 pts远程登录）\n   w \t\t查看系统信息，想知道某一时刻用户的行为\n   uptime\t查看登陆多久、多少用户，负载\n   ```\n\n   ```bash\n   1、用户信息文件/etc/passwd\n   root:x:0:0:root:/root:/bin/bash\n   account:password:UID:GID:GECOS:directory:shell\n   用户名：密码：用户ID：组ID：用户说明：家目录：登陆之后shell\n   注意：无密码只允许本机登陆，远程不允许登陆\n   \n   2、影子文件/etc/shadow\n   root:$6$oGs1PqhL2p3ZetrE$X7o7bzoouHQVSEmSgsYN5UD4.kMHx6qgbTqwNVC5oOAouXvcjQSt.Ft7ql1WpkopY0UV9ajBwUt1DpYxTCVvI/:16809:0:99999:7:::\n   用户名：加密密码：密码最后一次修改日期：两次密码的修改时间间隔：密码有效期：密码修改到期到的警告天数：密码过期之后的宽限天数：账号失效时间：保留\n   ```\n\n   `/etc/passwd` 存储一般的用户信息，任何人都可以访问；`/etc/shadow` 存储用户的密码信息，只有 root 用户可以访问\n\n2. 历史命令\n\n   ```bash\n   通过 .bash_history 查看帐号执行过的系统命令\n   1、root的历史命令 histroy\n   2、打开 /home 各帐号目录下的 .bash_history，查看普通帐号的历史命令\n   \n   历史操作命令的清除：history -c\n   但此命令并不会清除保存在文件中的记录，因此需要手动删除.bash_profile文件中的记录\n   ```\n\n3. 检查异常端口\n\n   ```bash\n   netstat -antlp|more\n   查看下pid所对应的进程文件路径，\n   运行ls -l /proc/$PID/exe或file /proc/$PID/exe（$PID 为对应的pid 号）\n   ```\n\n4. 检查异常进程\n\n   ```bash\n   ps aux | grep pid\n   ```\n\n5. 检查开机启动项\n\n   开机启动配置文件\n\n   ```bash\n   /etc/rc.local\n   /etc/rc.d/rc[0~6].d\n   ```\n\n6. 检查定时任务\n\n   ```bash\n   crontab -l 列出某个用户cron服务的详细内容\n   Tips：默认编写的crontab文件会保存在 (/var/spool/cron/用户名 例如: /var/spool/cron/root\n   crontab -r 删除每个用户cront任务(谨慎：删除所有的计划任务)\n   crontab -e 使用编辑器编辑当前的crontab文件\n   如：*/1 * * * * echo \"hello world\" >> /tmp/test.txt 每分钟写入文件\n   2、利用anacron实现异步定时任务调度\n   ```\n\n   重点关注\n\n   ```\n   /var/spool/cron/*\n   /etc/crontab\n   /etc/cron.d/*\n   /etc/cron.daily/*\n   /etc/cron.hourly/*\n   /etc/cron.monthly/*\n   /etc/cron.weekly/\n   /etc/anacrontab\n   /var/spool/anacron/*\n   ```\n\n7. 检查服务\n\n   chkconfig --list 命令，可以查看系统运行的服务\n\n8. 检查异常文件\n\n9. 检查系统日志\n\n### Linux的登录日志查看文件\n\n- 日志默认存放位置：/var/log/\n- 查看可登录的账户 cat/etc/passwd|grep ‘/bin/bash’\n- 查看所有用户最后的登录信息 lastlog\n- 查看用户最近登录信息 last 其中，/var/log/wtmp 存储登录成功的信息、btmp 存储登录失败的信息、utmp 存储当前正在登录的信息\n- 查看当前用户登录系统情况 who\n\n### Linux常用排查命令\n\n这个问题就是 linux 入侵排查排查的一部分\n\nhttps://cloud.tencent.com/developer/article/1822210\n\n系统信息\n\n1. 查看当前系统状态 top\n2. 操作系统信息 uname -a\n3. 查看当前系统进程信息 ps\n4. 查看历史命令 history\n5. 列出本机所有的连接和监听的端口 netstat\n6. 查看谁在使用某个端口 lsof\n\n用户登录\n\n1. 查看当前用户登录系统情况 who\n\n2. 分析超级权限账户 awk-F： ‘{if（$3==0）print $1}’/etc/passwd\n\n3. 查看可登录的账户 cat/etc/passwd|grep ‘/bin/bash’\n\n4. 查看用户错误的登录信息 lastb\n\n5. 查看所有用户最后的登录信息 lastlog\n\n6. 查看用户最近登录信息 last\n\n   /var/log/ 其中，/var/log/wtmp 存储登录成功的信息、btmp存储登录失败的信息、utmp存储当前正在登录的信息\n\n7. 查看空口令账户 awk-F： ‘length（$2）==0 {print $1}’/etc/shadow\n\n### Linux基线规范\n\n每个公司有每个公司的基线规范体系，但是答题分为下列五个方面\n\n**账号管理和授权**\n\n- 检查特殊账号，是否存在空密码的账户和 root 权限账户\n- 禁用或删除无用账号\n- 添加口令策略:`/etc/login.defs`修改配置文件，设置过期时间、连续认证失败次数\n- 禁止 root 远程登录，限制root用户直接登录。\n- 检查 su 权限。`vi /etc/pam.d/su`添加`auth required pam_wheel.so group=test`\n\n**服务**\n\n- 关闭不必要的服务\n- SSH 服务安全\n  - 不允许 root 账号直接登录系统，`PermitRootLogin=no`\n  - 修改 SSH 使用的协议版本为 2\n  - 修改允许密码错误次数（默认 6 次），`MaxAuthTries=3`\n\n**文件系统**\n\n- 设置 umask 值 `vi /etc/profile` 添加行 `umask 027`\n- 设置登录超时 `vi /etc/profile` 修改配置文件，将以 `TMOUT=` 开头的行注释，设置为 `TMOUT=180`\n\n**日志**\n\n- 启用 syslogd 日志，配置日志目录权限，或者设置日志服务器\n\n- 记录所有用户的登录和操作日志，通过脚本代码实现记录所有用户的登录操作日志，防止出现安全事件后无据可查\n\n  https://www.alibabacloud.com/help/zh/faq-detail/49809.htm\n\n**IP 协议安全要求**\n\n- 远程登录取消 telnet 采用 ssh\n- 设置 /etc/hosts.allow 和 deny\n- 禁止 ICMP 重定向\n- 禁止源路由转发\n- 防 ssh 破解，iptables (对已经建立的所有链接都放行，限制每分钟连接 ssh 的次数)+ denyhost (添加 ip 拒绝访问)\n\n**Linux 安全基线检查**\n\nLinux：https://cloud.tencent.com/developer/article/1668982\n\n### Windows 安全基线检查\n\nWindows：https://cloud.tencent.com/developer/article/1668937\n\n主要包括五个方面：身份鉴别、访问控制、安全审计、资源控制、剩余信息保护\n\n- **身份鉴别**\n\n  更改缺省账户\n\n  检查Guest用户是否禁用\n\n  密码复杂性要求\n\n  密码长度最小不能小于8位\n\n- **访问控制**\n\n  共享账户检查\n\n  远程关机授权\n\n  本地关机\n\n  授权帐户登陆\n\n- **安全审计**\n\n  用户登录日志记录\n\n  系统日志完备性检查\n\n  登录超时管理\n\n- **资源控制**\n\n  登录超时管理\n\n  远程登录超时配置\n\n- **剩余信息保护**\n\n  不显示上次的用户名\n\n  关机前清除虚拟内存页面\n\n  不启用可还原的加密来存储密码\n\n### 中间件基线规范（APACHE）\n\n> https://www.alibabacloud.com/help/zh/faq-detail/52981.htm\n\n配置\n\n- 账号\n- 授权\n- 日志\n- session 过期时间（防ddos）\n- 绑定监听地址\n\n禁止\n\n- 目录权限\n- 访问外部文件\n- CGI\n- 非法HTTP方法（PUT DELETE）\n\n隐藏\n\n- 服务版本号\n- 重定向错误页面\n\n删除\n\n- 配置文件\n- 默认安装的无用文件\n\n### 中间件常见漏洞\n\nhttps://www.freebuf.com/articles/web/192063.html\n\n**（一） IIS**\n1、PUT漏洞\n\n2、短文件名猜解\n\n3、远程代码执行\n\n4、解析漏洞\n\n**（二） Apache**\n1、解析漏洞\n\n2、目录遍历\n\n**（三） Nginx**\n1、文件解析\n\n2、目录遍历\n\n3、CRLF注入\n\n4、目录穿越\n\n**（四）Tomcat**\n1、远程代码执行\n\n2、war后门文件部署\n\n**（五）jBoss**\n1、反序列化漏洞\n\n2、war后门文件部署\n\n**（六）WebLogic**\n1、反序列化漏洞\n\n2、SSRF\n\n3、任意文件上传\n\n4、war后门文件部署\n\n**（七）其它中间件相关漏洞**\n1、FastCGI未授权访问、任意命令执行\n\n2、PHPCGI远程代码执行\n\n### Linux、Windows安全加固\n\n**IIS 服务器应该做哪些方面的保护措施？**\n\n整理来源：http://www.williamlong.info/archives/118.html\n\n1. 保持 Windows 升级\n2. 使用 IIS 防范工具\n3. 移除缺省的 Web 站点\n4. 如果你并不需要 FTP 和 SMTP 服务，请卸载它们\n5. 有规则地检查你的管理员组和服务:\n6. 严格控制服务器的写访问权限\n7. 设置复杂的密码\n8. 减少/排除 Web 服务器上的共享\n9. 禁用 TCP/IP 协议中的 NetBIOS\n10. 使用 TCP 端口阻塞\n11. 仔细检查 .bat 和 .exe 文件：每周搜索一次 .bat\n12. 管理 IIS 目录安全\n13. 使用 NTFS 安全\n14. 管理用户账户\n15. 审计你的 Web 服务器\n\n**Linux系统安全加固需要注意的内容**\n\n1. 关闭不必要的系统服务\n2. 更改 SSH 默认端口\n3. 禁止 root 用户远程 ssh 登录\n4. 限制用户使用 su 命令切换 root\n5. 密码复杂度策略\n6. 检查密码重复使用次数限制\n7. 检查是否存在空口令账号\n8. 禁止同时按下 ctrl+alt+del 重启\n9. 禁用 telnet 服务\n\n### 框架漏洞&常见命令注入漏洞？php? Strust2 ?\n\n- Struts2 OGNL 注入\n- weblogic\n- fastjson\n- TP5 代码执行\n- laravel：debug mode 远程代码执行漏洞（CVE-2021-3129）\n- Spring Expression Language SPEL 表达式注入\n- Spring Security Oauth2 远程代码执行\n- [Spring框架漏洞总结](https://www.freebuf.com/articles/web/286666.html)\n\n### 常见安全工具、设备\n\n**工具**\n\n- 端口及漏洞扫描：Namp、Masscan\n- 抓包：Wireshark，Burpsuite、Fiddler、HttpCanary\n- Web自动化安全扫描：Nessus、Awvs、Appscan、Xray\n- 信息收集：Oneforall、hole\n- 漏洞利用：MSF、CS\n- Webshell 管理：菜刀、蚁剑、冰蝎、哥斯拉\n\n**设备**\n\n[网络安全设备常识](https://wiki.wgpsec.org/knowledge/base/safety.html)\n\n常见的 HW 设备有：公安部网防G01、K01、360网康/网神防火墙、微步威胁情报、安恒云-Web应用防火墙（玄武盾）、默安蜜罐、知道创宇蜜罐、山石防火墙\n\n![image-20211224223800578](https://s2.loli.net/2022/05/25/ie4h5RDb9mOgKcZ.png)\n\n即客户拥有物理的基础设施（自建机房、自购设备、网络）\n\n- NGAF/NGFW：下一代 Web 应用防火墙（Next Generation Application Firewall，[通防火墙和下一代防火墙的区别](https://www.huaweicloud.com/zhishi/edit-582196.html)），聚合了以下功能\n\n  - IDS\n    - HIDS：基于主机的入侵检测系统\n    - NIDS：基于网络的入侵检测系统\n    - HIDS+NIDS：基于混合数据源的入侵检测系统\n  - IPS：入侵防御系统\n  - AV：反病毒系统\n\n- EDR：主机安全管理\\终端检测和响应\n\n  EDR 实时监测终端上发生的各类行为，采集终端运行状态，在后端通过大数据安全分析、机器学习、沙箱分析、行为分析、机器学习等技术，提供深度持续监控、威胁检测、高级威胁分析、调查取证、事件响应处置、追踪溯源等功能，可第一时间检测并发现恶意活动，包括已知和未知威胁，并快速智能地做出响应，全面赋予终端主动、积极的安全防御能力\n\n  简单来说就是给内网环境中所有主机安装管理软件终端，可以在管理平台集中管理和数据分析过滤，基本所有安全厂商都有自己的 EDR 产品\n\n- 运维审计和管理平台（堡垒机）\n\n- DAS：数据库安全审计平台\n\n- LAS：日志审计安全平台\n\n- AC：上网行为管理系统\n\n- 伪装欺骗系统（蜜罐、蜜网）\n\n- SIP：安全态势感知平台\n\n  这个算是让整套系统性能得到提升的灵魂了，定位为客户的安全大脑，是一个集检测、可视、响应处置于一体的大数据安全分析平台。产品以大数据分析为核心，支持主流的安全设备、网络设备、操作系统等多源数据接入，利用大数据、关联分析、告警降噪等技术，实现海量数据的统一挖掘分析\n\n**云网络**\n\n云网络包括私有云和公有云\n\n- 云主机安全\n- 云防火墙\n- 云堡垒机\n- 云蜜罐\n- 云 DDOS 防护\n- 等等\n\n### 绿盟设备\n\n- 堡垒机 SAS-H Series，堡垒机采用“物理旁路，逻辑串联”的部署思路\n- 绿盟威胁情报云 NTI https://nti.nsfocus.com/\n- 抗拒绝服务攻击系统 ADS\n- 安全和漏洞管理 AIRO\n- 网络入侵防护系统 IDPS\n- web 应用防火墙\n\n### 你拿到的cnvd\n\n### **工作经历\n\n安全服务工程师\n\n参加渗透测试、地方服务、HW\n\n根据客户方要求对所给资产进行了详细细致的渗透测试。挖掘漏洞，发现漏洞的第一时间与客户方汇报，使客户方能够及时整改修补问题漏洞，防止造成漏洞危害扩大\n\n### 攻防演练\n\n攻防演练中担任什么角色\n\n### 护网的分组和流程？\n\n护网的分组是在领导小组之下分为防护检测组，综合研判组，应急溯源组。流程大致分为备战，临战，决战三个阶段\n\n**备战阶段**，主要任务是进行两方面的操作，一是减少攻击面，即资产梳理，减少暴露面；二是排查风险点，即通过漏洞扫描，渗透测试，弱口令等进行自查\n\n**临战阶段**，主要任务也大致可以分为两个部分，一是进行内部演练，发现疏忽处并进行相应整改；二是可以适当增加安全设备，比如WAF，IPS，IDS，SOC，堡垒机等\n\n**决战阶段**，作为新人，主要就是坚守岗位，有应急日志就看自己能不能解决，不能就上报，服从上级安排，优化防护，持续整改\n\n### 简历有护网经历，你能谈谈护网的情况吗\n\n参加过护网蓝队，负责事件研判工作，主要使用 ips，ids 等设备做流量监控与日志分析工作判断安全事件是否为误判\n\n监控、研判、处置、溯源\n\n对安全管理中心发出的态势排查单进行排查，并将排查结果反馈给安全管理中心，对安全管理中心发出的封堵工单和解封工单进行对应的封堵与解封，每两小时反馈一次排查结果、设备巡检报告、封堵情况。查看呼池 DDOS 设备，记录并排查告警信息\n\n### 蓝队研判\n\n研判工作要充分利用已有安全设备（需要提前了解客户的网络拓扑以及部署设备情况），分析其近期的设备告警，将全部流量日志（日志条件：源地址，目的地址，端口，事件名称，时间，规则 ID，发生 次数等）根据研判标准进行筛选（像挖矿、蠕虫、病毒、拒绝服务这类不太可能为攻击方发起的攻击的事件，直接过滤掉，减少告警数量），一般情况下，真实攻击不可能只持续一次，它一定是长时间、周期性、多 IP 的进行攻击\n\n对于告警结合威胁情报库如：微步、奇安信威胁情报中心、**绿盟威胁情报云**等对于流量日志的原 IP 地址进行分析，判断其是否为恶意攻击，推荐使用微步的插件，如果确认为攻击行为或者不能确认是否为攻击行为，进行下一步操作，在之前准备好的表格中查找 IP 是否为客户内网部署的设备，如果不是，继续进行下一步，在事件上报平台查看是否有其他人提交过，如果没有，则上报\n\n然后根据流量日志，对请求数据包和返回数据包分析判断其是否为误报，需要留意 X-Forwarded-For（简称XFF）和 x-real-ip 可以了解些 webshell 工具的流量特征，尤其是免杀 webshell，有可能不会被设备识别\n\n最后上报事件时，尽可能提供完整的截图，包括源 ip、目的ip，请求包请求体，响应包响应体等重要信息，以方便后续人员研判溯源\n\n> 注：不要任意忽略内网告警，适当情况下可以往前推排查时间\n\n### 蓝队组成\n\n蓝队的主要工作包括前期安全检查、整改与加固，演习期间进行网络安全监测、预警、分析、验证、处置，后期复盘总结现有防护工作中的不足之处，为后续常态化的网络安全防护措施提供优化依据\n\n监控、研判、处置、溯源\n\n### SQL注入检测\n\nSQL注入攻击检测可根据入侵事件发生的前后进行区分，在入侵前可以对 Payload 进行检测等方式以预防 SQL 注入攻击。在入侵检测后可以通过对数据库、IIS 日志等进行检查以进行判断\n\n传统的SQL注入检测方法通常根据经验提取特征，然后基于规则库匹配的方法来检测是否为 SQL 注入语句，其设计一般较为复杂，且规则模式更新频繁，在此采用机器学习的方式尝试对 SQL 注入语句进行检测\n\n### DDOS CC应急思路以及如何防范\n\n目前对于低网络层的 DDoS 攻击有一些有效的防护手段，如丢弃第一次 SYN 包，上流量防护设备，上 WAF 封禁地址等\n\n比较难缠的是第七层，第八层的 CC 攻击，它会找到目标网站上比较消耗资源的关键位置，重复发起攻击以消耗 CPU/内存/数据库/IO 等资源，目前的应付手段有：\n\n1. 优化资源消耗高位置的代码\n2. 增加硬件设备\n3. 上云\n4. 购买专业安全公司的安全服务\n5. 除此之外，隐藏服务器的真实 IP、上云 WAF、CDN、 负载均衡等设备，或者暂时将域名解析到公安网警网站等也是可以作为选择方案\n\n- 网络设备设施\n  - 拼带宽，加大带宽，但是成本太高\n  - 使用硬件防火墙\n  - 选用高性能设备\n- 抗 D 思想和方案\n  - 负载均衡\n  - 花钱买流量清洗服务\n  - CDN：web 层，比如 cc 攻击\n  - 分布式集群防御\n  - 高防：防大部分攻击，udp、大型的 cc 攻击\n- 预防为主\n  - 系统漏洞\n  - 系统资源优化\n  - 过滤不必要的服务和端口\n  - 限制特定流量：检查访问来源做适当限制\n\n### 挖矿病毒判断&挖矿常见手段&处理\n\n[挖矿病毒，自己搜搜](https://zhuanlan.zhihu.com/p/139019250)\n\n挖矿木马占用系统资源进行挖矿行为，一般电脑会有以下特征\n\n1. 系统响应缓慢\n2. CPU/显卡使用率过高\n3. 内存/带宽占用高\n\n登录进可疑主机后，可以通过以下方式确认挖矿木马（即入侵排查流程）\n\n1. 查看进程（系统命令 ps、Is 有可能被替换）\n2. 检查日志、检查系统用户\n3. 发现异常文件\n\n**挖矿常用手段**\n\n1. 未授权访问或弱口令：Redis 未授权访问、Docker API 未授权访问、Hadoop Yarn 未授权访问、NFS 未授权访问、Rsync 弱口令、PostgreSQL 弱口令、Tomcat 弱口令、SSH 弱口令、Telnet 弱口令、Windows 远程桌面弱口令\n2. 远程命令执行漏洞：WebLogic XML 反序列化漏洞、Jenkins 反序列化、Jboss 远程代码执行、Spring 远程代码执行、ElasticSearch 命令执行、永恒之蓝、Struts2 系列漏洞、常见 CMS 的远程命令执行漏洞\n3. 新爆的高危漏洞：一般每次爆发新的高危漏洞，都会紧跟一波大规模的全网扫描利用和挖矿\n\n**清除挖矿木马**\n\n**原因排查**\n\n一旦发现服务器被挖矿，应该首先查看挖矿进程所属的用户，根据挖矿进程的运行用户去排查该用户下是否还运行着其它进程，确定这些进程是否有上述经常被黑客利用的漏洞。如果有常见的漏洞，则应该重点对此进行排查找到原因\n\n**清除木马**\n\n1. 及时隔离主机\n\n   部分带有蠕虫功能的挖矿木马在取得本机的控制权后，会以本机为跳板机，对同一局域网内的其他主机进行已知漏洞的扫描和进一步利用， 所以发现挖矿现象后，在不影响业务的前提下应该及时隔离受感染主机，然后进行下一步分析\n\n2. 删除文件、阻断与矿池通讯\n\n   ```bash\n   iptables -A INPUT -S xmr.crypto- pool.fr -j DROP\n   iptables -A OUTPUT -d xmr.crypto- pool.fr -j DROP\n   ```\n\n3. 清除定时任务\n\n   大部分挖矿进程会在受感染主机中写入定时任务来完成程序的驻留，当安全人员只清除挖矿木马时，定时任务会再次从服务器下载挖矿进程或者直接执行挖矿脚本，导致挖矿进程清除失败\n\n4. 清除启动项\n\n   有的挖矿进程为了实现长期驻留，会向系统中添加启动项来确保系统重启后挖矿进程还能重新启动，所以在清除时还应该关注启动项中的内容如果有可疑的启动项，也应该进行排查，确认是挖矿进程后，对其进行清除\n\n5. kill 挖矿进程\n\n   对于单进程挖矿程序，直接结束挖矿进程即可。但是对于大多数的挖矿进程，如果挖矿进程有守护进程，应先杀死守护进程再杀死挖矿进程，避免清除不彻底\n   在实际的清除工作中，应找到本机上运行的挖矿脚本，根据脚本的执行流程确定木马的驻留方式， 并按照顺序进行清除， 避免清除不彻底\n\n6. 清除公钥文件\n\n   在用户 home 目录的 .ssh 目录下放置 authoruzed_keys 文件，从而免密登录该机器也是一种常见的保持服务器控制权的手段。在排查过程中应该查看该文件中是否有可疑公钥信息，有的话直接删除，避免攻击者再次免密登录该主机\n\n### 服务器存在webshell，如何处理？\n\n网站被植入 webshell，意味着网站存在可利用的高危漏洞，攻击者通过利用漏洞入侵网站，写入 webshell 接管网站的控制权\n\n1. 及时隔离主机\n2. 定位事件范围，查看文件 webshell 文件的创建时间，对 webshell 取证样本\n3. 通过创建时间结合日志分析可疑行为，以及启动用户的其他进程确定漏洞\n4. 清除 webshell 及残留文件，修复漏洞，参考上题\n\n### 排查 shell 应该用什么命令来进行排查\n\nfind 命令\n\n```bash\nfind /var/www/html -name \"*.php\" |xargs egrep 'assert|eval|phpinfo\\(\\)|\\(base64_decoolcode|shell_exec|passthru|file_put_contents\\(\\.\\*\\$|base64_decode\\('\n```\n\n### 如何检测webshell\n\n**主机层面**\n\n- 静态检测\n\n  静态检测通过匹配特征码，特征值，危险函数函数来查找 webshell 的方法，只能查找已知的 webshell\n\n- 动态检测\n\n  webshell 传到服务器了，在执行函数时这些对于系统调用、系统配置、数据库、文件的操作动作都是可以作为判断依据\n\n- 日志检测\n\n  使用 webshell 一般不会在系统日志中留下记录，但是会在网站的 web 日志中留下 webshell 页面的访问数据和数据提交记录\n\n- 语法检测\n\n  语法语义分析形式，是根据 php 语言扫描编译的实现方式，进行剥离代码、注释，分析变量、函数、字符串、语言结构的分析方式，来实现关键危险函数的捕捉方式这样可以完美解决漏报的情况但误报上\n\n**流量层面**\n\n### Webshell管理工具的流量特征\n\n[冰蝎动态二进制加密WebShell特征分析](https://www.freebuf.com/articles/web/213905.html)\n\n[常见WebShell客户端的流量特征及检测思路](https://www.freebuf.com/column/204796.html)\n\n**菜刀**\n\n菜刀 webshell 只使用了 url 编码 + base64 编码\n\nshell 特征就是传输参数名为 z0，还存在`int_set(\"display_erros\",\"0\")`字符串特征\n\n**蚁剑**\n\n默认的蚁剑 shell，连接时会请求两次，其请求体只是经过 url 编码，其流量中也存在和蚁剑一样的代码\n\n第一次请求，关闭报错和 magic_quotes，接下来去获取主机的信息\n\n第二次请求，会把主机目录列出来\n\n**冰蝎2.0**\n\n使用 aes 加密发起三次请求\n\n第一次请求服务端产生密钥写入 session，session 和当前会话绑定，不同的客户端的密钥也是不同的\n\n第二次请求是为了获取 key，第三次使用 key 的 aes 加密进行通信\n\n**冰蝎3.0**\n\n使用 aes 加密发起两次请求\n\n3.0 分析流量发现相比 2.0 少了动态密钥的获取的请求，不再使用随机生成 key，改为取连接密码的 md5 加密值的前 16 位作为密钥\n\n一次请求为判断是否可以建立连接，少了俩次 get 获取冰蝎动态密钥的行为，第二次发送 phpinfo 等代码执行，获取网站的信息\n\n**哥斯拉**\n\n支持 n 种加密\n\n采用了和冰蝎 3.0 一样的密钥交换方式，哥斯拉建立连接时会发起三次请求，第一次请求数据超级长，建立 session，第二三次请求确认连接\n\n### 常见端口漏洞\n\n**数据库类（扫描弱口令）**\n\n- 1433：MSSQL\n- 1521：Oracle\n- 3306：Mysql\n- 5432：PostgreSQL\n\n**特殊服务类（未授权/命令执行）**\n\n- 443：ssl 心脏滴血\n- 873：Rsync 未授权\n- 5984：CouchDB http：//xxx:5984/_utils/\n- 6379：Redis 未授权\n- 7001、7002：Weblogic 默认弱口令\n- 8088：Hadoop Yarn 资源管理系统 REST API 存在未授权\n- 8161：Apache ActiveMQ 未授权、弱口令，put 文件上传，move 文件移动\n- 9200、9300：elasticsearch 命令执行\n- 11211：Memcache 未授权，telnet ip 就可以获得服务器敏感信息\n- 27017、27018：Mongodb 未授权\n- 50000：SAP 命令执行\n- 50070、50030 Hadoop 未授权访问\n\n**常用端口类（弱口令/端口爆破）**\n\n- 21：FTP 弱口令，匿名 anonymous/空登录，以及 ms12-073\n- 25：SMTP 简单邮件传输服务器端口\n- 23：Telnet 的端口，Telnet 是一种可以远程登录并管理远程机器的服务\n- 22：ssh 端口，PcAnywhere 建立 TCP 和这一端口的连接可能是为了寻找 ssh，这一服务有许多弱点\n- 53：dns 端口\n- 139：属于 TCP 协议，是为 NetBIOS Session Service 提供的，主要提供 Windows 文件和打印机共享以及 Unix 中的 Samba 服务\n- 445：网络共享 smb 服务，尝试利用 ms08067，ms17010 等以及 IPC$ 攻击手段\n- 2601、2604：zebra 路由，默认密码 zebra\n\n### 三次握手与四次挥手\n\nhttps://www.eet-china.com/mp/a44399.html\n\n背景：TCP 位于传输层，作用是提供可靠的字节流服务，为了准确无误地将数据送达目的地，TCP 协议采纳三次握手四次挥手策略\n\n**三次握手（three-way handshaking）**\n\nTCP 三次握手，其实就是 TCP 应用在发送数据前，通过 TCP 协议跟通信对方协商好连接信息，建立起 TCP 的连接关系\n\n1. 第一次握手：客户端发送 `SYN` 报文，并进入 `SYN_SENT` 状态，等待服务器的确认\n2. 第二次握手：服务器收到 `SYN` 报文，需要给客户端发送 `ACK` 确认报文，同时服务器也要向客户端发送一个 `SYN` 报文，所以也就是向客户端发送 `SYN + ACK` 报文，此时服务器进入 `SYN_RCVD` 状态\n3. 第三次握手：客户端收到 `SYN + ACK` 报文，向服务器发送确认包，客户端进入 `ESTABLISHED` 状态。待服务器收到客户端发送的 `ACK` 包也会进入 `ESTABLISHED` 状态，完成三次握手\n\n**四次挥手（Four-Way-Wavehand）**\n\n当我们的应用程序不需要数据通信了，就会发起断开 TCP 连接。建立一个连接需要三次握手，而终止一个连接需要经过四次挥手\n\n1. 第一次挥手：客户端发送一个 `FIN`，用来关闭客户端到服务端的数据传送，客户端进入 `FIN_WAIT_1` 状态\n2. 第二次挥手：服务端收到 `FIN` 后，发送一个 `ACK` 给客户端，确认序号为收到序号 +1（与SYN相同，一个FIN占用一个序号），服务端进入 `CLOSE_WAIT` 状态\n3. 第三次挥手：服务端发送一个 `FIN`，用来关闭服务端到 客户端的数据传送，服务端进入 `LAST_ACK` 状态\n4. 第四次挥手：客户端收到 `FIN` 后，客户端进入 `TIME_WAIT` 状态，接着发送一个 `ACK` 给服务端，确认序号为收到序号 +1，服务端进入 `CLOSED` 状态，完成四次挥手\n\n### 一个大范围影响的0day被曝光，作为甲方安全工程师，应该如何处理(★★)\n\n1. 首先是评估 0day 对自身系统的影响（这部分评估需要根据漏洞利用的利用点、是否需要交互、是否会影响系统的 CIA，是否有在野利用 poc，影响资产是否暴露在公网等很多因素决定，详情可以参考 CVSS ）\n2. 如果确定有影响的话且有 poc，第一件事是先分析 poc 执行后会在什么地方留下痕迹，我们有什么样的设备去采集这些痕迹所留下的数据，比如说 ntlm relay 这种，可以考虑从 Windows 事件日志当中 event_id 等于 4769 的事件入手编写对应的规则，这样的话可以利用 SIEM 或者实时日志分析平台跑起来，可以建立起初步的感知防线，后期触发告警，人肉运营也可以快速止损\n3. 日常建立完整的纵深防御体系，不要依赖于某一道防线\n\n### 服务器操作系统的安全防范？\n\n1. 停止运行不需要的软件（很可能成为外部攻击的入口）\n2. 定期实施漏洞防范措施（选定软件时确认软件的升级状况，确定打补丁方式，关注各种漏洞信息，确认漏洞后调查补丁状况以及防范对策，并制定对应计划）\n3. 对不需要对外公开的端口或者服务加以访问限制（通过端口扫描确认各端口服务状态）\n4. 提高认证强度\n\n### 怎么发现有没有被攻击\n\n攻击判断可以建立在设备的基础上，利用设备的告警，如果没有设备的话可以参考以下\n\n网站被攻击：网站被跳转到赌博网站，网站首页被篡改，百度快照被改，网站被植入 webshell 脚本木马，网站被 DDOS、CC 压力攻击\n\n服务器被黑：服务器系统中木马病毒，服务器管理员账号密码被改，服务器被攻击者远程控制，服务器的带宽向外发包，服务器被流量攻击，ARP攻击（目前这种比较少了，现在都是基于阿里云，百度云，腾讯云等云服务器）\n\n对登录记录、系统日志、web 日志等进行分析\n\n## ⬆️细节题\n\n### 你能大概说一下，比如数据包或者日志，你的分析思路是什么，以及你会用到哪些工具或者那些网站进行查询？\n\n用流量监测的安全设备，比如天眼，查看报文，分析报文里和 host 和网站目录路径，查看是否可疑，使用微步查询 host 是否为恶意，使用 wireshark 对数据包深度分析\n\n看一下请求的网站路径，源 IP 与目的 IP 地址，host 字段的值以及发包内容等\n\n工具有 wireshark，网站的话微步在线等威胁情报中心\n\n### 文件上传和命令执行，有看过相关日志吗\n\n文件：可能在系统有上传功能或者有文本编辑器，看一下是否有 base64 加密或者 url 加密，解码验证一下是否有恶意代码\n\n系统日志：有没有 web 容器做了一些危险行为，比如 bash 反弹 shell 等\n\n网络应用日志：有没有异常的网站文件，类似 webshell 等，**就有可能是命令执行**\n\n### windows日志分析工具\n\nLog Parser、LogParser Lizard、Event Log Explorer\n\n### Linux日志分析技巧命令\n\n1. 定位有多少IP在爆破主机的root帐号：\n\n   ```bash\n   grep \"Failed password for root\" /var/log/secure | awk '{print $11}' | sort | uniq -c | sort -nr | more\n   ```\n\n2. 定位有哪些IP在爆破：\n\n   ```bash\n   grep \"Failed password\" /var/log/secure|grep -E -o \"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\"|uniq -c\n   ```\n\n3. 爆破用户名字典是什么？\n\n   ```bash\n   grep \"Failed password\" /var/log/secure|perl -e 'while($_=<>){ /for(.*?) from/; print\"$1\\n\";}'|uniq -c|sort -nr\n   ```\n\n4. 登录成功的IP有哪些\n\n   ```bash\n   grep \"Accepted \" /var/log/secure | awk '{print $11}' | sort | uniq -c | sort -nr | more\n   登录成功的日期、用户名、IP：\n   grep \"Accepted \" /var/log/secure | awk '{print $1,$2,$3,$9,$11}'\n   ```\n\n5. 增加一个用户kali日志：\n\n   ```bash\n   Jul 10 00:12:15 localhost useradd[2382]: new group: name=kali, GID=1001\n   Jul 10 00:12:15 localhost useradd[2382]: new user: name=kali, UID=1001, GID=1001,\n   home=/home/kali\n   , shell=/bin/bash\n   Jul 10 00:12:58 localhost passwd: pam_unix(passwd:chauthtok): password changed for kali\n   #grep \"useradd\" /var/log/secure\n   ```\n\n6. 删除用户kali日志：\n\n   ```bash\n   Jul 10 00:14:17 localhost userdel[2393]: delete user 'kali'\n   Jul 10 00:14:17 localhost userdel[2393]: removed group 'kali' owned by 'kali'\n   Jul 10 00:14:17 localhost userdel[2393]: removed shadow group 'kali' owned by 'kali'\n   # grep \"userdel\" /var/log/secure\n   ```\n\n7. su切换用户：\n\n   ```bash\n   Jul 10 00:38:13 localhost su: pam_unix(su-l:session): session opened for user good by\n   root(uid=0)\n   sudo授权执行:\n   sudo -l\n   Jul 10 00:43:09 localhost sudo: good : TTY=pts/4 ; PWD=/home/good ; USER=root ;\n   COMMAND=/sbin/shutdown -r now\n   ```\n\n### 给你一个比较大的日志，应该如何分析\n\n- 攻击规则匹配，通过正则匹配日志中的攻击请求\n- 统计方法，统计请求出现次数，次数少于同类请求平均次数则为异常请求\n- 白名单模式，为正常请求建立白名单，不在名单范围内则为异常请求\n- HMM 模型，类似于白名单，不同点在于可对正常请求自动化建立模型，从而通过正常模型找出不匹配者则为异常请求\n- 借助日志分析工具，如 LogForensics 腾讯实验室 https://security.tencent.com/index.php/opensource/detail/15\n\n### Windows在应急响应中的安全日志以及对应场景\n\n### 设备误报如何处理\n\n（日志）\n\n### Windows和Linux的日志文件放在哪里\n\n- Windows 主要有以下三类日志记录系统事件：应用程序日志、系统日志和安全日志\n\n  系统日志：` %SystemRoot%\\System32\\Winevt\\Logs\\System.evtx`\n\n  应用程序日志：`%SystemRoot%\\System32\\Winevt\\Logs\\Application.evtx`\n\n  安全日志：`%SystemRoot%\\System32\\Winevt\\Logs\\Security.evtx`\n\n- Linux\n\n  日志默认存放位置：`/var/log/`\n  查看日志配置情况：more /etc/rsyslog.conf\n\n### 常见中间件的配置文件路径\n\n- apache：`/etc/httpd/conf`\n- nginx：`/etc/nginx`\n- iis7：`C:\\Windows\\System32\\inetsrv\\config\\`\n\n### 如何查看系统内存 shell\n\n- 文章汇总：[link](https://blog.csdn.net/shuteer_xu/article/details/117458250)\n- 查杀内存马：[link](https://gv7.me/articles/2020/kill-java-web-filter-memshell/)\n- php、python、java内存马分析：[link](https://www.geekby.site/2021/09/webshell内存马分析/)\n\n### Java 内存马排查\n\nhttps://www.freebuf.com/articles/web/274466.html\n\n如果我们通过检测工具或者其他手段发现了一些内存webshell的痕迹，需要有一个排查的思路来进行跟踪分析，也是根据各类型的原理，列出一个排查思路。\n\n> 如果是jsp注入，日志中排查可疑jsp的访问请求。\n>\n> 如果是代码执行漏洞，排查中间件的error.log，查看是否有可疑的报错，判断注入时间和方法\n>\n> 根据业务使用的组件排查是否可能存在java代码执行漏洞以及是否存在过webshell，排查框架漏洞，反序列化漏洞。\n>\n> 如果是servlet或者spring的controller类型，根据上报的webshell的url查找日志（日志可能被关闭，不一定有），根据url最早访问时间确定被注入时间。\n>\n> 如果是filter或者listener类型，可能会有较多的404但是带有参数的请求，或者大量请求不同url但带有相同的参数，或者页面并不存在但返回200\n\n### 如何修改WEB端口？如果不能修改端口还有什么利用方法？\n\n修改 web 端口：修改中间件配置文件中的 web 服务端口即可\n\n不能修改的话可以使用端口映射，使用 nginx 反向代理也可以\n\n### 获得文件读取漏洞，通常会读哪些文件，Linux和windows都谈谈\n\n**通用**\n\n- 找 Web 应用的配置文件，指不定有外联数据库\n- 找 Web 中间件的配置文件，指不定有 Tomcat 配置界面的用户密码\n- 找系统文件\n\n**linux**\n\n- `etc/passwd、etc/shadow`直接读密码\n\n- `/etc/hosts` # 主机信息\n\n- `/root/.bashrc` # 环境变量\n\n- `/root/.bash_history` # 还有root外的其他用户\n\n- `/root/.viminfo` # vim 信息\n\n- `/root/.ssh/id_rsa` # 拿私钥直接ssh\n\n- `/proc/xxxx/cmdline` # 进程状态枚举 xxxx 可以为0000-9999 使用burpsuite\n\n- 数据库 config 文件\n\n- web 日志 `access.log, error.log`\n\n- ssh 日志\n\n  ```bash\n  /root/.ssh/id_rsa\n  /root/.ssh/id_rsa.pub\n  /root/.ssh/authorized_keys\n  /etc/ssh/sshd_config\n  /var/log/secure\n  /etc/sysconfig/network-scripts/ifcfg-eth0\n  /etc/syscomfig/network-scripts/ifcfg-eth1\n  ```\n\n- `/var/lib/php/sess_PHPSESSID` # 非常规问题 session 文件( 参考 平安科技的一道session包含 http://www.jianshu.com/p/2c24ea34566b)\n\n**windows**\n\n- `C:\\boot.ini` //查看系统版本\n- `C:\\Windows\\System32\\inetsrv\\MetaBase.xml` //IIS 配置文件\n- `C:\\Windows\\repair\\sam` //存储系统初次安装的密码\n- `C:\\Program Files\\mysql\\my.ini` //Mysql 配置\n- `C:\\Program Files\\mysql\\data\\mysql\\user.MY D` //Mysql root\n- `C:\\Windows\\php.ini` //php 配置信息\n- `C:\\Windows\\my.ini` //Mysql 配置信息\n\n### 如何分析被代理出来的数据流\n\n分析数据包请求头中的 xff、referer 等收集有用的信息\n\n[基于网络欺骗与浏览器指纹的WEB攻击溯源](https://www.freebuf.com/articles/web/245585.html)\n\n### windows端口进程间转换\n\n端口->进程\n\n1. `netstat -ano | findstr “port”`查看目前的网络连接，定位可疑的 ESTABLISHED\n2. 根据`netstat `定位出的 pid，再通过`tasklist`命令进行进程定位` tasklist | findstr “PID”`\n\n![image-20220103194348302](https://s2.loli.net/2022/05/25/NVM7Jl4bv8sqyiK.png)\n\n### 查看进程对应的程序位置\n\n任务管理器–选择对应进程–右键打开文件位置运行输入 wmic，cmd界面 输入 process\n\n查看 Windows 服务所对应的端口\n\n`%system%/system32/drivers/etc/services`（一般 %system% 就是 C:\\Windows）\n\n### 查看windows进程的方法\n\n1. 开始 – 运行 – 输入`msinfo32` 命令，依次点击 “软件环境 – 正在运行任务” 就可以查看到进程的详细信息，比如进程路径、进程ID、文件创建日期以及启动时间等\n2. 打开D盾_web查杀工具，进程查看，关注没有签名信息的进程\n3. 通过微软官方提供的 Process Explorer 等工具进行排查\n\n查看**可疑的进程**及其子进程。可以通过观察以下内容：\n\n- 没有签名验证信息的进程\n- 没有描述信息的进程\n- 进程的属主\n- 进程的路径是否合法\n- CPU 或内存资源占用长时间过高的进程\n\n### 你能说明文件上传的原理吗？\n\n- PHP：如果系统中存在可以上传文件的功能点，就可以上传后门脚本文件，通过一些方法绕过上传限制，如果能访问后门的的话，系统存在文件上传漏洞，可以借助后门执行命令\n- Java：上传 jsp 代码\n- Asp/Aspx\n- Python：因为脚本需要译后生成 pyc 字节码文件，所以不存在文件上传\n\n### 文件上传攻击特征？\n\n能够上传文件的接口，应用程序对用户上传文件类型不校验或者校验不严格可绕过，导致任意类型文件上传，攻击者可上传 webshell 拿到服务器权限，在这个过程中攻击者必然会上传恶意脚本文件\n\n### 文件上传加固方法？\n\n1. 后端限制文件上传白名单，头像不允许上传 svg\n2. 上传后文件随机重命名，不要输出保存文件位置\n3. 图片文件可以二次渲染，使用对象存储 oss\n4. 文件目录取消执行权限，PHP 设置 basedir\n\n### 用过Nmap扫描工具吗\n\nnmap 扫描基础命令\n\n- -sT TCP (全)连接扫描，准确但留下大量日志记录\n- -sS TCP SYN (半)扫描，速度较快，不会留下日志\n- -sN null 扫描，标志位全为 0，不适用 Windows\n- -sF FIN 扫描，标志位 FIN=1，不适用 Windows\n- -O 查看目标主机系统版本\n- -sV 探测服务版本\n- -A 全面扫描\n\n![img](https://s2.loli.net/2022/05/25/rdcNnQ5zoyEqHhK.png)\n\n### 你做过渗透测试的工作吗？\n\n首先信息收集，收集子域名、Whois、C段、旁站、Web 系统指纹识别，然后测试 web 系统的漏洞\n\n### 暴力破解加固方法？\n\n1. 添加强度较高的验证码，不易被破解\n2. 修改密码设置规则，提高用户的密码强度\n3. 同一账号登陆次数锁定，生成锁定日志\n4. 定期排查弱口令\n\n### Sql注入加固措施？\n\n对于输入的字符进行过滤\n\n使用 PDO 预编译语句处理\n\n### 一台主机在内网进行横向攻击，你应该怎么做？\n\n确定攻击来源，是不是员工内部误操作，比如询问运维是否有自动化轮训脚本\n\n如果没有，确定是攻击，结合时间点，根据设备信息，看一下安全事件，进程，流量\n\n找到问题主机，开始应急响应流程：准备、检测、遏制、根除、恢复、跟踪，具体的操作要交给现场运维去处理\n\n### 你还用过其他态势感知的产品吗？\n\nips，ids，hids，堡垒机等\n\n### 命令行工具用的什么比较多？\n\nxshell、xftp、finalshell\n\n### 你用过微步吗？\n\n微步在线是一个威胁情报中心，可以通过 ip 或域名查询其是不是恶意的，对于判断恶意链接具有一定的参考性，他还有一个插件可以在页面选中就能进行查询，还是一个比较好用的工具\n\n### 什么是跨域，JSONP与CORS\n\n**同源策略**\n\n同源策略：域名、协议、端口均相同\n\n浏览器执行 JavaScript 脚本时，会检查这个脚本属于那个页面，如果不是同源页面，就不会被执行\n\n**什么是跨域？**\n\n跨域：指的是浏览器不能执行其它网站的脚本，它是由浏览器的同源策略造成的，是浏览器的安全限制！\n\n**JSONP跨域**\n\n利用 js script 标签中 src 属性可以跨域的特性，使用 callback 参数的函数名来接收数据\n\n只支持 GET 请求，不支持 POST 等其它请求，也不支持复杂请求，只支持简单请求\n\n**CORS跨域**\n\n支持所有的请求，包含 GET、POST、OPTOIN、PUT、DELETE 等既支持复杂请求，也支持简单请求\n\nJSONP 与 CORS 的使用目的相同，并且都需要服务端和客户端同时支持，但 CORS 的功能更加强大\n\n**JSONP和CORS的优缺点**\n\n1. JSONP 的主要优势在于对浏览器的支持较好；虽然目前主流浏览器都支持 CORS，但 IE9 及以下不支持 CORS\n2. JSONP 只能用于获取资源（即只读，类似于 GET 请求）；CORS 支持所有类型的 HTTP 请求，功能完善\n3. JSONP 只会发一次请求；而对于复杂请求，CORS 会发两次请求\n\n**应用场景**\n\n如果需要兼容IE低版本浏览器，无疑，JSONP\n\n如果需要对服务端资源进行操作，无疑，CORS\n\n其他情况的话，根据自己的对需求的分析来决定和使用\n\n### http状态与无连接\n\n**无连接**\n\n1. 每一个访问都是无连接，服务器挨个处理访问队列里的访问，处理完一个就关闭连接，这事儿就完了，然后处理下一个新的\n2. 无连接的含义是限制每次连接只处理一个请求服务器处理完客户的请求，并收到客户的应答后，即断开连接\n\n**无状态**\n\n1. 协议对于事务处理没有记忆能力\n2. 对同一个 url 请求没有上下文关系\n3. 每次的请求都是独立的，它的执行情况和结果与前面的请求和之后的请求是无直接关系的，它不会受前面的请求应答情况直接影响，也不会直接影响后面的请求应答情况\n4. 服务器中没有保存客户端的状态，客户端必须每次带上自己的状态去请求服务器\n\n### 什么是路由表\n\n在计算机网络中，路由表（routing table）或称路由择域信息库（RIB, Routing Information Base），是一个存储在路由器或者联网计算机中的电子表格（文件）或类数据库路由表存储着指向特定网络地址的路径（在有些情况下，还记录有路径的路由度量值）路由表中含有网络周边的拓扑信息路由表建立的主要目标是为了实现路由协议和静态路由选择\n\n每个路由器中都有一个路由表和 FIB(Forward Information Base) 表：路由表用来决策路由，FIB 用来转发分组路由表中有三类路由：\n\n1. 链路层协议发现的路由（即是直连路由）\n2. 静态路由\n3. 动态路由协议 RIP、OSRF 发现的路由\n\n### 非sql数据库\n\nZookeeper，HBase、Redis、MongoDB、Couchbase、LevelDB\n\n### 常见OA系统\n\nPHP：通达OA、泛微 Eoffice\n\nJava：泛微OA/云桥、致远OA、蓝凌OA、用友OA\n\nASP：启莱OA\n\n### 横向越权漏洞的修复\n\n横向越权：横向越权指的是攻击者尝试访问与他拥有相同权限的用户的资源\n\n纵向越权：纵向越权指的是一个低级别攻击者尝试访问高级别用户的资源\n\n对于纵向越权，我们可以通过设置用户角色，为不同的角色提供不同的权限来避免\n\n为了防止横向越权，我们可以使用缓存来进行辅助，当登录成功或者进行操作时，我们在缓存中存储一对由用户名和一个唯一的数字组成的数据（token），然后返回放入的唯一数据在重置密码时我们的参数不仅需要用户名和密码还需要前面生成的唯一数字，根据用户名在缓存中取出对应的数字，如果取出的数字和参数中传入的想等，则证明重置的当前用户的密码，否则不是，且不予以重置\n\n### 如何打击黑灰产工具\n\n1. 全面监控和快速响应（溯源）：对黑灰进行长期跟进，了解黑灰产工具的传播链条和路径，第一时间捕获活跃的黑灰产工具（建立特征词监控，数据取样、交叉分析）\n2. 建立软件指纹库，增加风险识别能力\n3. 建立黑灰产情报共享，最大化情报价值\n\n### 如何反爬\n\n1. 后台对访问进行统计，如果单个 IP 访问超过阈值，予以封锁\n2. 后台对访问进行统计，如果单个 session 访问超过阈值，予以封锁\n3. 后台对访问进行统计，如果单个 userAgent 访问超过阈值，予以封锁\n4. 以上的组合\n\n### Linux下查找服务端口的命令\n\nLinux下查找服务端口的命令？一句话查找80端口服务的命令？\n\n使用grep 命令 要使用 grep 命令在Linux 中查找指定服务的默认端口号，只需运行\n\n```bash\ngrep <port> /etc/services\ngrep services /etc/services\n```\n\n![image-20220107203438844](https://s2.loli.net/2022/05/25/qZVnLyhwU1mDdXs.png)\n\n### 如何发现钓鱼邮件\n\n**钓鱼邮件发现**\n\n发现途径如下：\n\n邮件系统异常登录告警、员工上报、异常行为告警、邮件蜜饵告警\n\n推荐接入微步或奇安信的情报数据。对邮件内容出现的 URL 做扫描，可以发现大量的异常链接\n\n### 钓鱼邮件处置\n\nhttps://www.freebuf.com/articles/es/264037.html\n\n1. 屏蔽办公区域对钓鱼邮件内容涉及站点、URL 访问\n\n   根据办公环境实际情况可以在上网行为管理、路由器、交换机上进行屏蔽\n\n   邮件内容涉及域名、IP 均都应该进行屏蔽\n\n   对访问钓鱼网站的内网 IP 进行记录，以便后续排查溯源可能的后果\n\n2. 屏蔽钓鱼邮件\n\n   屏蔽钓鱼邮件来源邮箱域名\n\n   屏蔽钓鱼邮件来源 IP\n\n   有条件的可以根据邮件内容进行屏蔽\n\n   删除还在邮件服务器未被客户端收取钓鱼邮件\n\n3. 处理接收到钓鱼邮件的用户\n\n   - 根据钓鱼邮件发件人进行日志回溯\n\n     此处除了需要排查有多少人接收到钓鱼邮件之外，还需要排查是否公司通讯录泄露。采用 TOP500 姓氏撞库发送钓鱼邮件的攻击方式相对后续防护较为简单。如果发现是使用公司通讯录顺序则需要根据通讯录的离职情况及新加入员工排查通讯录泄露时间。毕竟有针对性的社工库攻击威力要比 TOP100、TOP500 大很多\n\n   - 通知已接收钓鱼邮件的用户进行处理\n\n   - **删除钓鱼邮件**\n\n   - **系统改密**\n\n   - **全盘扫毒**\n\n4. 后续：溯源、员工培训提升安全意识\n\n### 如何查看区分是扫描流量和手动流量\n\n（扫描数据量大，请求有规律，手动扫描间隔较少）\n\n### 遇到.exe文件如何处理？\n\n首先看它的来源和去向，然后可以下载但不运行，放入微步沙箱中，看是否有后门，若有后门，就用 IDA 反汇编得到恶意攻击者的有用信息，再进一步描绘出攻击者画像进行溯源\n\n### Linux 的 Selinux 是什么？如何设置 Selinux？\n\nSELinux 是一种安全子系统，它能控制程序只能访问特定文件使用 setup 工具进入图形化关闭搜索或者修改`/etc/sysconfig/selinux` 文件\n\n```bash\nSELINUX=disabled\n```\n\n防火墙打开使用 `service iptables start` 或则`/etc/init.d/iptables start`\n\n### iptables 工作在 TCP/IP 模型中的哪层？\n\n网络层\n\n### 日志分析ELK的使用和分析\n\n> https://www.zhihu.com/question/21427267\n>\n> - Elasticsearch是个开源分布式搜索引擎，它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。\n> - Logstash是一个完全开源的工具，他可以对你的日志进行收集、过滤，并将其存储供以后使用（如，搜索）。\n> - Kibana 也是一个开源和免费的工具，它Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助您汇总、分析和搜索重要数据日志。\n\n举例-阿里规范 用户历史命令记录\n\n缺点：安全性不够。使用x-pack实现安全认证及权限管理功能\n\n### awk sed的使用\n\n### Log4j\n\nlog4j 是 javaweb 的日志组件，用来记录 web 日志\n\n去指定下载文件的 url 在搜索框或者搜索的 url 里面，加上 ${jndi:ldap://127.0.0.1/test} ，log4j 会对这串代码进行表达式解析，给 lookup 传递一个恶意的参数指定，参数指的是比如 ldap 不存在的资源 $ 是会被直接执行的。后面再去指定下载文件的 url，去下载我们的恶意文件。比如是 x.class 下载完成后，并且会执行代码块\n\n修复：升级 Log4j 到最新版本，根据业务判断是否关闭 lookup\n\n## ⬆️入侵检测&防御\n\n### WAF产品如何来拦截攻击？\n\nWaf 产品有三种\n\n1. 云 Waf\n\n   用户不需要在自己的网络中安装软件程序或部署硬件设备，就可以对网站实施安全防护，它的主要实现方式是**利用 DNS 技术**，通过移交域名解析权来实现安全防护。用户的请求首先发送到云端节点进行检测，如存在异常请求则进行拦截否则将请求转发至真实服务器\n\n2. Web 防护软件\n\n   安装在需要防护的服务器上，实现方式通常是 **Waf 监听端口或以 Web 容器扩展**方式进行请求检测和阻断\n\n3. 硬件 Web 防火墙\n\n   Waf **串行部署**在 Web 服务器前端，用于检测、阻断异常流量。常规硬件 Waf 的实现方式是通过**代理技术**代理来自外部的流量\n\n原理都相同，通过部署在 Web 服务器前方串行接入来将 Web 流量牵引到 WAF 设备中进行清洗或者拦截，最终只把正常用户的请求转发给服务器\n\n当前市场上 Waf 产品核心的防护机制是“规则”，每一个请求、会话，经过抓包，“开包检查”，每一项规则都会检查到，一旦检查不通过，就会被认为是非法访问，拒绝处理\n\n### WAF有哪些防护方式？\n\n- Web基础防护\n\n  可防范常规的 web 应用攻击，如 SQL 注入攻击、XSS 跨站攻击等，可检测 webshell，检查 HTTP 上传通道中的网页木马，打开开关即实时生效\n\n- CC 攻击防护\n\n  可根据 IP、Cookie 或者 Referer 字段名设置灵活的限速策略，有效缓解 CC 攻击\n\n- 精准访问防护\n\n  对常见 HTTP 字段进行条件组合， 支持定制化防护策略如CSRF防护，通过自定义规则的配置，更精准的识别恶意伪造请求、保护网站敏感信息、提高防护精准性\n\n- IP 黑白名单\n\n  添加终拦截与始终放行的黑白名单 IP，增加防御准确性\n\n- 地理位置访问控制\n\n  添加地理位置访问控制规则，针对来源 IP 进行自定义访问控制\n\n- 网页防篡改\n\n  对网站的静态网页进行缓存配置，当用户访问时返回给用户缓存的正常页面，并随机检测网页是否被篡改\n\n- 网站反爬虫\n\n  动态分析网站业务模型，结合人机识别技术和数据风控手段，精准识别爬虫行为\n\n- 误报屏蔽\n\n  针对特定请求忽略某些攻击检测规则，用于处理误报事件\n\n- 隐私屏蔽\n\n  隐私信息屏蔽，避免用户的密码等信息出现在事件日志中\n\n- 防敏感信息泄露\n\n  防止在页面中泄露用户的敏感信息，例如：用户的身份证号码、手机号码、电子邮箱等\n\n### 不安全的第三方组件的漏洞如何做前置规避？\n\n第三方组件缺陷又被归结为供应链安全问题，供应链安全需要多方面考虑。没有万能方案，但是组织可以用分层防御的组合来保护供应链\n\n- 安全战略评估\n\n  要评估风险与合规性，需要针对业务挑战、需求和目标评估现有的安全治理框架——包括数据隐私、第三方风险和IT法规合规需求及差距。安全风险量化、安全开发、法规和标准合规性以及安全教育和培训是关键\n\n- 事件响应计划与编排\n\n  提前为入侵、关闭或中断做好准备，并拥有稳健的事件响应计划很重要。通过实践、测试和易执行的响应计划和补救措施，防止损失\n\nhttps://www.freebuf.com/articles/neopoints/261681.html\n\n### 如果现在要你写一个检测命令注入的脚本？\n\n你会怎么写，有哪些要注意的地方，如果别人的脚本检测出来了你的脚本没检测出来你觉的你的脚本会存在什么问题，脚本检测过程中如果没有回显你会怎么做\n\n# 🅰️溯源\n\n![image-20220103203355953](https://s2.loli.net/2022/05/25/2ZAenxgQsu6b7DC.png)\n\n## ⬆️基本步骤\n\n### 1.攻击源捕获\n\n- 安全设备报警，如扫描IP、威胁阻断、病毒木马、入侵事件等\n- 日志与流量分析，异常的通讯流量、攻击源与攻击目标等\n- 服务器资源异常，异常的文件、账号、进程、端口，启动项、计划任务和服务等\n- 邮件钓鱼，获取恶意文件样本、钓鱼网站 URL 等\n- 蜜罐系统，获取攻击者 ID、电脑信息、浏览器指纹、行为、意图的相关信息\n\n### 2.溯源反制手段\n\n- IP 定位技术\n  根据IP定位物理地址–代理 IP\n  溯源案例：通过 IP 端口扫描，反向渗透服务器进行分析，最终定位到攻击者相关信息\n- ID 追踪术\n  ID 追踪术，搜索引擎、社交平台、技术论坛、社工库匹配\n  溯源案例：利用 ID 从技术论坛追溯邮箱，继续通过邮箱反追踪真实姓名，通过姓名找到相关简历信息\n- 网站 url\n  域名 Whois 查询–注册人姓名、地址、电话和邮箱 --域名隐私保护\n  溯源案例：通过攻击 IP 历史解析记录/域名，对域名注册信息进行溯源分析\n- 恶意样本分析\n  提取样本特征、用户名、ID、邮箱、C2 服务器等信息–同源分析\n  溯源案例：样本分析过程中，发现攻击者的个人 ID 和 QQ，成功定位到攻击者\n- 社交账号\n  基于 JSONP 跨域，获取攻击者的主机信息、浏览器信息、真实 IP 及社交信息等\n  利用条件：可以找到相关社交网站的 jsonp 接口泄露敏感信息，相关网站登录未注销\n\n### 3.攻击者画像\n\n- 攻击路径\n\n  攻击目的：拿到权限、窃取数据、获取利益、DDOS 等\n  网络代理：代理 IP、跳板机、C2 服务器等\n  攻击手法：鱼叉式邮件钓鱼、Web渗透、水坑攻击、近源渗透、社会工程等\n\n- 攻击者身份画像\n\n  虚拟身份：ID、昵称、网名\n  真实身份：姓名、物理位置\n  联系方式：手机号、qq/微信、邮箱\n  组织情况：单位名称、职位信息\n\n### 技巧\n\n1. 域名、ip 反查目标个人信息\n2. 支付宝转账，确定目标姓氏\n3. 淘宝找回密码，确定目标名字\n4. 企业微信手机号查公司名称\n5. REG007 查注册应用、网站\n6. 程序 PDB 信息泄露\n\n### 主动防御\n\n[基于网络欺骗与浏览器指纹的WEB攻击溯源](https://www.freebuf.com/articles/web/245585.html)\n\n1. 浏览器指纹技术\n2. 网络欺骗技术，蜜罐蜜网\n\n### 流量溯源\n\n可利用流量工具 wireshark 进行溯源：\n\n1. 查看 eval、 z0、 shell whoami 等关键字，查看出现次数过多的时候， 需要查看是哪个页面发起的请求，有可能是 webshell\n2. 通过 WireShark 工具快速搜索关键字，定位到异常流量包\n3. 找出异常 IP 和所上传的内容，查看是否为 webshell\n\n如何定位到攻击IP：\n\n1. 首先通过选择 - 统计 - 对话查看流量的走向情况， 定位可疑的 IP 地址\n\n2. 根据定位到的 IP 地址，尝试对上传的 webshell 进行定位\n\n   ```bash\n   ip.addr == ip && http matches\n   \"uploadllevallselectlxp_cmdshell\" && http.request.method == \"POST\"\n   12\n   ```\n\n3. 查找到 webshell 后尝试溯源漏洞位置\n\n   ```bash\n   http.request.uri contains \"webshell.php\"\n   1\n   ```\n\n   定位到最开始 webshell 执行或上传的时候\n\n4. 根据最开始的 HTTP 上传包或者其他漏洞特征定位漏洞类型\n\n### wireshark\n\nwireshark 简单的过滤规则\n\n- 过滤ip：\n\n  过滤源 ip 地址：ip.src1.1.1.1\n\n  目的 ip 地址：ip.dst1.1.1.1\n\n- 过滤端口：\n\n  过滤80端口：tcp.port == 80\n\n  源端口：tcp.srcport == 80\n\n  目的端：tcp.dstport == 80\n\n- 协议过滤：直接输入协议名即可，如 http 协议 http\n\n- http 模式过滤：过滤 get/post 包 httprequest.mothod == “GET/POST”\n\n### 常用取证工具\n\nWireshark、xplico、 Volatility、 FastlR Collector、Autopsy、 Dumplt、 FTK Imager、Foremost、Scalpel、 Bulk_ exetractor 等\n\n### 优秀文章\n\n[域前置溯源方法思考](https://www.anquanke.com/post/id/260888)\n\n## ⬆️其他\n\n### 对蜜罐的了解\n","slug":"蓝队面试题","published":1,"updated":"2022-05-25T00:18:45.021Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3nxqfhx0007h4c7efied916","content":"<p>OCEAN’S 安全面试题整理系列文章：</p>\n<ol>\n<li><a href=\"https://blog.csdn.net/q20010619/article/details/124329818\">渗透测试&amp;网络&amp;CTF面试题整理</a></li>\n<li><a href=\"https://blog.csdn.net/q20010619/article/details/124329764?spm=1001.2014.3001.5501\">PHP&amp;Java&amp;Py&amp;漏洞利用or运维面试题整理</a></li>\n<li><a href=\"https://blog.csdn.net/q20010619/article/details/123185212\">红队面试题整理</a></li>\n<li><a href=\"https://blog.csdn.net/q20010619/article/details/123015066\">蓝队面试题整理（含回答）</a></li>\n<li><a href=\"https://github.com/Leezj9671/Pentest_Interview/blob/master/HR%E9%97%AE%E9%A2%98.md\">HR问题</a></li>\n</ol>\n<h1 id=\"🅰️应急响应🛡️\"><a href=\"#🅰️应急响应🛡️\" class=\"headerlink\" title=\"🅰️应急响应🛡️\"></a>🅰️应急响应🛡️</h1><h2 id=\"⬆️宏观题\"><a href=\"#⬆️宏观题\" class=\"headerlink\" title=\"⬆️宏观题\"></a>⬆️宏观题</h2><h3 id=\"1-基本思路流程\"><a href=\"#1-基本思路流程\" class=\"headerlink\" title=\"1.基本思路流程\"></a>1.基本思路流程</h3><ol>\n<li>收集信息：收集客户信息和中毒主机信息，包括样本</li>\n<li>判断类型：判断是否是安全事件，何种安全事件，勒索、挖矿、断网、DoS 等等</li>\n<li>抑制范围：隔离使受害⾯不继续扩⼤</li>\n<li>深入分析：日志分析、进程分析、启动项分析、样本分析方便后期溯源</li>\n<li>清理处置：杀掉进程，删除文件，打补丁，删除异常系统服务，清除后门账号防止事件扩大，处理完毕后恢复生产</li>\n<li>产出报告：整理并输出完整的安全事件报告</li>\n</ol>\n<h3 id=\"2-Windows入侵排查思路\"><a href=\"#2-Windows入侵排查思路\" class=\"headerlink\" title=\"2.Windows入侵排查思路\"></a>2.Windows入侵排查思路</h3><ol>\n<li><p>检查系统账号安全</p>\n<ol>\n<li><p>查看服务器是否有弱口令，远程管理端口是否对公网开放（使用<code>netstat -ano </code>命令、或者问服务器管理员）</p>\n</li>\n<li><p><code>lusrmgr.msc </code>命令查看服务器是否存在可疑账号、新增账号，如有管理员群组的（Administrators）里的新增账户，如有，请立即禁用或删除掉</p>\n</li>\n<li><p>用 D 盾或者注册表中查看服务器是否存在隐藏账号、克隆账号</p>\n</li>\n<li><p>结合日志，查看管理员登录时间、用户名是否存在异常</p>\n<p>检查方法：Win+R 打开运行，输入“eventvwr.msc”，回车运行，打开“事件查看器”，导出 Windows 日志–安全，利用 Log Parser 进行分析</p>\n</li>\n</ol>\n</li>\n<li><p>检查异常端口、进程</p>\n<ol>\n<li><code>netstat -ano</code>检查端口连接情况，是否有远程连接、可疑连接</li>\n<li>任务管理器-进程</li>\n</ol>\n</li>\n<li><p>检查启动项、计划任务、服务</p>\n</li>\n<li><p>检查系统相关信息</p>\n<p>查看系统版本以及补丁信息</p>\n<p>查找可疑目录及文件</p>\n</li>\n<li><p>日志分析</p>\n</li>\n</ol>\n<h3 id=\"3-Linux入侵排查思路\"><a href=\"#3-Linux入侵排查思路\" class=\"headerlink\" title=\"3.Linux入侵排查思路\"></a>3.Linux入侵排查思路</h3><ol>\n<li><p>账号安全</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">who</span>\t\t查看当前登录用户（tty本地登陆 pts远程登录）\nw \t\t查看系统信息，想知道某一时刻用户的行为\n<span class=\"token function\">uptime</span>\t查看登陆多久、多少用户，负载<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">1</span>、用户信息文件/etc/passwd\nroot:x:0:0:root:/root:/bin/bash\naccount:password:<span class=\"token environment constant\">UID</span>:GID:GECOS:directory:shell\n用户名：密码：用户ID：组ID：用户说明：家目录：登陆之后shell\n注意：无密码只允许本机登陆，远程不允许登陆\n\n<span class=\"token number\">2</span>、影子文件/etc/shadow\nroot:<span class=\"token variable\">$6</span><span class=\"token variable\">$oGs1PqhL2p3ZetrE</span><span class=\"token variable\">$X7o7bzoouHQVSEmSgsYN5UD4</span>.kMHx6qgbTqwNVC5oOAouXvcjQSt.Ft7ql1WpkopY0UV9ajBwUt1DpYxTCVvI/:16809:0:99999:7:::\n用户名：加密密码：密码最后一次修改日期：两次密码的修改时间间隔：密码有效期：密码修改到期到的警告天数：密码过期之后的宽限天数：账号失效时间：保留<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>/etc/passwd</code> 存储一般的用户信息，任何人都可以访问；<code>/etc/shadow</code> 存储用户的密码信息，只有 root 用户可以访问</p>\n</li>\n<li><p>历史命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">通过 .bash_history 查看帐号执行过的系统命令\n<span class=\"token number\">1</span>、root的历史命令 histroy\n<span class=\"token number\">2</span>、打开 /home 各帐号目录下的 .bash_history，查看普通帐号的历史命令\n\n历史操作命令的清除：history -c\n但此命令并不会清除保存在文件中的记录，因此需要手动删除.bash_profile文件中的记录<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>检查异常端口</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">netstat</span> -antlp<span class=\"token operator\">|</span><span class=\"token function\">more</span>\n查看下pid所对应的进程文件路径，\n运行ls -l /proc/<span class=\"token variable\">$PID</span>/exe或file /proc/<span class=\"token variable\">$PID</span>/exe（<span class=\"token variable\">$PID</span> 为对应的pid 号）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>检查异常进程</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ps</span> aux <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> pid<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>检查开机启动项</p>\n<p>开机启动配置文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">/etc/rc.local\n/etc/rc.d/rc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span>~6<span class=\"token punctuation\">]</span>.d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>检查定时任务</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">crontab</span> -l 列出某个用户cron服务的详细内容\nTips：默认编写的crontab文件会保存在 <span class=\"token punctuation\">(</span>/var/spool/cron/用户名 例如: /var/spool/cron/root\n<span class=\"token function\">crontab</span> -r 删除每个用户cront任务<span class=\"token punctuation\">(</span>谨慎：删除所有的计划任务<span class=\"token punctuation\">)</span>\n<span class=\"token function\">crontab</span> -e 使用编辑器编辑当前的crontab文件\n如：*/1 * * * * <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hello world\"</span> <span class=\"token operator\">&gt;&gt;</span> /tmp/test.txt 每分钟写入文件\n<span class=\"token number\">2</span>、利用anacron实现异步定时任务调度<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>重点关注</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">/var/spool/cron/*\n/etc/crontab\n/etc/cron.d/*\n/etc/cron.daily/*\n/etc/cron.hourly/*\n/etc/cron.monthly/*\n/etc/cron.weekly/\n/etc/anacrontab\n/var/spool/anacron/*<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>检查服务</p>\n<p>chkconfig –list 命令，可以查看系统运行的服务</p>\n</li>\n<li><p>检查异常文件</p>\n</li>\n<li><p>检查系统日志</p>\n</li>\n</ol>\n<h3 id=\"Linux的登录日志查看文件\"><a href=\"#Linux的登录日志查看文件\" class=\"headerlink\" title=\"Linux的登录日志查看文件\"></a>Linux的登录日志查看文件</h3><ul>\n<li>日志默认存放位置：/var/log/</li>\n<li>查看可登录的账户 cat/etc/passwd|grep ‘/bin/bash’</li>\n<li>查看所有用户最后的登录信息 lastlog</li>\n<li>查看用户最近登录信息 last 其中，/var/log/wtmp 存储登录成功的信息、btmp 存储登录失败的信息、utmp 存储当前正在登录的信息</li>\n<li>查看当前用户登录系统情况 who</li>\n</ul>\n<h3 id=\"Linux常用排查命令\"><a href=\"#Linux常用排查命令\" class=\"headerlink\" title=\"Linux常用排查命令\"></a>Linux常用排查命令</h3><p>这个问题就是 linux 入侵排查排查的一部分</p>\n<p><a href=\"https://cloud.tencent.com/developer/article/1822210\">https://cloud.tencent.com/developer/article/1822210</a></p>\n<p>系统信息</p>\n<ol>\n<li>查看当前系统状态 top</li>\n<li>操作系统信息 uname -a</li>\n<li>查看当前系统进程信息 ps</li>\n<li>查看历史命令 history</li>\n<li>列出本机所有的连接和监听的端口 netstat</li>\n<li>查看谁在使用某个端口 lsof</li>\n</ol>\n<p>用户登录</p>\n<ol>\n<li><p>查看当前用户登录系统情况 who</p>\n</li>\n<li><p>分析超级权限账户 awk-F： ‘{if（$3==0）print $1}’/etc/passwd</p>\n</li>\n<li><p>查看可登录的账户 cat/etc/passwd|grep ‘/bin/bash’</p>\n</li>\n<li><p>查看用户错误的登录信息 lastb</p>\n</li>\n<li><p>查看所有用户最后的登录信息 lastlog</p>\n</li>\n<li><p>查看用户最近登录信息 last</p>\n<p>/var/log/ 其中，/var/log/wtmp 存储登录成功的信息、btmp存储登录失败的信息、utmp存储当前正在登录的信息</p>\n</li>\n<li><p>查看空口令账户 awk-F： ‘length（$2）==0 {print $1}’/etc/shadow</p>\n</li>\n</ol>\n<h3 id=\"Linux基线规范\"><a href=\"#Linux基线规范\" class=\"headerlink\" title=\"Linux基线规范\"></a>Linux基线规范</h3><p>每个公司有每个公司的基线规范体系，但是答题分为下列五个方面</p>\n<p><strong>账号管理和授权</strong></p>\n<ul>\n<li>检查特殊账号，是否存在空密码的账户和 root 权限账户</li>\n<li>禁用或删除无用账号</li>\n<li>添加口令策略:<code>/etc/login.defs</code>修改配置文件，设置过期时间、连续认证失败次数</li>\n<li>禁止 root 远程登录，限制root用户直接登录。</li>\n<li>检查 su 权限。<code>vi /etc/pam.d/su</code>添加<code>auth required pam_wheel.so group=test</code></li>\n</ul>\n<p><strong>服务</strong></p>\n<ul>\n<li>关闭不必要的服务</li>\n<li>SSH 服务安全<ul>\n<li>不允许 root 账号直接登录系统，<code>PermitRootLogin=no</code></li>\n<li>修改 SSH 使用的协议版本为 2</li>\n<li>修改允许密码错误次数（默认 6 次），<code>MaxAuthTries=3</code></li>\n</ul>\n</li>\n</ul>\n<p><strong>文件系统</strong></p>\n<ul>\n<li>设置 umask 值 <code>vi /etc/profile</code> 添加行 <code>umask 027</code></li>\n<li>设置登录超时 <code>vi /etc/profile</code> 修改配置文件，将以 <code>TMOUT=</code> 开头的行注释，设置为 <code>TMOUT=180</code></li>\n</ul>\n<p><strong>日志</strong></p>\n<ul>\n<li><p>启用 syslogd 日志，配置日志目录权限，或者设置日志服务器</p>\n</li>\n<li><p>记录所有用户的登录和操作日志，通过脚本代码实现记录所有用户的登录操作日志，防止出现安全事件后无据可查</p>\n<p><a href=\"https://www.alibabacloud.com/help/zh/faq-detail/49809.htm\">https://www.alibabacloud.com/help/zh/faq-detail/49809.htm</a></p>\n</li>\n</ul>\n<p><strong>IP 协议安全要求</strong></p>\n<ul>\n<li>远程登录取消 telnet 采用 ssh</li>\n<li>设置 /etc/hosts.allow 和 deny</li>\n<li>禁止 ICMP 重定向</li>\n<li>禁止源路由转发</li>\n<li>防 ssh 破解，iptables (对已经建立的所有链接都放行，限制每分钟连接 ssh 的次数)+ denyhost (添加 ip 拒绝访问)</li>\n</ul>\n<p><strong>Linux 安全基线检查</strong></p>\n<p>Linux：<a href=\"https://cloud.tencent.com/developer/article/1668982\">https://cloud.tencent.com/developer/article/1668982</a></p>\n<h3 id=\"Windows-安全基线检查\"><a href=\"#Windows-安全基线检查\" class=\"headerlink\" title=\"Windows 安全基线检查\"></a>Windows 安全基线检查</h3><p>Windows：<a href=\"https://cloud.tencent.com/developer/article/1668937\">https://cloud.tencent.com/developer/article/1668937</a></p>\n<p>主要包括五个方面：身份鉴别、访问控制、安全审计、资源控制、剩余信息保护</p>\n<ul>\n<li><p><strong>身份鉴别</strong></p>\n<p>更改缺省账户</p>\n<p>检查Guest用户是否禁用</p>\n<p>密码复杂性要求</p>\n<p>密码长度最小不能小于8位</p>\n</li>\n<li><p><strong>访问控制</strong></p>\n<p>共享账户检查</p>\n<p>远程关机授权</p>\n<p>本地关机</p>\n<p>授权帐户登陆</p>\n</li>\n<li><p><strong>安全审计</strong></p>\n<p>用户登录日志记录</p>\n<p>系统日志完备性检查</p>\n<p>登录超时管理</p>\n</li>\n<li><p><strong>资源控制</strong></p>\n<p>登录超时管理</p>\n<p>远程登录超时配置</p>\n</li>\n<li><p><strong>剩余信息保护</strong></p>\n<p>不显示上次的用户名</p>\n<p>关机前清除虚拟内存页面</p>\n<p>不启用可还原的加密来存储密码</p>\n</li>\n</ul>\n<h3 id=\"中间件基线规范（APACHE）\"><a href=\"#中间件基线规范（APACHE）\" class=\"headerlink\" title=\"中间件基线规范（APACHE）\"></a>中间件基线规范（APACHE）</h3><blockquote>\n<p><a href=\"https://www.alibabacloud.com/help/zh/faq-detail/52981.htm\">https://www.alibabacloud.com/help/zh/faq-detail/52981.htm</a></p>\n</blockquote>\n<p>配置</p>\n<ul>\n<li>账号</li>\n<li>授权</li>\n<li>日志</li>\n<li>session 过期时间（防ddos）</li>\n<li>绑定监听地址</li>\n</ul>\n<p>禁止</p>\n<ul>\n<li>目录权限</li>\n<li>访问外部文件</li>\n<li>CGI</li>\n<li>非法HTTP方法（PUT DELETE）</li>\n</ul>\n<p>隐藏</p>\n<ul>\n<li>服务版本号</li>\n<li>重定向错误页面</li>\n</ul>\n<p>删除</p>\n<ul>\n<li>配置文件</li>\n<li>默认安装的无用文件</li>\n</ul>\n<h3 id=\"中间件常见漏洞\"><a href=\"#中间件常见漏洞\" class=\"headerlink\" title=\"中间件常见漏洞\"></a>中间件常见漏洞</h3><p><a href=\"https://www.freebuf.com/articles/web/192063.html\">https://www.freebuf.com/articles/web/192063.html</a></p>\n<p><strong>（一） IIS</strong><br>1、PUT漏洞</p>\n<p>2、短文件名猜解</p>\n<p>3、远程代码执行</p>\n<p>4、解析漏洞</p>\n<p><strong>（二） Apache</strong><br>1、解析漏洞</p>\n<p>2、目录遍历</p>\n<p><strong>（三） Nginx</strong><br>1、文件解析</p>\n<p>2、目录遍历</p>\n<p>3、CRLF注入</p>\n<p>4、目录穿越</p>\n<p><strong>（四）Tomcat</strong><br>1、远程代码执行</p>\n<p>2、war后门文件部署</p>\n<p><strong>（五）jBoss</strong><br>1、反序列化漏洞</p>\n<p>2、war后门文件部署</p>\n<p><strong>（六）WebLogic</strong><br>1、反序列化漏洞</p>\n<p>2、SSRF</p>\n<p>3、任意文件上传</p>\n<p>4、war后门文件部署</p>\n<p><strong>（七）其它中间件相关漏洞</strong><br>1、FastCGI未授权访问、任意命令执行</p>\n<p>2、PHPCGI远程代码执行</p>\n<h3 id=\"Linux、Windows安全加固\"><a href=\"#Linux、Windows安全加固\" class=\"headerlink\" title=\"Linux、Windows安全加固\"></a>Linux、Windows安全加固</h3><p><strong>IIS 服务器应该做哪些方面的保护措施？</strong></p>\n<p>整理来源：<a href=\"http://www.williamlong.info/archives/118.html\">http://www.williamlong.info/archives/118.html</a></p>\n<ol>\n<li>保持 Windows 升级</li>\n<li>使用 IIS 防范工具</li>\n<li>移除缺省的 Web 站点</li>\n<li>如果你并不需要 FTP 和 SMTP 服务，请卸载它们</li>\n<li>有规则地检查你的管理员组和服务:</li>\n<li>严格控制服务器的写访问权限</li>\n<li>设置复杂的密码</li>\n<li>减少/排除 Web 服务器上的共享</li>\n<li>禁用 TCP/IP 协议中的 NetBIOS</li>\n<li>使用 TCP 端口阻塞</li>\n<li>仔细检查 .bat 和 .exe 文件：每周搜索一次 .bat</li>\n<li>管理 IIS 目录安全</li>\n<li>使用 NTFS 安全</li>\n<li>管理用户账户</li>\n<li>审计你的 Web 服务器</li>\n</ol>\n<p><strong>Linux系统安全加固需要注意的内容</strong></p>\n<ol>\n<li>关闭不必要的系统服务</li>\n<li>更改 SSH 默认端口</li>\n<li>禁止 root 用户远程 ssh 登录</li>\n<li>限制用户使用 su 命令切换 root</li>\n<li>密码复杂度策略</li>\n<li>检查密码重复使用次数限制</li>\n<li>检查是否存在空口令账号</li>\n<li>禁止同时按下 ctrl+alt+del 重启</li>\n<li>禁用 telnet 服务</li>\n</ol>\n<h3 id=\"框架漏洞-amp-常见命令注入漏洞？php-Strust2\"><a href=\"#框架漏洞-amp-常见命令注入漏洞？php-Strust2\" class=\"headerlink\" title=\"框架漏洞&amp;常见命令注入漏洞？php? Strust2 ?\"></a>框架漏洞&amp;常见命令注入漏洞？php? Strust2 ?</h3><ul>\n<li>Struts2 OGNL 注入</li>\n<li>weblogic</li>\n<li>fastjson</li>\n<li>TP5 代码执行</li>\n<li>laravel：debug mode 远程代码执行漏洞（CVE-2021-3129）</li>\n<li>Spring Expression Language SPEL 表达式注入</li>\n<li>Spring Security Oauth2 远程代码执行</li>\n<li><a href=\"https://www.freebuf.com/articles/web/286666.html\">Spring框架漏洞总结</a></li>\n</ul>\n<h3 id=\"常见安全工具、设备\"><a href=\"#常见安全工具、设备\" class=\"headerlink\" title=\"常见安全工具、设备\"></a>常见安全工具、设备</h3><p><strong>工具</strong></p>\n<ul>\n<li>端口及漏洞扫描：Namp、Masscan</li>\n<li>抓包：Wireshark，Burpsuite、Fiddler、HttpCanary</li>\n<li>Web自动化安全扫描：Nessus、Awvs、Appscan、Xray</li>\n<li>信息收集：Oneforall、hole</li>\n<li>漏洞利用：MSF、CS</li>\n<li>Webshell 管理：菜刀、蚁剑、冰蝎、哥斯拉</li>\n</ul>\n<p><strong>设备</strong></p>\n<p><a href=\"https://wiki.wgpsec.org/knowledge/base/safety.html\">网络安全设备常识</a></p>\n<p>常见的 HW 设备有：公安部网防G01、K01、360网康/网神防火墙、微步威胁情报、安恒云-Web应用防火墙（玄武盾）、默安蜜罐、知道创宇蜜罐、山石防火墙</p>\n<p><img src=\"https://s2.loli.net/2022/05/25/ie4h5RDb9mOgKcZ.png\" alt=\"image-20211224223800578\"></p>\n<p>即客户拥有物理的基础设施（自建机房、自购设备、网络）</p>\n<ul>\n<li><p>NGAF/NGFW：下一代 Web 应用防火墙（Next Generation Application Firewall，<a href=\"https://www.huaweicloud.com/zhishi/edit-582196.html\">通防火墙和下一代防火墙的区别</a>），聚合了以下功能</p>\n<ul>\n<li>IDS<ul>\n<li>HIDS：基于主机的入侵检测系统</li>\n<li>NIDS：基于网络的入侵检测系统</li>\n<li>HIDS+NIDS：基于混合数据源的入侵检测系统</li>\n</ul>\n</li>\n<li>IPS：入侵防御系统</li>\n<li>AV：反病毒系统</li>\n</ul>\n</li>\n<li><p>EDR：主机安全管理\\终端检测和响应</p>\n<p>EDR 实时监测终端上发生的各类行为，采集终端运行状态，在后端通过大数据安全分析、机器学习、沙箱分析、行为分析、机器学习等技术，提供深度持续监控、威胁检测、高级威胁分析、调查取证、事件响应处置、追踪溯源等功能，可第一时间检测并发现恶意活动，包括已知和未知威胁，并快速智能地做出响应，全面赋予终端主动、积极的安全防御能力</p>\n<p>简单来说就是给内网环境中所有主机安装管理软件终端，可以在管理平台集中管理和数据分析过滤，基本所有安全厂商都有自己的 EDR 产品</p>\n</li>\n<li><p>运维审计和管理平台（堡垒机）</p>\n</li>\n<li><p>DAS：数据库安全审计平台</p>\n</li>\n<li><p>LAS：日志审计安全平台</p>\n</li>\n<li><p>AC：上网行为管理系统</p>\n</li>\n<li><p>伪装欺骗系统（蜜罐、蜜网）</p>\n</li>\n<li><p>SIP：安全态势感知平台</p>\n<p>这个算是让整套系统性能得到提升的灵魂了，定位为客户的安全大脑，是一个集检测、可视、响应处置于一体的大数据安全分析平台。产品以大数据分析为核心，支持主流的安全设备、网络设备、操作系统等多源数据接入，利用大数据、关联分析、告警降噪等技术，实现海量数据的统一挖掘分析</p>\n</li>\n</ul>\n<p><strong>云网络</strong></p>\n<p>云网络包括私有云和公有云</p>\n<ul>\n<li>云主机安全</li>\n<li>云防火墙</li>\n<li>云堡垒机</li>\n<li>云蜜罐</li>\n<li>云 DDOS 防护</li>\n<li>等等</li>\n</ul>\n<h3 id=\"绿盟设备\"><a href=\"#绿盟设备\" class=\"headerlink\" title=\"绿盟设备\"></a>绿盟设备</h3><ul>\n<li>堡垒机 SAS-H Series，堡垒机采用“物理旁路，逻辑串联”的部署思路</li>\n<li>绿盟威胁情报云 NTI <a href=\"https://nti.nsfocus.com/\">https://nti.nsfocus.com/</a></li>\n<li>抗拒绝服务攻击系统 ADS</li>\n<li>安全和漏洞管理 AIRO</li>\n<li>网络入侵防护系统 IDPS</li>\n<li>web 应用防火墙</li>\n</ul>\n<h3 id=\"你拿到的cnvd\"><a href=\"#你拿到的cnvd\" class=\"headerlink\" title=\"你拿到的cnvd\"></a>你拿到的cnvd</h3><h3 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"**工作经历\"></a>**工作经历</h3><p>安全服务工程师</p>\n<p>参加渗透测试、地方服务、HW</p>\n<p>根据客户方要求对所给资产进行了详细细致的渗透测试。挖掘漏洞，发现漏洞的第一时间与客户方汇报，使客户方能够及时整改修补问题漏洞，防止造成漏洞危害扩大</p>\n<h3 id=\"攻防演练\"><a href=\"#攻防演练\" class=\"headerlink\" title=\"攻防演练\"></a>攻防演练</h3><p>攻防演练中担任什么角色</p>\n<h3 id=\"护网的分组和流程？\"><a href=\"#护网的分组和流程？\" class=\"headerlink\" title=\"护网的分组和流程？\"></a>护网的分组和流程？</h3><p>护网的分组是在领导小组之下分为防护检测组，综合研判组，应急溯源组。流程大致分为备战，临战，决战三个阶段</p>\n<p><strong>备战阶段</strong>，主要任务是进行两方面的操作，一是减少攻击面，即资产梳理，减少暴露面；二是排查风险点，即通过漏洞扫描，渗透测试，弱口令等进行自查</p>\n<p><strong>临战阶段</strong>，主要任务也大致可以分为两个部分，一是进行内部演练，发现疏忽处并进行相应整改；二是可以适当增加安全设备，比如WAF，IPS，IDS，SOC，堡垒机等</p>\n<p><strong>决战阶段</strong>，作为新人，主要就是坚守岗位，有应急日志就看自己能不能解决，不能就上报，服从上级安排，优化防护，持续整改</p>\n<h3 id=\"简历有护网经历，你能谈谈护网的情况吗\"><a href=\"#简历有护网经历，你能谈谈护网的情况吗\" class=\"headerlink\" title=\"简历有护网经历，你能谈谈护网的情况吗\"></a>简历有护网经历，你能谈谈护网的情况吗</h3><p>参加过护网蓝队，负责事件研判工作，主要使用 ips，ids 等设备做流量监控与日志分析工作判断安全事件是否为误判</p>\n<p>监控、研判、处置、溯源</p>\n<p>对安全管理中心发出的态势排查单进行排查，并将排查结果反馈给安全管理中心，对安全管理中心发出的封堵工单和解封工单进行对应的封堵与解封，每两小时反馈一次排查结果、设备巡检报告、封堵情况。查看呼池 DDOS 设备，记录并排查告警信息</p>\n<h3 id=\"蓝队研判\"><a href=\"#蓝队研判\" class=\"headerlink\" title=\"蓝队研判\"></a>蓝队研判</h3><p>研判工作要充分利用已有安全设备（需要提前了解客户的网络拓扑以及部署设备情况），分析其近期的设备告警，将全部流量日志（日志条件：源地址，目的地址，端口，事件名称，时间，规则 ID，发生 次数等）根据研判标准进行筛选（像挖矿、蠕虫、病毒、拒绝服务这类不太可能为攻击方发起的攻击的事件，直接过滤掉，减少告警数量），一般情况下，真实攻击不可能只持续一次，它一定是长时间、周期性、多 IP 的进行攻击</p>\n<p>对于告警结合威胁情报库如：微步、奇安信威胁情报中心、<strong>绿盟威胁情报云</strong>等对于流量日志的原 IP 地址进行分析，判断其是否为恶意攻击，推荐使用微步的插件，如果确认为攻击行为或者不能确认是否为攻击行为，进行下一步操作，在之前准备好的表格中查找 IP 是否为客户内网部署的设备，如果不是，继续进行下一步，在事件上报平台查看是否有其他人提交过，如果没有，则上报</p>\n<p>然后根据流量日志，对请求数据包和返回数据包分析判断其是否为误报，需要留意 X-Forwarded-For（简称XFF）和 x-real-ip 可以了解些 webshell 工具的流量特征，尤其是免杀 webshell，有可能不会被设备识别</p>\n<p>最后上报事件时，尽可能提供完整的截图，包括源 ip、目的ip，请求包请求体，响应包响应体等重要信息，以方便后续人员研判溯源</p>\n<blockquote>\n<p>注：不要任意忽略内网告警，适当情况下可以往前推排查时间</p>\n</blockquote>\n<h3 id=\"蓝队组成\"><a href=\"#蓝队组成\" class=\"headerlink\" title=\"蓝队组成\"></a>蓝队组成</h3><p>蓝队的主要工作包括前期安全检查、整改与加固，演习期间进行网络安全监测、预警、分析、验证、处置，后期复盘总结现有防护工作中的不足之处，为后续常态化的网络安全防护措施提供优化依据</p>\n<p>监控、研判、处置、溯源</p>\n<h3 id=\"SQL注入检测\"><a href=\"#SQL注入检测\" class=\"headerlink\" title=\"SQL注入检测\"></a>SQL注入检测</h3><p>SQL注入攻击检测可根据入侵事件发生的前后进行区分，在入侵前可以对 Payload 进行检测等方式以预防 SQL 注入攻击。在入侵检测后可以通过对数据库、IIS 日志等进行检查以进行判断</p>\n<p>传统的SQL注入检测方法通常根据经验提取特征，然后基于规则库匹配的方法来检测是否为 SQL 注入语句，其设计一般较为复杂，且规则模式更新频繁，在此采用机器学习的方式尝试对 SQL 注入语句进行检测</p>\n<h3 id=\"DDOS-CC应急思路以及如何防范\"><a href=\"#DDOS-CC应急思路以及如何防范\" class=\"headerlink\" title=\"DDOS CC应急思路以及如何防范\"></a>DDOS CC应急思路以及如何防范</h3><p>目前对于低网络层的 DDoS 攻击有一些有效的防护手段，如丢弃第一次 SYN 包，上流量防护设备，上 WAF 封禁地址等</p>\n<p>比较难缠的是第七层，第八层的 CC 攻击，它会找到目标网站上比较消耗资源的关键位置，重复发起攻击以消耗 CPU/内存/数据库/IO 等资源，目前的应付手段有：</p>\n<ol>\n<li>优化资源消耗高位置的代码</li>\n<li>增加硬件设备</li>\n<li>上云</li>\n<li>购买专业安全公司的安全服务</li>\n<li>除此之外，隐藏服务器的真实 IP、上云 WAF、CDN、 负载均衡等设备，或者暂时将域名解析到公安网警网站等也是可以作为选择方案</li>\n</ol>\n<ul>\n<li>网络设备设施<ul>\n<li>拼带宽，加大带宽，但是成本太高</li>\n<li>使用硬件防火墙</li>\n<li>选用高性能设备</li>\n</ul>\n</li>\n<li>抗 D 思想和方案<ul>\n<li>负载均衡</li>\n<li>花钱买流量清洗服务</li>\n<li>CDN：web 层，比如 cc 攻击</li>\n<li>分布式集群防御</li>\n<li>高防：防大部分攻击，udp、大型的 cc 攻击</li>\n</ul>\n</li>\n<li>预防为主<ul>\n<li>系统漏洞</li>\n<li>系统资源优化</li>\n<li>过滤不必要的服务和端口</li>\n<li>限制特定流量：检查访问来源做适当限制</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"挖矿病毒判断-amp-挖矿常见手段-amp-处理\"><a href=\"#挖矿病毒判断-amp-挖矿常见手段-amp-处理\" class=\"headerlink\" title=\"挖矿病毒判断&amp;挖矿常见手段&amp;处理\"></a>挖矿病毒判断&amp;挖矿常见手段&amp;处理</h3><p><a href=\"https://zhuanlan.zhihu.com/p/139019250\">挖矿病毒，自己搜搜</a></p>\n<p>挖矿木马占用系统资源进行挖矿行为，一般电脑会有以下特征</p>\n<ol>\n<li>系统响应缓慢</li>\n<li>CPU/显卡使用率过高</li>\n<li>内存/带宽占用高</li>\n</ol>\n<p>登录进可疑主机后，可以通过以下方式确认挖矿木马（即入侵排查流程）</p>\n<ol>\n<li>查看进程（系统命令 ps、Is 有可能被替换）</li>\n<li>检查日志、检查系统用户</li>\n<li>发现异常文件</li>\n</ol>\n<p><strong>挖矿常用手段</strong></p>\n<ol>\n<li>未授权访问或弱口令：Redis 未授权访问、Docker API 未授权访问、Hadoop Yarn 未授权访问、NFS 未授权访问、Rsync 弱口令、PostgreSQL 弱口令、Tomcat 弱口令、SSH 弱口令、Telnet 弱口令、Windows 远程桌面弱口令</li>\n<li>远程命令执行漏洞：WebLogic XML 反序列化漏洞、Jenkins 反序列化、Jboss 远程代码执行、Spring 远程代码执行、ElasticSearch 命令执行、永恒之蓝、Struts2 系列漏洞、常见 CMS 的远程命令执行漏洞</li>\n<li>新爆的高危漏洞：一般每次爆发新的高危漏洞，都会紧跟一波大规模的全网扫描利用和挖矿</li>\n</ol>\n<p><strong>清除挖矿木马</strong></p>\n<p><strong>原因排查</strong></p>\n<p>一旦发现服务器被挖矿，应该首先查看挖矿进程所属的用户，根据挖矿进程的运行用户去排查该用户下是否还运行着其它进程，确定这些进程是否有上述经常被黑客利用的漏洞。如果有常见的漏洞，则应该重点对此进行排查找到原因</p>\n<p><strong>清除木马</strong></p>\n<ol>\n<li><p>及时隔离主机</p>\n<p>部分带有蠕虫功能的挖矿木马在取得本机的控制权后，会以本机为跳板机，对同一局域网内的其他主机进行已知漏洞的扫描和进一步利用， 所以发现挖矿现象后，在不影响业务的前提下应该及时隔离受感染主机，然后进行下一步分析</p>\n</li>\n<li><p>删除文件、阻断与矿池通讯</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iptables -A INPUT -S xmr.crypto- pool.fr -j DROP\niptables -A OUTPUT -d xmr.crypto- pool.fr -j DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>清除定时任务</p>\n<p>大部分挖矿进程会在受感染主机中写入定时任务来完成程序的驻留，当安全人员只清除挖矿木马时，定时任务会再次从服务器下载挖矿进程或者直接执行挖矿脚本，导致挖矿进程清除失败</p>\n</li>\n<li><p>清除启动项</p>\n<p>有的挖矿进程为了实现长期驻留，会向系统中添加启动项来确保系统重启后挖矿进程还能重新启动，所以在清除时还应该关注启动项中的内容如果有可疑的启动项，也应该进行排查，确认是挖矿进程后，对其进行清除</p>\n</li>\n<li><p>kill 挖矿进程</p>\n<p>对于单进程挖矿程序，直接结束挖矿进程即可。但是对于大多数的挖矿进程，如果挖矿进程有守护进程，应先杀死守护进程再杀死挖矿进程，避免清除不彻底<br>在实际的清除工作中，应找到本机上运行的挖矿脚本，根据脚本的执行流程确定木马的驻留方式， 并按照顺序进行清除， 避免清除不彻底</p>\n</li>\n<li><p>清除公钥文件</p>\n<p>在用户 home 目录的 .ssh 目录下放置 authoruzed_keys 文件，从而免密登录该机器也是一种常见的保持服务器控制权的手段。在排查过程中应该查看该文件中是否有可疑公钥信息，有的话直接删除，避免攻击者再次免密登录该主机</p>\n</li>\n</ol>\n<h3 id=\"服务器存在webshell，如何处理？\"><a href=\"#服务器存在webshell，如何处理？\" class=\"headerlink\" title=\"服务器存在webshell，如何处理？\"></a>服务器存在webshell，如何处理？</h3><p>网站被植入 webshell，意味着网站存在可利用的高危漏洞，攻击者通过利用漏洞入侵网站，写入 webshell 接管网站的控制权</p>\n<ol>\n<li>及时隔离主机</li>\n<li>定位事件范围，查看文件 webshell 文件的创建时间，对 webshell 取证样本</li>\n<li>通过创建时间结合日志分析可疑行为，以及启动用户的其他进程确定漏洞</li>\n<li>清除 webshell 及残留文件，修复漏洞，参考上题</li>\n</ol>\n<h3 id=\"排查-shell-应该用什么命令来进行排查\"><a href=\"#排查-shell-应该用什么命令来进行排查\" class=\"headerlink\" title=\"排查 shell 应该用什么命令来进行排查\"></a>排查 shell 应该用什么命令来进行排查</h3><p>find 命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> /var/www/html -name <span class=\"token string\">\"*.php\"</span> <span class=\"token operator\">|</span><span class=\"token function\">xargs</span> <span class=\"token function\">egrep</span> <span class=\"token string\">'assert|eval|phpinfo\\(\\)|\\(base64_decoolcode|shell_exec|passthru|file_put_contents\\(\\.\\*\\$|base64_decode\\('</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"如何检测webshell\"><a href=\"#如何检测webshell\" class=\"headerlink\" title=\"如何检测webshell\"></a>如何检测webshell</h3><p><strong>主机层面</strong></p>\n<ul>\n<li><p>静态检测</p>\n<p>静态检测通过匹配特征码，特征值，危险函数函数来查找 webshell 的方法，只能查找已知的 webshell</p>\n</li>\n<li><p>动态检测</p>\n<p>webshell 传到服务器了，在执行函数时这些对于系统调用、系统配置、数据库、文件的操作动作都是可以作为判断依据</p>\n</li>\n<li><p>日志检测</p>\n<p>使用 webshell 一般不会在系统日志中留下记录，但是会在网站的 web 日志中留下 webshell 页面的访问数据和数据提交记录</p>\n</li>\n<li><p>语法检测</p>\n<p>语法语义分析形式，是根据 php 语言扫描编译的实现方式，进行剥离代码、注释，分析变量、函数、字符串、语言结构的分析方式，来实现关键危险函数的捕捉方式这样可以完美解决漏报的情况但误报上</p>\n</li>\n</ul>\n<p><strong>流量层面</strong></p>\n<h3 id=\"Webshell管理工具的流量特征\"><a href=\"#Webshell管理工具的流量特征\" class=\"headerlink\" title=\"Webshell管理工具的流量特征\"></a>Webshell管理工具的流量特征</h3><p><a href=\"https://www.freebuf.com/articles/web/213905.html\">冰蝎动态二进制加密WebShell特征分析</a></p>\n<p><a href=\"https://www.freebuf.com/column/204796.html\">常见WebShell客户端的流量特征及检测思路</a></p>\n<p><strong>菜刀</strong></p>\n<p>菜刀 webshell 只使用了 url 编码 + base64 编码</p>\n<p>shell 特征就是传输参数名为 z0，还存在<code>int_set(\"display_erros\",\"0\")</code>字符串特征</p>\n<p><strong>蚁剑</strong></p>\n<p>默认的蚁剑 shell，连接时会请求两次，其请求体只是经过 url 编码，其流量中也存在和蚁剑一样的代码</p>\n<p>第一次请求，关闭报错和 magic_quotes，接下来去获取主机的信息</p>\n<p>第二次请求，会把主机目录列出来</p>\n<p><strong>冰蝎2.0</strong></p>\n<p>使用 aes 加密发起三次请求</p>\n<p>第一次请求服务端产生密钥写入 session，session 和当前会话绑定，不同的客户端的密钥也是不同的</p>\n<p>第二次请求是为了获取 key，第三次使用 key 的 aes 加密进行通信</p>\n<p><strong>冰蝎3.0</strong></p>\n<p>使用 aes 加密发起两次请求</p>\n<p>3.0 分析流量发现相比 2.0 少了动态密钥的获取的请求，不再使用随机生成 key，改为取连接密码的 md5 加密值的前 16 位作为密钥</p>\n<p>一次请求为判断是否可以建立连接，少了俩次 get 获取冰蝎动态密钥的行为，第二次发送 phpinfo 等代码执行，获取网站的信息</p>\n<p><strong>哥斯拉</strong></p>\n<p>支持 n 种加密</p>\n<p>采用了和冰蝎 3.0 一样的密钥交换方式，哥斯拉建立连接时会发起三次请求，第一次请求数据超级长，建立 session，第二三次请求确认连接</p>\n<h3 id=\"常见端口漏洞\"><a href=\"#常见端口漏洞\" class=\"headerlink\" title=\"常见端口漏洞\"></a>常见端口漏洞</h3><p><strong>数据库类（扫描弱口令）</strong></p>\n<ul>\n<li>1433：MSSQL</li>\n<li>1521：Oracle</li>\n<li>3306：Mysql</li>\n<li>5432：PostgreSQL</li>\n</ul>\n<p><strong>特殊服务类（未授权/命令执行）</strong></p>\n<ul>\n<li>443：ssl 心脏滴血</li>\n<li>873：Rsync 未授权</li>\n<li>5984：CouchDB http：//xxx:5984/_utils/</li>\n<li>6379：Redis 未授权</li>\n<li>7001、7002：Weblogic 默认弱口令</li>\n<li>8088：Hadoop Yarn 资源管理系统 REST API 存在未授权</li>\n<li>8161：Apache ActiveMQ 未授权、弱口令，put 文件上传，move 文件移动</li>\n<li>9200、9300：elasticsearch 命令执行</li>\n<li>11211：Memcache 未授权，telnet ip 就可以获得服务器敏感信息</li>\n<li>27017、27018：Mongodb 未授权</li>\n<li>50000：SAP 命令执行</li>\n<li>50070、50030 Hadoop 未授权访问</li>\n</ul>\n<p><strong>常用端口类（弱口令/端口爆破）</strong></p>\n<ul>\n<li>21：FTP 弱口令，匿名 anonymous/空登录，以及 ms12-073</li>\n<li>25：SMTP 简单邮件传输服务器端口</li>\n<li>23：Telnet 的端口，Telnet 是一种可以远程登录并管理远程机器的服务</li>\n<li>22：ssh 端口，PcAnywhere 建立 TCP 和这一端口的连接可能是为了寻找 ssh，这一服务有许多弱点</li>\n<li>53：dns 端口</li>\n<li>139：属于 TCP 协议，是为 NetBIOS Session Service 提供的，主要提供 Windows 文件和打印机共享以及 Unix 中的 Samba 服务</li>\n<li>445：网络共享 smb 服务，尝试利用 ms08067，ms17010 等以及 IPC$ 攻击手段</li>\n<li>2601、2604：zebra 路由，默认密码 zebra</li>\n</ul>\n<h3 id=\"三次握手与四次挥手\"><a href=\"#三次握手与四次挥手\" class=\"headerlink\" title=\"三次握手与四次挥手\"></a>三次握手与四次挥手</h3><p><a href=\"https://www.eet-china.com/mp/a44399.html\">https://www.eet-china.com/mp/a44399.html</a></p>\n<p>背景：TCP 位于传输层，作用是提供可靠的字节流服务，为了准确无误地将数据送达目的地，TCP 协议采纳三次握手四次挥手策略</p>\n<p><strong>三次握手（three-way handshaking）</strong></p>\n<p>TCP 三次握手，其实就是 TCP 应用在发送数据前，通过 TCP 协议跟通信对方协商好连接信息，建立起 TCP 的连接关系</p>\n<ol>\n<li>第一次握手：客户端发送 <code>SYN</code> 报文，并进入 <code>SYN_SENT</code> 状态，等待服务器的确认</li>\n<li>第二次握手：服务器收到 <code>SYN</code> 报文，需要给客户端发送 <code>ACK</code> 确认报文，同时服务器也要向客户端发送一个 <code>SYN</code> 报文，所以也就是向客户端发送 <code>SYN + ACK</code> 报文，此时服务器进入 <code>SYN_RCVD</code> 状态</li>\n<li>第三次握手：客户端收到 <code>SYN + ACK</code> 报文，向服务器发送确认包，客户端进入 <code>ESTABLISHED</code> 状态。待服务器收到客户端发送的 <code>ACK</code> 包也会进入 <code>ESTABLISHED</code> 状态，完成三次握手</li>\n</ol>\n<p><strong>四次挥手（Four-Way-Wavehand）</strong></p>\n<p>当我们的应用程序不需要数据通信了，就会发起断开 TCP 连接。建立一个连接需要三次握手，而终止一个连接需要经过四次挥手</p>\n<ol>\n<li>第一次挥手：客户端发送一个 <code>FIN</code>，用来关闭客户端到服务端的数据传送，客户端进入 <code>FIN_WAIT_1</code> 状态</li>\n<li>第二次挥手：服务端收到 <code>FIN</code> 后，发送一个 <code>ACK</code> 给客户端，确认序号为收到序号 +1（与SYN相同，一个FIN占用一个序号），服务端进入 <code>CLOSE_WAIT</code> 状态</li>\n<li>第三次挥手：服务端发送一个 <code>FIN</code>，用来关闭服务端到 客户端的数据传送，服务端进入 <code>LAST_ACK</code> 状态</li>\n<li>第四次挥手：客户端收到 <code>FIN</code> 后，客户端进入 <code>TIME_WAIT</code> 状态，接着发送一个 <code>ACK</code> 给服务端，确认序号为收到序号 +1，服务端进入 <code>CLOSED</code> 状态，完成四次挥手</li>\n</ol>\n<h3 id=\"一个大范围影响的0day被曝光，作为甲方安全工程师，应该如何处理-★★\"><a href=\"#一个大范围影响的0day被曝光，作为甲方安全工程师，应该如何处理-★★\" class=\"headerlink\" title=\"一个大范围影响的0day被曝光，作为甲方安全工程师，应该如何处理(★★)\"></a>一个大范围影响的0day被曝光，作为甲方安全工程师，应该如何处理(★★)</h3><ol>\n<li>首先是评估 0day 对自身系统的影响（这部分评估需要根据漏洞利用的利用点、是否需要交互、是否会影响系统的 CIA，是否有在野利用 poc，影响资产是否暴露在公网等很多因素决定，详情可以参考 CVSS ）</li>\n<li>如果确定有影响的话且有 poc，第一件事是先分析 poc 执行后会在什么地方留下痕迹，我们有什么样的设备去采集这些痕迹所留下的数据，比如说 ntlm relay 这种，可以考虑从 Windows 事件日志当中 event_id 等于 4769 的事件入手编写对应的规则，这样的话可以利用 SIEM 或者实时日志分析平台跑起来，可以建立起初步的感知防线，后期触发告警，人肉运营也可以快速止损</li>\n<li>日常建立完整的纵深防御体系，不要依赖于某一道防线</li>\n</ol>\n<h3 id=\"服务器操作系统的安全防范？\"><a href=\"#服务器操作系统的安全防范？\" class=\"headerlink\" title=\"服务器操作系统的安全防范？\"></a>服务器操作系统的安全防范？</h3><ol>\n<li>停止运行不需要的软件（很可能成为外部攻击的入口）</li>\n<li>定期实施漏洞防范措施（选定软件时确认软件的升级状况，确定打补丁方式，关注各种漏洞信息，确认漏洞后调查补丁状况以及防范对策，并制定对应计划）</li>\n<li>对不需要对外公开的端口或者服务加以访问限制（通过端口扫描确认各端口服务状态）</li>\n<li>提高认证强度</li>\n</ol>\n<h3 id=\"怎么发现有没有被攻击\"><a href=\"#怎么发现有没有被攻击\" class=\"headerlink\" title=\"怎么发现有没有被攻击\"></a>怎么发现有没有被攻击</h3><p>攻击判断可以建立在设备的基础上，利用设备的告警，如果没有设备的话可以参考以下</p>\n<p>网站被攻击：网站被跳转到赌博网站，网站首页被篡改，百度快照被改，网站被植入 webshell 脚本木马，网站被 DDOS、CC 压力攻击</p>\n<p>服务器被黑：服务器系统中木马病毒，服务器管理员账号密码被改，服务器被攻击者远程控制，服务器的带宽向外发包，服务器被流量攻击，ARP攻击（目前这种比较少了，现在都是基于阿里云，百度云，腾讯云等云服务器）</p>\n<p>对登录记录、系统日志、web 日志等进行分析</p>\n<h2 id=\"⬆️细节题\"><a href=\"#⬆️细节题\" class=\"headerlink\" title=\"⬆️细节题\"></a>⬆️细节题</h2><h3 id=\"你能大概说一下，比如数据包或者日志，你的分析思路是什么，以及你会用到哪些工具或者那些网站进行查询？\"><a href=\"#你能大概说一下，比如数据包或者日志，你的分析思路是什么，以及你会用到哪些工具或者那些网站进行查询？\" class=\"headerlink\" title=\"你能大概说一下，比如数据包或者日志，你的分析思路是什么，以及你会用到哪些工具或者那些网站进行查询？\"></a>你能大概说一下，比如数据包或者日志，你的分析思路是什么，以及你会用到哪些工具或者那些网站进行查询？</h3><p>用流量监测的安全设备，比如天眼，查看报文，分析报文里和 host 和网站目录路径，查看是否可疑，使用微步查询 host 是否为恶意，使用 wireshark 对数据包深度分析</p>\n<p>看一下请求的网站路径，源 IP 与目的 IP 地址，host 字段的值以及发包内容等</p>\n<p>工具有 wireshark，网站的话微步在线等威胁情报中心</p>\n<h3 id=\"文件上传和命令执行，有看过相关日志吗\"><a href=\"#文件上传和命令执行，有看过相关日志吗\" class=\"headerlink\" title=\"文件上传和命令执行，有看过相关日志吗\"></a>文件上传和命令执行，有看过相关日志吗</h3><p>文件：可能在系统有上传功能或者有文本编辑器，看一下是否有 base64 加密或者 url 加密，解码验证一下是否有恶意代码</p>\n<p>系统日志：有没有 web 容器做了一些危险行为，比如 bash 反弹 shell 等</p>\n<p>网络应用日志：有没有异常的网站文件，类似 webshell 等，<strong>就有可能是命令执行</strong></p>\n<h3 id=\"windows日志分析工具\"><a href=\"#windows日志分析工具\" class=\"headerlink\" title=\"windows日志分析工具\"></a>windows日志分析工具</h3><p>Log Parser、LogParser Lizard、Event Log Explorer</p>\n<h3 id=\"Linux日志分析技巧命令\"><a href=\"#Linux日志分析技巧命令\" class=\"headerlink\" title=\"Linux日志分析技巧命令\"></a>Linux日志分析技巧命令</h3><ol>\n<li><p>定位有多少IP在爆破主机的root帐号：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token string\">\"Failed password for root\"</span> /var/log/secure <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print $11}'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> -c <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -nr <span class=\"token operator\">|</span> <span class=\"token function\">more</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>定位有哪些IP在爆破：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token string\">\"Failed password\"</span> /var/log/secure<span class=\"token operator\">|</span><span class=\"token function\">grep</span> -E -o <span class=\"token string\">\"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\"</span><span class=\"token operator\">|</span><span class=\"token function\">uniq</span> -c<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>爆破用户名字典是什么？</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token string\">\"Failed password\"</span> /var/log/secure<span class=\"token operator\">|</span>perl -e <span class=\"token string\">'while($_=&lt;&gt;){ /for(.*?) from/; print\"$1\\n\";}'</span><span class=\"token operator\">|</span><span class=\"token function\">uniq</span> -c<span class=\"token operator\">|</span><span class=\"token function\">sort</span> -nr<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>登录成功的IP有哪些</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token string\">\"Accepted \"</span> /var/log/secure <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print $11}'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> -c <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -nr <span class=\"token operator\">|</span> <span class=\"token function\">more</span>\n登录成功的日期、用户名、IP：\n<span class=\"token function\">grep</span> <span class=\"token string\">\"Accepted \"</span> /var/log/secure <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print $1,$2,$3,$9,$11}'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>增加一个用户kali日志：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Jul <span class=\"token number\">10</span> 00:12:15 localhost useradd<span class=\"token punctuation\">[</span><span class=\"token number\">2382</span><span class=\"token punctuation\">]</span>: new group: <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span>kali, <span class=\"token assign-left variable\">GID</span><span class=\"token operator\">=</span><span class=\"token number\">1001</span>\nJul <span class=\"token number\">10</span> 00:12:15 localhost useradd<span class=\"token punctuation\">[</span><span class=\"token number\">2382</span><span class=\"token punctuation\">]</span>: new user: <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span>kali, <span class=\"token assign-left variable\"><span class=\"token environment constant\">UID</span></span><span class=\"token operator\">=</span><span class=\"token number\">1001</span>, <span class=\"token assign-left variable\">GID</span><span class=\"token operator\">=</span><span class=\"token number\">1001</span>,\n<span class=\"token assign-left variable\">home</span><span class=\"token operator\">=</span>/home/kali\n, <span class=\"token assign-left variable\">shell</span><span class=\"token operator\">=</span>/bin/bash\nJul <span class=\"token number\">10</span> 00:12:58 localhost passwd: pam_unix<span class=\"token punctuation\">(</span>passwd:chauthtok<span class=\"token punctuation\">)</span>: password changed <span class=\"token keyword\">for</span> kali\n<span class=\"token comment\">#grep \"useradd\" /var/log/secure</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>删除用户kali日志：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Jul <span class=\"token number\">10</span> 00:14:17 localhost userdel<span class=\"token punctuation\">[</span><span class=\"token number\">2393</span><span class=\"token punctuation\">]</span>: delete user <span class=\"token string\">'kali'</span>\nJul <span class=\"token number\">10</span> 00:14:17 localhost userdel<span class=\"token punctuation\">[</span><span class=\"token number\">2393</span><span class=\"token punctuation\">]</span>: removed group <span class=\"token string\">'kali'</span> owned by <span class=\"token string\">'kali'</span>\nJul <span class=\"token number\">10</span> 00:14:17 localhost userdel<span class=\"token punctuation\">[</span><span class=\"token number\">2393</span><span class=\"token punctuation\">]</span>: removed shadow group <span class=\"token string\">'kali'</span> owned by <span class=\"token string\">'kali'</span>\n<span class=\"token comment\"># grep \"userdel\" /var/log/secure</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>su切换用户：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Jul <span class=\"token number\">10</span> 00:38:13 localhost su: pam_unix<span class=\"token punctuation\">(</span>su-l:session<span class=\"token punctuation\">)</span>: session opened <span class=\"token keyword\">for</span> user good by\nroot<span class=\"token punctuation\">(</span>uid<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nsudo授权执行:\n<span class=\"token function\">sudo</span> -l\nJul <span class=\"token number\">10</span> 00:43:09 localhost sudo: good <span class=\"token builtin class-name\">:</span> <span class=\"token assign-left variable\">TTY</span><span class=\"token operator\">=</span>pts/4 <span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PWD</span></span><span class=\"token operator\">=</span>/home/good <span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">USER</span></span><span class=\"token operator\">=</span>root <span class=\"token punctuation\">;</span>\n<span class=\"token assign-left variable\">COMMAND</span><span class=\"token operator\">=</span>/sbin/shutdown -r now<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"给你一个比较大的日志，应该如何分析\"><a href=\"#给你一个比较大的日志，应该如何分析\" class=\"headerlink\" title=\"给你一个比较大的日志，应该如何分析\"></a>给你一个比较大的日志，应该如何分析</h3><ul>\n<li>攻击规则匹配，通过正则匹配日志中的攻击请求</li>\n<li>统计方法，统计请求出现次数，次数少于同类请求平均次数则为异常请求</li>\n<li>白名单模式，为正常请求建立白名单，不在名单范围内则为异常请求</li>\n<li>HMM 模型，类似于白名单，不同点在于可对正常请求自动化建立模型，从而通过正常模型找出不匹配者则为异常请求</li>\n<li>借助日志分析工具，如 LogForensics 腾讯实验室 <a href=\"https://security.tencent.com/index.php/opensource/detail/15\">https://security.tencent.com/index.php/opensource/detail/15</a></li>\n</ul>\n<h3 id=\"Windows在应急响应中的安全日志以及对应场景\"><a href=\"#Windows在应急响应中的安全日志以及对应场景\" class=\"headerlink\" title=\"Windows在应急响应中的安全日志以及对应场景\"></a>Windows在应急响应中的安全日志以及对应场景</h3><h3 id=\"设备误报如何处理\"><a href=\"#设备误报如何处理\" class=\"headerlink\" title=\"设备误报如何处理\"></a>设备误报如何处理</h3><p>（日志）</p>\n<h3 id=\"Windows和Linux的日志文件放在哪里\"><a href=\"#Windows和Linux的日志文件放在哪里\" class=\"headerlink\" title=\"Windows和Linux的日志文件放在哪里\"></a>Windows和Linux的日志文件放在哪里</h3><ul>\n<li><p>Windows 主要有以下三类日志记录系统事件：应用程序日志、系统日志和安全日志</p>\n<p>系统日志：<code> %SystemRoot%\\System32\\Winevt\\Logs\\System.evtx</code></p>\n<p>应用程序日志：<code>%SystemRoot%\\System32\\Winevt\\Logs\\Application.evtx</code></p>\n<p>安全日志：<code>%SystemRoot%\\System32\\Winevt\\Logs\\Security.evtx</code></p>\n</li>\n<li><p>Linux</p>\n<p>日志默认存放位置：<code>/var/log/</code><br>查看日志配置情况：more /etc/rsyslog.conf</p>\n</li>\n</ul>\n<h3 id=\"常见中间件的配置文件路径\"><a href=\"#常见中间件的配置文件路径\" class=\"headerlink\" title=\"常见中间件的配置文件路径\"></a>常见中间件的配置文件路径</h3><ul>\n<li>apache：<code>/etc/httpd/conf</code></li>\n<li>nginx：<code>/etc/nginx</code></li>\n<li>iis7：<code>C:\\Windows\\System32\\inetsrv\\config\\</code></li>\n</ul>\n<h3 id=\"如何查看系统内存-shell\"><a href=\"#如何查看系统内存-shell\" class=\"headerlink\" title=\"如何查看系统内存 shell\"></a>如何查看系统内存 shell</h3><ul>\n<li>文章汇总：<a href=\"https://blog.csdn.net/shuteer_xu/article/details/117458250\">link</a></li>\n<li>查杀内存马：<a href=\"https://gv7.me/articles/2020/kill-java-web-filter-memshell/\">link</a></li>\n<li>php、python、java内存马分析：<a href=\"https://www.geekby.site/2021/09/webshell%E5%86%85%E5%AD%98%E9%A9%AC%E5%88%86%E6%9E%90/\">link</a></li>\n</ul>\n<h3 id=\"Java-内存马排查\"><a href=\"#Java-内存马排查\" class=\"headerlink\" title=\"Java 内存马排查\"></a>Java 内存马排查</h3><p><a href=\"https://www.freebuf.com/articles/web/274466.html\">https://www.freebuf.com/articles/web/274466.html</a></p>\n<p>如果我们通过检测工具或者其他手段发现了一些内存webshell的痕迹，需要有一个排查的思路来进行跟踪分析，也是根据各类型的原理，列出一个排查思路。</p>\n<blockquote>\n<p>如果是jsp注入，日志中排查可疑jsp的访问请求。</p>\n<p>如果是代码执行漏洞，排查中间件的error.log，查看是否有可疑的报错，判断注入时间和方法</p>\n<p>根据业务使用的组件排查是否可能存在java代码执行漏洞以及是否存在过webshell，排查框架漏洞，反序列化漏洞。</p>\n<p>如果是servlet或者spring的controller类型，根据上报的webshell的url查找日志（日志可能被关闭，不一定有），根据url最早访问时间确定被注入时间。</p>\n<p>如果是filter或者listener类型，可能会有较多的404但是带有参数的请求，或者大量请求不同url但带有相同的参数，或者页面并不存在但返回200</p>\n</blockquote>\n<h3 id=\"如何修改WEB端口？如果不能修改端口还有什么利用方法？\"><a href=\"#如何修改WEB端口？如果不能修改端口还有什么利用方法？\" class=\"headerlink\" title=\"如何修改WEB端口？如果不能修改端口还有什么利用方法？\"></a>如何修改WEB端口？如果不能修改端口还有什么利用方法？</h3><p>修改 web 端口：修改中间件配置文件中的 web 服务端口即可</p>\n<p>不能修改的话可以使用端口映射，使用 nginx 反向代理也可以</p>\n<h3 id=\"获得文件读取漏洞，通常会读哪些文件，Linux和windows都谈谈\"><a href=\"#获得文件读取漏洞，通常会读哪些文件，Linux和windows都谈谈\" class=\"headerlink\" title=\"获得文件读取漏洞，通常会读哪些文件，Linux和windows都谈谈\"></a>获得文件读取漏洞，通常会读哪些文件，Linux和windows都谈谈</h3><p><strong>通用</strong></p>\n<ul>\n<li>找 Web 应用的配置文件，指不定有外联数据库</li>\n<li>找 Web 中间件的配置文件，指不定有 Tomcat 配置界面的用户密码</li>\n<li>找系统文件</li>\n</ul>\n<p><strong>linux</strong></p>\n<ul>\n<li><p><code>etc/passwd、etc/shadow</code>直接读密码</p>\n</li>\n<li><p><code>/etc/hosts</code> # 主机信息</p>\n</li>\n<li><p><code>/root/.bashrc</code> # 环境变量</p>\n</li>\n<li><p><code>/root/.bash_history</code> # 还有root外的其他用户</p>\n</li>\n<li><p><code>/root/.viminfo</code> # vim 信息</p>\n</li>\n<li><p><code>/root/.ssh/id_rsa</code> # 拿私钥直接ssh</p>\n</li>\n<li><p><code>/proc/xxxx/cmdline</code> # 进程状态枚举 xxxx 可以为0000-9999 使用burpsuite</p>\n</li>\n<li><p>数据库 config 文件</p>\n</li>\n<li><p>web 日志 <code>access.log, error.log</code></p>\n</li>\n<li><p>ssh 日志</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">/root/.ssh/id_rsa\n/root/.ssh/id_rsa.pub\n/root/.ssh/authorized_keys\n/etc/ssh/sshd_config\n/var/log/secure\n/etc/sysconfig/network-scripts/ifcfg-eth0\n/etc/syscomfig/network-scripts/ifcfg-eth1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p><code>/var/lib/php/sess_PHPSESSID</code> # 非常规问题 session 文件( 参考 平安科技的一道session包含 <a href=\"http://www.jianshu.com/p/2c24ea34566b\">http://www.jianshu.com/p/2c24ea34566b</a>)</p>\n</li>\n</ul>\n<p><strong>windows</strong></p>\n<ul>\n<li><code>C:\\boot.ini</code> //查看系统版本</li>\n<li><code>C:\\Windows\\System32\\inetsrv\\MetaBase.xml</code> //IIS 配置文件</li>\n<li><code>C:\\Windows\\repair\\sam</code> //存储系统初次安装的密码</li>\n<li><code>C:\\Program Files\\mysql\\my.ini</code> //Mysql 配置</li>\n<li><code>C:\\Program Files\\mysql\\data\\mysql\\user.MY D</code> //Mysql root</li>\n<li><code>C:\\Windows\\php.ini</code> //php 配置信息</li>\n<li><code>C:\\Windows\\my.ini</code> //Mysql 配置信息</li>\n</ul>\n<h3 id=\"如何分析被代理出来的数据流\"><a href=\"#如何分析被代理出来的数据流\" class=\"headerlink\" title=\"如何分析被代理出来的数据流\"></a>如何分析被代理出来的数据流</h3><p>分析数据包请求头中的 xff、referer 等收集有用的信息</p>\n<p><a href=\"https://www.freebuf.com/articles/web/245585.html\">基于网络欺骗与浏览器指纹的WEB攻击溯源</a></p>\n<h3 id=\"windows端口进程间转换\"><a href=\"#windows端口进程间转换\" class=\"headerlink\" title=\"windows端口进程间转换\"></a>windows端口进程间转换</h3><p>端口-&gt;进程</p>\n<ol>\n<li><code>netstat -ano | findstr “port”</code>查看目前的网络连接，定位可疑的 ESTABLISHED</li>\n<li>根据<code>netstat </code>定位出的 pid，再通过<code>tasklist</code>命令进行进程定位<code> tasklist | findstr “PID”</code></li>\n</ol>\n<p><img src=\"https://s2.loli.net/2022/05/25/NVM7Jl4bv8sqyiK.png\" alt=\"image-20220103194348302\"></p>\n<h3 id=\"查看进程对应的程序位置\"><a href=\"#查看进程对应的程序位置\" class=\"headerlink\" title=\"查看进程对应的程序位置\"></a>查看进程对应的程序位置</h3><p>任务管理器–选择对应进程–右键打开文件位置运行输入 wmic，cmd界面 输入 process</p>\n<p>查看 Windows 服务所对应的端口</p>\n<p><code>%system%/system32/drivers/etc/services</code>（一般 %system% 就是 C:\\Windows）</p>\n<h3 id=\"查看windows进程的方法\"><a href=\"#查看windows进程的方法\" class=\"headerlink\" title=\"查看windows进程的方法\"></a>查看windows进程的方法</h3><ol>\n<li>开始 – 运行 – 输入<code>msinfo32</code> 命令，依次点击 “软件环境 – 正在运行任务” 就可以查看到进程的详细信息，比如进程路径、进程ID、文件创建日期以及启动时间等</li>\n<li>打开D盾_web查杀工具，进程查看，关注没有签名信息的进程</li>\n<li>通过微软官方提供的 Process Explorer 等工具进行排查</li>\n</ol>\n<p>查看<strong>可疑的进程</strong>及其子进程。可以通过观察以下内容：</p>\n<ul>\n<li>没有签名验证信息的进程</li>\n<li>没有描述信息的进程</li>\n<li>进程的属主</li>\n<li>进程的路径是否合法</li>\n<li>CPU 或内存资源占用长时间过高的进程</li>\n</ul>\n<h3 id=\"你能说明文件上传的原理吗？\"><a href=\"#你能说明文件上传的原理吗？\" class=\"headerlink\" title=\"你能说明文件上传的原理吗？\"></a>你能说明文件上传的原理吗？</h3><ul>\n<li>PHP：如果系统中存在可以上传文件的功能点，就可以上传后门脚本文件，通过一些方法绕过上传限制，如果能访问后门的的话，系统存在文件上传漏洞，可以借助后门执行命令</li>\n<li>Java：上传 jsp 代码</li>\n<li>Asp/Aspx</li>\n<li>Python：因为脚本需要译后生成 pyc 字节码文件，所以不存在文件上传</li>\n</ul>\n<h3 id=\"文件上传攻击特征？\"><a href=\"#文件上传攻击特征？\" class=\"headerlink\" title=\"文件上传攻击特征？\"></a>文件上传攻击特征？</h3><p>能够上传文件的接口，应用程序对用户上传文件类型不校验或者校验不严格可绕过，导致任意类型文件上传，攻击者可上传 webshell 拿到服务器权限，在这个过程中攻击者必然会上传恶意脚本文件</p>\n<h3 id=\"文件上传加固方法？\"><a href=\"#文件上传加固方法？\" class=\"headerlink\" title=\"文件上传加固方法？\"></a>文件上传加固方法？</h3><ol>\n<li>后端限制文件上传白名单，头像不允许上传 svg</li>\n<li>上传后文件随机重命名，不要输出保存文件位置</li>\n<li>图片文件可以二次渲染，使用对象存储 oss</li>\n<li>文件目录取消执行权限，PHP 设置 basedir</li>\n</ol>\n<h3 id=\"用过Nmap扫描工具吗\"><a href=\"#用过Nmap扫描工具吗\" class=\"headerlink\" title=\"用过Nmap扫描工具吗\"></a>用过Nmap扫描工具吗</h3><p>nmap 扫描基础命令</p>\n<ul>\n<li>-sT TCP (全)连接扫描，准确但留下大量日志记录</li>\n<li>-sS TCP SYN (半)扫描，速度较快，不会留下日志</li>\n<li>-sN null 扫描，标志位全为 0，不适用 Windows</li>\n<li>-sF FIN 扫描，标志位 FIN=1，不适用 Windows</li>\n<li>-O 查看目标主机系统版本</li>\n<li>-sV 探测服务版本</li>\n<li>-A 全面扫描</li>\n</ul>\n<p><img src=\"https://s2.loli.net/2022/05/25/rdcNnQ5zoyEqHhK.png\" alt=\"img\"></p>\n<h3 id=\"你做过渗透测试的工作吗？\"><a href=\"#你做过渗透测试的工作吗？\" class=\"headerlink\" title=\"你做过渗透测试的工作吗？\"></a>你做过渗透测试的工作吗？</h3><p>首先信息收集，收集子域名、Whois、C段、旁站、Web 系统指纹识别，然后测试 web 系统的漏洞</p>\n<h3 id=\"暴力破解加固方法？\"><a href=\"#暴力破解加固方法？\" class=\"headerlink\" title=\"暴力破解加固方法？\"></a>暴力破解加固方法？</h3><ol>\n<li>添加强度较高的验证码，不易被破解</li>\n<li>修改密码设置规则，提高用户的密码强度</li>\n<li>同一账号登陆次数锁定，生成锁定日志</li>\n<li>定期排查弱口令</li>\n</ol>\n<h3 id=\"Sql注入加固措施？\"><a href=\"#Sql注入加固措施？\" class=\"headerlink\" title=\"Sql注入加固措施？\"></a>Sql注入加固措施？</h3><p>对于输入的字符进行过滤</p>\n<p>使用 PDO 预编译语句处理</p>\n<h3 id=\"一台主机在内网进行横向攻击，你应该怎么做？\"><a href=\"#一台主机在内网进行横向攻击，你应该怎么做？\" class=\"headerlink\" title=\"一台主机在内网进行横向攻击，你应该怎么做？\"></a>一台主机在内网进行横向攻击，你应该怎么做？</h3><p>确定攻击来源，是不是员工内部误操作，比如询问运维是否有自动化轮训脚本</p>\n<p>如果没有，确定是攻击，结合时间点，根据设备信息，看一下安全事件，进程，流量</p>\n<p>找到问题主机，开始应急响应流程：准备、检测、遏制、根除、恢复、跟踪，具体的操作要交给现场运维去处理</p>\n<h3 id=\"你还用过其他态势感知的产品吗？\"><a href=\"#你还用过其他态势感知的产品吗？\" class=\"headerlink\" title=\"你还用过其他态势感知的产品吗？\"></a>你还用过其他态势感知的产品吗？</h3><p>ips，ids，hids，堡垒机等</p>\n<h3 id=\"命令行工具用的什么比较多？\"><a href=\"#命令行工具用的什么比较多？\" class=\"headerlink\" title=\"命令行工具用的什么比较多？\"></a>命令行工具用的什么比较多？</h3><p>xshell、xftp、finalshell</p>\n<h3 id=\"你用过微步吗？\"><a href=\"#你用过微步吗？\" class=\"headerlink\" title=\"你用过微步吗？\"></a>你用过微步吗？</h3><p>微步在线是一个威胁情报中心，可以通过 ip 或域名查询其是不是恶意的，对于判断恶意链接具有一定的参考性，他还有一个插件可以在页面选中就能进行查询，还是一个比较好用的工具</p>\n<h3 id=\"什么是跨域，JSONP与CORS\"><a href=\"#什么是跨域，JSONP与CORS\" class=\"headerlink\" title=\"什么是跨域，JSONP与CORS\"></a>什么是跨域，JSONP与CORS</h3><p><strong>同源策略</strong></p>\n<p>同源策略：域名、协议、端口均相同</p>\n<p>浏览器执行 JavaScript 脚本时，会检查这个脚本属于那个页面，如果不是同源页面，就不会被执行</p>\n<p><strong>什么是跨域？</strong></p>\n<p>跨域：指的是浏览器不能执行其它网站的脚本，它是由浏览器的同源策略造成的，是浏览器的安全限制！</p>\n<p><strong>JSONP跨域</strong></p>\n<p>利用 js script 标签中 src 属性可以跨域的特性，使用 callback 参数的函数名来接收数据</p>\n<p>只支持 GET 请求，不支持 POST 等其它请求，也不支持复杂请求，只支持简单请求</p>\n<p><strong>CORS跨域</strong></p>\n<p>支持所有的请求，包含 GET、POST、OPTOIN、PUT、DELETE 等既支持复杂请求，也支持简单请求</p>\n<p>JSONP 与 CORS 的使用目的相同，并且都需要服务端和客户端同时支持，但 CORS 的功能更加强大</p>\n<p><strong>JSONP和CORS的优缺点</strong></p>\n<ol>\n<li>JSONP 的主要优势在于对浏览器的支持较好；虽然目前主流浏览器都支持 CORS，但 IE9 及以下不支持 CORS</li>\n<li>JSONP 只能用于获取资源（即只读，类似于 GET 请求）；CORS 支持所有类型的 HTTP 请求，功能完善</li>\n<li>JSONP 只会发一次请求；而对于复杂请求，CORS 会发两次请求</li>\n</ol>\n<p><strong>应用场景</strong></p>\n<p>如果需要兼容IE低版本浏览器，无疑，JSONP</p>\n<p>如果需要对服务端资源进行操作，无疑，CORS</p>\n<p>其他情况的话，根据自己的对需求的分析来决定和使用</p>\n<h3 id=\"http状态与无连接\"><a href=\"#http状态与无连接\" class=\"headerlink\" title=\"http状态与无连接\"></a>http状态与无连接</h3><p><strong>无连接</strong></p>\n<ol>\n<li>每一个访问都是无连接，服务器挨个处理访问队列里的访问，处理完一个就关闭连接，这事儿就完了，然后处理下一个新的</li>\n<li>无连接的含义是限制每次连接只处理一个请求服务器处理完客户的请求，并收到客户的应答后，即断开连接</li>\n</ol>\n<p><strong>无状态</strong></p>\n<ol>\n<li>协议对于事务处理没有记忆能力</li>\n<li>对同一个 url 请求没有上下文关系</li>\n<li>每次的请求都是独立的，它的执行情况和结果与前面的请求和之后的请求是无直接关系的，它不会受前面的请求应答情况直接影响，也不会直接影响后面的请求应答情况</li>\n<li>服务器中没有保存客户端的状态，客户端必须每次带上自己的状态去请求服务器</li>\n</ol>\n<h3 id=\"什么是路由表\"><a href=\"#什么是路由表\" class=\"headerlink\" title=\"什么是路由表\"></a>什么是路由表</h3><p>在计算机网络中，路由表（routing table）或称路由择域信息库（RIB, Routing Information Base），是一个存储在路由器或者联网计算机中的电子表格（文件）或类数据库路由表存储着指向特定网络地址的路径（在有些情况下，还记录有路径的路由度量值）路由表中含有网络周边的拓扑信息路由表建立的主要目标是为了实现路由协议和静态路由选择</p>\n<p>每个路由器中都有一个路由表和 FIB(Forward Information Base) 表：路由表用来决策路由，FIB 用来转发分组路由表中有三类路由：</p>\n<ol>\n<li>链路层协议发现的路由（即是直连路由）</li>\n<li>静态路由</li>\n<li>动态路由协议 RIP、OSRF 发现的路由</li>\n</ol>\n<h3 id=\"非sql数据库\"><a href=\"#非sql数据库\" class=\"headerlink\" title=\"非sql数据库\"></a>非sql数据库</h3><p>Zookeeper，HBase、Redis、MongoDB、Couchbase、LevelDB</p>\n<h3 id=\"常见OA系统\"><a href=\"#常见OA系统\" class=\"headerlink\" title=\"常见OA系统\"></a>常见OA系统</h3><p>PHP：通达OA、泛微 Eoffice</p>\n<p>Java：泛微OA/云桥、致远OA、蓝凌OA、用友OA</p>\n<p>ASP：启莱OA</p>\n<h3 id=\"横向越权漏洞的修复\"><a href=\"#横向越权漏洞的修复\" class=\"headerlink\" title=\"横向越权漏洞的修复\"></a>横向越权漏洞的修复</h3><p>横向越权：横向越权指的是攻击者尝试访问与他拥有相同权限的用户的资源</p>\n<p>纵向越权：纵向越权指的是一个低级别攻击者尝试访问高级别用户的资源</p>\n<p>对于纵向越权，我们可以通过设置用户角色，为不同的角色提供不同的权限来避免</p>\n<p>为了防止横向越权，我们可以使用缓存来进行辅助，当登录成功或者进行操作时，我们在缓存中存储一对由用户名和一个唯一的数字组成的数据（token），然后返回放入的唯一数据在重置密码时我们的参数不仅需要用户名和密码还需要前面生成的唯一数字，根据用户名在缓存中取出对应的数字，如果取出的数字和参数中传入的想等，则证明重置的当前用户的密码，否则不是，且不予以重置</p>\n<h3 id=\"如何打击黑灰产工具\"><a href=\"#如何打击黑灰产工具\" class=\"headerlink\" title=\"如何打击黑灰产工具\"></a>如何打击黑灰产工具</h3><ol>\n<li>全面监控和快速响应（溯源）：对黑灰进行长期跟进，了解黑灰产工具的传播链条和路径，第一时间捕获活跃的黑灰产工具（建立特征词监控，数据取样、交叉分析）</li>\n<li>建立软件指纹库，增加风险识别能力</li>\n<li>建立黑灰产情报共享，最大化情报价值</li>\n</ol>\n<h3 id=\"如何反爬\"><a href=\"#如何反爬\" class=\"headerlink\" title=\"如何反爬\"></a>如何反爬</h3><ol>\n<li>后台对访问进行统计，如果单个 IP 访问超过阈值，予以封锁</li>\n<li>后台对访问进行统计，如果单个 session 访问超过阈值，予以封锁</li>\n<li>后台对访问进行统计，如果单个 userAgent 访问超过阈值，予以封锁</li>\n<li>以上的组合</li>\n</ol>\n<h3 id=\"Linux下查找服务端口的命令\"><a href=\"#Linux下查找服务端口的命令\" class=\"headerlink\" title=\"Linux下查找服务端口的命令\"></a>Linux下查找服务端口的命令</h3><p>Linux下查找服务端口的命令？一句话查找80端口服务的命令？</p>\n<p>使用grep 命令 要使用 grep 命令在Linux 中查找指定服务的默认端口号，只需运行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token operator\">&lt;</span>port<span class=\"token operator\">&gt;</span> /etc/services\n<span class=\"token function\">grep</span> services /etc/services<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://s2.loli.net/2022/05/25/qZVnLyhwU1mDdXs.png\" alt=\"image-20220107203438844\"></p>\n<h3 id=\"如何发现钓鱼邮件\"><a href=\"#如何发现钓鱼邮件\" class=\"headerlink\" title=\"如何发现钓鱼邮件\"></a>如何发现钓鱼邮件</h3><p><strong>钓鱼邮件发现</strong></p>\n<p>发现途径如下：</p>\n<p>邮件系统异常登录告警、员工上报、异常行为告警、邮件蜜饵告警</p>\n<p>推荐接入微步或奇安信的情报数据。对邮件内容出现的 URL 做扫描，可以发现大量的异常链接</p>\n<h3 id=\"钓鱼邮件处置\"><a href=\"#钓鱼邮件处置\" class=\"headerlink\" title=\"钓鱼邮件处置\"></a>钓鱼邮件处置</h3><p><a href=\"https://www.freebuf.com/articles/es/264037.html\">https://www.freebuf.com/articles/es/264037.html</a></p>\n<ol>\n<li><p>屏蔽办公区域对钓鱼邮件内容涉及站点、URL 访问</p>\n<p>根据办公环境实际情况可以在上网行为管理、路由器、交换机上进行屏蔽</p>\n<p>邮件内容涉及域名、IP 均都应该进行屏蔽</p>\n<p>对访问钓鱼网站的内网 IP 进行记录，以便后续排查溯源可能的后果</p>\n</li>\n<li><p>屏蔽钓鱼邮件</p>\n<p>屏蔽钓鱼邮件来源邮箱域名</p>\n<p>屏蔽钓鱼邮件来源 IP</p>\n<p>有条件的可以根据邮件内容进行屏蔽</p>\n<p>删除还在邮件服务器未被客户端收取钓鱼邮件</p>\n</li>\n<li><p>处理接收到钓鱼邮件的用户</p>\n<ul>\n<li><p>根据钓鱼邮件发件人进行日志回溯</p>\n<p>此处除了需要排查有多少人接收到钓鱼邮件之外，还需要排查是否公司通讯录泄露。采用 TOP500 姓氏撞库发送钓鱼邮件的攻击方式相对后续防护较为简单。如果发现是使用公司通讯录顺序则需要根据通讯录的离职情况及新加入员工排查通讯录泄露时间。毕竟有针对性的社工库攻击威力要比 TOP100、TOP500 大很多</p>\n</li>\n<li><p>通知已接收钓鱼邮件的用户进行处理</p>\n</li>\n<li><p><strong>删除钓鱼邮件</strong></p>\n</li>\n<li><p><strong>系统改密</strong></p>\n</li>\n<li><p><strong>全盘扫毒</strong></p>\n</li>\n</ul>\n</li>\n<li><p>后续：溯源、员工培训提升安全意识</p>\n</li>\n</ol>\n<h3 id=\"如何查看区分是扫描流量和手动流量\"><a href=\"#如何查看区分是扫描流量和手动流量\" class=\"headerlink\" title=\"如何查看区分是扫描流量和手动流量\"></a>如何查看区分是扫描流量和手动流量</h3><p>（扫描数据量大，请求有规律，手动扫描间隔较少）</p>\n<h3 id=\"遇到-exe文件如何处理？\"><a href=\"#遇到-exe文件如何处理？\" class=\"headerlink\" title=\"遇到.exe文件如何处理？\"></a>遇到.exe文件如何处理？</h3><p>首先看它的来源和去向，然后可以下载但不运行，放入微步沙箱中，看是否有后门，若有后门，就用 IDA 反汇编得到恶意攻击者的有用信息，再进一步描绘出攻击者画像进行溯源</p>\n<h3 id=\"Linux-的-Selinux-是什么？如何设置-Selinux？\"><a href=\"#Linux-的-Selinux-是什么？如何设置-Selinux？\" class=\"headerlink\" title=\"Linux 的 Selinux 是什么？如何设置 Selinux？\"></a>Linux 的 Selinux 是什么？如何设置 Selinux？</h3><p>SELinux 是一种安全子系统，它能控制程序只能访问特定文件使用 setup 工具进入图形化关闭搜索或者修改<code>/etc/sysconfig/selinux</code> 文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">SELINUX</span><span class=\"token operator\">=</span>disabled<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>防火墙打开使用 <code>service iptables start</code> 或则<code>/etc/init.d/iptables start</code></p>\n<h3 id=\"iptables-工作在-TCP-x2F-IP-模型中的哪层？\"><a href=\"#iptables-工作在-TCP-x2F-IP-模型中的哪层？\" class=\"headerlink\" title=\"iptables 工作在 TCP/IP 模型中的哪层？\"></a>iptables 工作在 TCP/IP 模型中的哪层？</h3><p>网络层</p>\n<h3 id=\"日志分析ELK的使用和分析\"><a href=\"#日志分析ELK的使用和分析\" class=\"headerlink\" title=\"日志分析ELK的使用和分析\"></a>日志分析ELK的使用和分析</h3><blockquote>\n<p><a href=\"https://www.zhihu.com/question/21427267\">https://www.zhihu.com/question/21427267</a></p>\n<ul>\n<li>Elasticsearch是个开源分布式搜索引擎，它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。</li>\n<li>Logstash是一个完全开源的工具，他可以对你的日志进行收集、过滤，并将其存储供以后使用（如，搜索）。</li>\n<li>Kibana 也是一个开源和免费的工具，它Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助您汇总、分析和搜索重要数据日志。</li>\n</ul>\n</blockquote>\n<p>举例-阿里规范 用户历史命令记录</p>\n<p>缺点：安全性不够。使用x-pack实现安全认证及权限管理功能</p>\n<h3 id=\"awk-sed的使用\"><a href=\"#awk-sed的使用\" class=\"headerlink\" title=\"awk sed的使用\"></a>awk sed的使用</h3><h3 id=\"Log4j\"><a href=\"#Log4j\" class=\"headerlink\" title=\"Log4j\"></a>Log4j</h3><p>log4j 是 javaweb 的日志组件，用来记录 web 日志</p>\n<p>去指定下载文件的 url 在搜索框或者搜索的 url 里面，加上 ${jndi:ldap://127.0.0.1/test} ，log4j 会对这串代码进行表达式解析，给 lookup 传递一个恶意的参数指定，参数指的是比如 ldap 不存在的资源 $ 是会被直接执行的。后面再去指定下载文件的 url，去下载我们的恶意文件。比如是 x.class 下载完成后，并且会执行代码块</p>\n<p>修复：升级 Log4j 到最新版本，根据业务判断是否关闭 lookup</p>\n<h2 id=\"⬆️入侵检测-amp-防御\"><a href=\"#⬆️入侵检测-amp-防御\" class=\"headerlink\" title=\"⬆️入侵检测&amp;防御\"></a>⬆️入侵检测&amp;防御</h2><h3 id=\"WAF产品如何来拦截攻击？\"><a href=\"#WAF产品如何来拦截攻击？\" class=\"headerlink\" title=\"WAF产品如何来拦截攻击？\"></a>WAF产品如何来拦截攻击？</h3><p>Waf 产品有三种</p>\n<ol>\n<li><p>云 Waf</p>\n<p>用户不需要在自己的网络中安装软件程序或部署硬件设备，就可以对网站实施安全防护，它的主要实现方式是<strong>利用 DNS 技术</strong>，通过移交域名解析权来实现安全防护。用户的请求首先发送到云端节点进行检测，如存在异常请求则进行拦截否则将请求转发至真实服务器</p>\n</li>\n<li><p>Web 防护软件</p>\n<p>安装在需要防护的服务器上，实现方式通常是 <strong>Waf 监听端口或以 Web 容器扩展</strong>方式进行请求检测和阻断</p>\n</li>\n<li><p>硬件 Web 防火墙</p>\n<p>Waf <strong>串行部署</strong>在 Web 服务器前端，用于检测、阻断异常流量。常规硬件 Waf 的实现方式是通过<strong>代理技术</strong>代理来自外部的流量</p>\n</li>\n</ol>\n<p>原理都相同，通过部署在 Web 服务器前方串行接入来将 Web 流量牵引到 WAF 设备中进行清洗或者拦截，最终只把正常用户的请求转发给服务器</p>\n<p>当前市场上 Waf 产品核心的防护机制是“规则”，每一个请求、会话，经过抓包，“开包检查”，每一项规则都会检查到，一旦检查不通过，就会被认为是非法访问，拒绝处理</p>\n<h3 id=\"WAF有哪些防护方式？\"><a href=\"#WAF有哪些防护方式？\" class=\"headerlink\" title=\"WAF有哪些防护方式？\"></a>WAF有哪些防护方式？</h3><ul>\n<li><p>Web基础防护</p>\n<p>可防范常规的 web 应用攻击，如 SQL 注入攻击、XSS 跨站攻击等，可检测 webshell，检查 HTTP 上传通道中的网页木马，打开开关即实时生效</p>\n</li>\n<li><p>CC 攻击防护</p>\n<p>可根据 IP、Cookie 或者 Referer 字段名设置灵活的限速策略，有效缓解 CC 攻击</p>\n</li>\n<li><p>精准访问防护</p>\n<p>对常见 HTTP 字段进行条件组合， 支持定制化防护策略如CSRF防护，通过自定义规则的配置，更精准的识别恶意伪造请求、保护网站敏感信息、提高防护精准性</p>\n</li>\n<li><p>IP 黑白名单</p>\n<p>添加终拦截与始终放行的黑白名单 IP，增加防御准确性</p>\n</li>\n<li><p>地理位置访问控制</p>\n<p>添加地理位置访问控制规则，针对来源 IP 进行自定义访问控制</p>\n</li>\n<li><p>网页防篡改</p>\n<p>对网站的静态网页进行缓存配置，当用户访问时返回给用户缓存的正常页面，并随机检测网页是否被篡改</p>\n</li>\n<li><p>网站反爬虫</p>\n<p>动态分析网站业务模型，结合人机识别技术和数据风控手段，精准识别爬虫行为</p>\n</li>\n<li><p>误报屏蔽</p>\n<p>针对特定请求忽略某些攻击检测规则，用于处理误报事件</p>\n</li>\n<li><p>隐私屏蔽</p>\n<p>隐私信息屏蔽，避免用户的密码等信息出现在事件日志中</p>\n</li>\n<li><p>防敏感信息泄露</p>\n<p>防止在页面中泄露用户的敏感信息，例如：用户的身份证号码、手机号码、电子邮箱等</p>\n</li>\n</ul>\n<h3 id=\"不安全的第三方组件的漏洞如何做前置规避？\"><a href=\"#不安全的第三方组件的漏洞如何做前置规避？\" class=\"headerlink\" title=\"不安全的第三方组件的漏洞如何做前置规避？\"></a>不安全的第三方组件的漏洞如何做前置规避？</h3><p>第三方组件缺陷又被归结为供应链安全问题，供应链安全需要多方面考虑。没有万能方案，但是组织可以用分层防御的组合来保护供应链</p>\n<ul>\n<li><p>安全战略评估</p>\n<p>要评估风险与合规性，需要针对业务挑战、需求和目标评估现有的安全治理框架——包括数据隐私、第三方风险和IT法规合规需求及差距。安全风险量化、安全开发、法规和标准合规性以及安全教育和培训是关键</p>\n</li>\n<li><p>事件响应计划与编排</p>\n<p>提前为入侵、关闭或中断做好准备，并拥有稳健的事件响应计划很重要。通过实践、测试和易执行的响应计划和补救措施，防止损失</p>\n</li>\n</ul>\n<p><a href=\"https://www.freebuf.com/articles/neopoints/261681.html\">https://www.freebuf.com/articles/neopoints/261681.html</a></p>\n<h3 id=\"如果现在要你写一个检测命令注入的脚本？\"><a href=\"#如果现在要你写一个检测命令注入的脚本？\" class=\"headerlink\" title=\"如果现在要你写一个检测命令注入的脚本？\"></a>如果现在要你写一个检测命令注入的脚本？</h3><p>你会怎么写，有哪些要注意的地方，如果别人的脚本检测出来了你的脚本没检测出来你觉的你的脚本会存在什么问题，脚本检测过程中如果没有回显你会怎么做</p>\n<h1 id=\"🅰️溯源\"><a href=\"#🅰️溯源\" class=\"headerlink\" title=\"🅰️溯源\"></a>🅰️溯源</h1><p><img src=\"https://s2.loli.net/2022/05/25/2ZAenxgQsu6b7DC.png\" alt=\"image-20220103203355953\"></p>\n<h2 id=\"⬆️基本步骤\"><a href=\"#⬆️基本步骤\" class=\"headerlink\" title=\"⬆️基本步骤\"></a>⬆️基本步骤</h2><h3 id=\"1-攻击源捕获\"><a href=\"#1-攻击源捕获\" class=\"headerlink\" title=\"1.攻击源捕获\"></a>1.攻击源捕获</h3><ul>\n<li>安全设备报警，如扫描IP、威胁阻断、病毒木马、入侵事件等</li>\n<li>日志与流量分析，异常的通讯流量、攻击源与攻击目标等</li>\n<li>服务器资源异常，异常的文件、账号、进程、端口，启动项、计划任务和服务等</li>\n<li>邮件钓鱼，获取恶意文件样本、钓鱼网站 URL 等</li>\n<li>蜜罐系统，获取攻击者 ID、电脑信息、浏览器指纹、行为、意图的相关信息</li>\n</ul>\n<h3 id=\"2-溯源反制手段\"><a href=\"#2-溯源反制手段\" class=\"headerlink\" title=\"2.溯源反制手段\"></a>2.溯源反制手段</h3><ul>\n<li>IP 定位技术<br>根据IP定位物理地址–代理 IP<br>溯源案例：通过 IP 端口扫描，反向渗透服务器进行分析，最终定位到攻击者相关信息</li>\n<li>ID 追踪术<br>ID 追踪术，搜索引擎、社交平台、技术论坛、社工库匹配<br>溯源案例：利用 ID 从技术论坛追溯邮箱，继续通过邮箱反追踪真实姓名，通过姓名找到相关简历信息</li>\n<li>网站 url<br>域名 Whois 查询–注册人姓名、地址、电话和邮箱 –域名隐私保护<br>溯源案例：通过攻击 IP 历史解析记录/域名，对域名注册信息进行溯源分析</li>\n<li>恶意样本分析<br>提取样本特征、用户名、ID、邮箱、C2 服务器等信息–同源分析<br>溯源案例：样本分析过程中，发现攻击者的个人 ID 和 QQ，成功定位到攻击者</li>\n<li>社交账号<br>基于 JSONP 跨域，获取攻击者的主机信息、浏览器信息、真实 IP 及社交信息等<br>利用条件：可以找到相关社交网站的 jsonp 接口泄露敏感信息，相关网站登录未注销</li>\n</ul>\n<h3 id=\"3-攻击者画像\"><a href=\"#3-攻击者画像\" class=\"headerlink\" title=\"3.攻击者画像\"></a>3.攻击者画像</h3><ul>\n<li><p>攻击路径</p>\n<p>攻击目的：拿到权限、窃取数据、获取利益、DDOS 等<br>网络代理：代理 IP、跳板机、C2 服务器等<br>攻击手法：鱼叉式邮件钓鱼、Web渗透、水坑攻击、近源渗透、社会工程等</p>\n</li>\n<li><p>攻击者身份画像</p>\n<p>虚拟身份：ID、昵称、网名<br>真实身份：姓名、物理位置<br>联系方式：手机号、qq/微信、邮箱<br>组织情况：单位名称、职位信息</p>\n</li>\n</ul>\n<h3 id=\"技巧\"><a href=\"#技巧\" class=\"headerlink\" title=\"技巧\"></a>技巧</h3><ol>\n<li>域名、ip 反查目标个人信息</li>\n<li>支付宝转账，确定目标姓氏</li>\n<li>淘宝找回密码，确定目标名字</li>\n<li>企业微信手机号查公司名称</li>\n<li>REG007 查注册应用、网站</li>\n<li>程序 PDB 信息泄露</li>\n</ol>\n<h3 id=\"主动防御\"><a href=\"#主动防御\" class=\"headerlink\" title=\"主动防御\"></a>主动防御</h3><p><a href=\"https://www.freebuf.com/articles/web/245585.html\">基于网络欺骗与浏览器指纹的WEB攻击溯源</a></p>\n<ol>\n<li>浏览器指纹技术</li>\n<li>网络欺骗技术，蜜罐蜜网</li>\n</ol>\n<h3 id=\"流量溯源\"><a href=\"#流量溯源\" class=\"headerlink\" title=\"流量溯源\"></a>流量溯源</h3><p>可利用流量工具 wireshark 进行溯源：</p>\n<ol>\n<li>查看 eval、 z0、 shell whoami 等关键字，查看出现次数过多的时候， 需要查看是哪个页面发起的请求，有可能是 webshell</li>\n<li>通过 WireShark 工具快速搜索关键字，定位到异常流量包</li>\n<li>找出异常 IP 和所上传的内容，查看是否为 webshell</li>\n</ol>\n<p>如何定位到攻击IP：</p>\n<ol>\n<li><p>首先通过选择 - 统计 - 对话查看流量的走向情况， 定位可疑的 IP 地址</p>\n</li>\n<li><p>根据定位到的 IP 地址，尝试对上传的 webshell 进行定位</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ip.addr <span class=\"token operator\">==</span> <span class=\"token function\">ip</span> <span class=\"token operator\">&amp;&amp;</span> http matches\n<span class=\"token string\">\"uploadllevallselectlxp_cmdshell\"</span> <span class=\"token operator\">&amp;&amp;</span> http.request.method <span class=\"token operator\">==</span> <span class=\"token string\">\"POST\"</span>\n<span class=\"token number\">12</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>查找到 webshell 后尝试溯源漏洞位置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">http.request.uri contains <span class=\"token string\">\"webshell.php\"</span>\n<span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>定位到最开始 webshell 执行或上传的时候</p>\n</li>\n<li><p>根据最开始的 HTTP 上传包或者其他漏洞特征定位漏洞类型</p>\n</li>\n</ol>\n<h3 id=\"wireshark\"><a href=\"#wireshark\" class=\"headerlink\" title=\"wireshark\"></a>wireshark</h3><p>wireshark 简单的过滤规则</p>\n<ul>\n<li><p>过滤ip：</p>\n<p>过滤源 ip 地址：ip.src1.1.1.1</p>\n<p>目的 ip 地址：ip.dst1.1.1.1</p>\n</li>\n<li><p>过滤端口：</p>\n<p>过滤80端口：tcp.port == 80</p>\n<p>源端口：tcp.srcport == 80</p>\n<p>目的端：tcp.dstport == 80</p>\n</li>\n<li><p>协议过滤：直接输入协议名即可，如 http 协议 http</p>\n</li>\n<li><p>http 模式过滤：过滤 get/post 包 httprequest.mothod == “GET/POST”</p>\n</li>\n</ul>\n<h3 id=\"常用取证工具\"><a href=\"#常用取证工具\" class=\"headerlink\" title=\"常用取证工具\"></a>常用取证工具</h3><p>Wireshark、xplico、 Volatility、 FastlR Collector、Autopsy、 Dumplt、 FTK Imager、Foremost、Scalpel、 Bulk_ exetractor 等</p>\n<h3 id=\"优秀文章\"><a href=\"#优秀文章\" class=\"headerlink\" title=\"优秀文章\"></a>优秀文章</h3><p><a href=\"https://www.anquanke.com/post/id/260888\">域前置溯源方法思考</a></p>\n<h2 id=\"⬆️其他\"><a href=\"#⬆️其他\" class=\"headerlink\" title=\"⬆️其他\"></a>⬆️其他</h2><h3 id=\"对蜜罐的了解\"><a href=\"#对蜜罐的了解\" class=\"headerlink\" title=\"对蜜罐的了解\"></a>对蜜罐的了解</h3>","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<p>OCEAN’S 安全面试题整理系列文章：</p>\n<ol>\n<li><a href=\"https://blog.csdn.net/q20010619/article/details/124329818\">渗透测试&amp;网络&amp;CTF面试题整理</a></li>\n<li><a href=\"https://blog.csdn.net/q20010619/article/details/124329764?spm=1001.2014.3001.5501\">PHP&amp;Java&amp;Py&amp;漏洞利用or运维面试题整理</a></li>\n<li><a href=\"https://blog.csdn.net/q20010619/article/details/123185212\">红队面试题整理</a></li>\n<li><a href=\"https://blog.csdn.net/q20010619/article/details/123015066\">蓝队面试题整理（含回答）</a></li>\n<li><a href=\"https://github.com/Leezj9671/Pentest_Interview/blob/master/HR%E9%97%AE%E9%A2%98.md\">HR问题</a></li>\n</ol>\n<h1 id=\"🅰️应急响应🛡️\"><a href=\"#🅰️应急响应🛡️\" class=\"headerlink\" title=\"🅰️应急响应🛡️\"></a>🅰️应急响应🛡️</h1><h2 id=\"⬆️宏观题\"><a href=\"#⬆️宏观题\" class=\"headerlink\" title=\"⬆️宏观题\"></a>⬆️宏观题</h2><h3 id=\"1-基本思路流程\"><a href=\"#1-基本思路流程\" class=\"headerlink\" title=\"1.基本思路流程\"></a>1.基本思路流程</h3><ol>\n<li>收集信息：收集客户信息和中毒主机信息，包括样本</li>\n<li>判断类型：判断是否是安全事件，何种安全事件，勒索、挖矿、断网、DoS 等等</li>\n<li>抑制范围：隔离使受害⾯不继续扩⼤</li>\n<li>深入分析：日志分析、进程分析、启动项分析、样本分析方便后期溯源</li>\n<li>清理处置：杀掉进程，删除文件，打补丁，删除异常系统服务，清除后门账号防止事件扩大，处理完毕后恢复生产</li>\n<li>产出报告：整理并输出完整的安全事件报告</li>\n</ol>\n<h3 id=\"2-Windows入侵排查思路\"><a href=\"#2-Windows入侵排查思路\" class=\"headerlink\" title=\"2.Windows入侵排查思路\"></a>2.Windows入侵排查思路</h3><ol>\n<li><p>检查系统账号安全</p>\n<ol>\n<li><p>查看服务器是否有弱口令，远程管理端口是否对公网开放（使用<code>netstat -ano </code>命令、或者问服务器管理员）</p>\n</li>\n<li><p><code>lusrmgr.msc </code>命令查看服务器是否存在可疑账号、新增账号，如有管理员群组的（Administrators）里的新增账户，如有，请立即禁用或删除掉</p>\n</li>\n<li><p>用 D 盾或者注册表中查看服务器是否存在隐藏账号、克隆账号</p>\n</li>\n<li><p>结合日志，查看管理员登录时间、用户名是否存在异常</p>\n<p>检查方法：Win+R 打开运行，输入“eventvwr.msc”，回车运行，打开“事件查看器”，导出 Windows 日志–安全，利用 Log Parser 进行分析</p>\n</li>\n</ol>\n</li>\n<li><p>检查异常端口、进程</p>\n<ol>\n<li><code>netstat -ano</code>检查端口连接情况，是否有远程连接、可疑连接</li>\n<li>任务管理器-进程</li>\n</ol>\n</li>\n<li><p>检查启动项、计划任务、服务</p>\n</li>\n<li><p>检查系统相关信息</p>\n<p>查看系统版本以及补丁信息</p>\n<p>查找可疑目录及文件</p>\n</li>\n<li><p>日志分析</p>\n</li>\n</ol>\n<h3 id=\"3-Linux入侵排查思路\"><a href=\"#3-Linux入侵排查思路\" class=\"headerlink\" title=\"3.Linux入侵排查思路\"></a>3.Linux入侵排查思路</h3><ol>\n<li><p>账号安全</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">who</span>\t\t查看当前登录用户（tty本地登陆 pts远程登录）\nw \t\t查看系统信息，想知道某一时刻用户的行为\n<span class=\"token function\">uptime</span>\t查看登陆多久、多少用户，负载<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">1</span>、用户信息文件/etc/passwd\nroot:x:0:0:root:/root:/bin/bash\naccount:password:<span class=\"token environment constant\">UID</span>:GID:GECOS:directory:shell\n用户名：密码：用户ID：组ID：用户说明：家目录：登陆之后shell\n注意：无密码只允许本机登陆，远程不允许登陆\n\n<span class=\"token number\">2</span>、影子文件/etc/shadow\nroot:<span class=\"token variable\">$6</span><span class=\"token variable\">$oGs1PqhL2p3ZetrE</span><span class=\"token variable\">$X7o7bzoouHQVSEmSgsYN5UD4</span>.kMHx6qgbTqwNVC5oOAouXvcjQSt.Ft7ql1WpkopY0UV9ajBwUt1DpYxTCVvI/:16809:0:99999:7:::\n用户名：加密密码：密码最后一次修改日期：两次密码的修改时间间隔：密码有效期：密码修改到期到的警告天数：密码过期之后的宽限天数：账号失效时间：保留<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>/etc/passwd</code> 存储一般的用户信息，任何人都可以访问；<code>/etc/shadow</code> 存储用户的密码信息，只有 root 用户可以访问</p>\n</li>\n<li><p>历史命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">通过 .bash_history 查看帐号执行过的系统命令\n<span class=\"token number\">1</span>、root的历史命令 histroy\n<span class=\"token number\">2</span>、打开 /home 各帐号目录下的 .bash_history，查看普通帐号的历史命令\n\n历史操作命令的清除：history -c\n但此命令并不会清除保存在文件中的记录，因此需要手动删除.bash_profile文件中的记录<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>检查异常端口</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">netstat</span> -antlp<span class=\"token operator\">|</span><span class=\"token function\">more</span>\n查看下pid所对应的进程文件路径，\n运行ls -l /proc/<span class=\"token variable\">$PID</span>/exe或file /proc/<span class=\"token variable\">$PID</span>/exe（<span class=\"token variable\">$PID</span> 为对应的pid 号）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>检查异常进程</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ps</span> aux <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> pid<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>检查开机启动项</p>\n<p>开机启动配置文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">/etc/rc.local\n/etc/rc.d/rc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span>~6<span class=\"token punctuation\">]</span>.d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>检查定时任务</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">crontab</span> -l 列出某个用户cron服务的详细内容\nTips：默认编写的crontab文件会保存在 <span class=\"token punctuation\">(</span>/var/spool/cron/用户名 例如: /var/spool/cron/root\n<span class=\"token function\">crontab</span> -r 删除每个用户cront任务<span class=\"token punctuation\">(</span>谨慎：删除所有的计划任务<span class=\"token punctuation\">)</span>\n<span class=\"token function\">crontab</span> -e 使用编辑器编辑当前的crontab文件\n如：*/1 * * * * <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hello world\"</span> <span class=\"token operator\">>></span> /tmp/test.txt 每分钟写入文件\n<span class=\"token number\">2</span>、利用anacron实现异步定时任务调度<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>重点关注</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;var&#x2F;spool&#x2F;cron&#x2F;*\n&#x2F;etc&#x2F;crontab\n&#x2F;etc&#x2F;cron.d&#x2F;*\n&#x2F;etc&#x2F;cron.daily&#x2F;*\n&#x2F;etc&#x2F;cron.hourly&#x2F;*\n&#x2F;etc&#x2F;cron.monthly&#x2F;*\n&#x2F;etc&#x2F;cron.weekly&#x2F;\n&#x2F;etc&#x2F;anacrontab\n&#x2F;var&#x2F;spool&#x2F;anacron&#x2F;*<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>检查服务</p>\n<p>chkconfig –list 命令，可以查看系统运行的服务</p>\n</li>\n<li><p>检查异常文件</p>\n</li>\n<li><p>检查系统日志</p>\n</li>\n</ol>\n<h3 id=\"Linux的登录日志查看文件\"><a href=\"#Linux的登录日志查看文件\" class=\"headerlink\" title=\"Linux的登录日志查看文件\"></a>Linux的登录日志查看文件</h3><ul>\n<li>日志默认存放位置：&#x2F;var&#x2F;log&#x2F;</li>\n<li>查看可登录的账户 cat&#x2F;etc&#x2F;passwd|grep ‘&#x2F;bin&#x2F;bash’</li>\n<li>查看所有用户最后的登录信息 lastlog</li>\n<li>查看用户最近登录信息 last 其中，&#x2F;var&#x2F;log&#x2F;wtmp 存储登录成功的信息、btmp 存储登录失败的信息、utmp 存储当前正在登录的信息</li>\n<li>查看当前用户登录系统情况 who</li>\n</ul>\n<h3 id=\"Linux常用排查命令\"><a href=\"#Linux常用排查命令\" class=\"headerlink\" title=\"Linux常用排查命令\"></a>Linux常用排查命令</h3><p>这个问题就是 linux 入侵排查排查的一部分</p>\n<p><a href=\"https://cloud.tencent.com/developer/article/1822210\">https://cloud.tencent.com/developer/article/1822210</a></p>\n<p>系统信息</p>\n<ol>\n<li>查看当前系统状态 top</li>\n<li>操作系统信息 uname -a</li>\n<li>查看当前系统进程信息 ps</li>\n<li>查看历史命令 history</li>\n<li>列出本机所有的连接和监听的端口 netstat</li>\n<li>查看谁在使用某个端口 lsof</li>\n</ol>\n<p>用户登录</p>\n<ol>\n<li><p>查看当前用户登录系统情况 who</p>\n</li>\n<li><p>分析超级权限账户 awk-F： ‘{if（$3&#x3D;&#x3D;0）print $1}’&#x2F;etc&#x2F;passwd</p>\n</li>\n<li><p>查看可登录的账户 cat&#x2F;etc&#x2F;passwd|grep ‘&#x2F;bin&#x2F;bash’</p>\n</li>\n<li><p>查看用户错误的登录信息 lastb</p>\n</li>\n<li><p>查看所有用户最后的登录信息 lastlog</p>\n</li>\n<li><p>查看用户最近登录信息 last</p>\n<p>&#x2F;var&#x2F;log&#x2F; 其中，&#x2F;var&#x2F;log&#x2F;wtmp 存储登录成功的信息、btmp存储登录失败的信息、utmp存储当前正在登录的信息</p>\n</li>\n<li><p>查看空口令账户 awk-F： ‘length（$2）&#x3D;&#x3D;0 {print $1}’&#x2F;etc&#x2F;shadow</p>\n</li>\n</ol>\n<h3 id=\"Linux基线规范\"><a href=\"#Linux基线规范\" class=\"headerlink\" title=\"Linux基线规范\"></a>Linux基线规范</h3><p>每个公司有每个公司的基线规范体系，但是答题分为下列五个方面</p>\n<p><strong>账号管理和授权</strong></p>\n<ul>\n<li>检查特殊账号，是否存在空密码的账户和 root 权限账户</li>\n<li>禁用或删除无用账号</li>\n<li>添加口令策略:<code>/etc/login.defs</code>修改配置文件，设置过期时间、连续认证失败次数</li>\n<li>禁止 root 远程登录，限制root用户直接登录。</li>\n<li>检查 su 权限。<code>vi /etc/pam.d/su</code>添加<code>auth required pam_wheel.so group=test</code></li>\n</ul>\n<p><strong>服务</strong></p>\n<ul>\n<li>关闭不必要的服务</li>\n<li>SSH 服务安全<ul>\n<li>不允许 root 账号直接登录系统，<code>PermitRootLogin=no</code></li>\n<li>修改 SSH 使用的协议版本为 2</li>\n<li>修改允许密码错误次数（默认 6 次），<code>MaxAuthTries=3</code></li>\n</ul>\n</li>\n</ul>\n<p><strong>文件系统</strong></p>\n<ul>\n<li>设置 umask 值 <code>vi /etc/profile</code> 添加行 <code>umask 027</code></li>\n<li>设置登录超时 <code>vi /etc/profile</code> 修改配置文件，将以 <code>TMOUT=</code> 开头的行注释，设置为 <code>TMOUT=180</code></li>\n</ul>\n<p><strong>日志</strong></p>\n<ul>\n<li><p>启用 syslogd 日志，配置日志目录权限，或者设置日志服务器</p>\n</li>\n<li><p>记录所有用户的登录和操作日志，通过脚本代码实现记录所有用户的登录操作日志，防止出现安全事件后无据可查</p>\n<p><a href=\"https://www.alibabacloud.com/help/zh/faq-detail/49809.htm\">https://www.alibabacloud.com/help/zh/faq-detail/49809.htm</a></p>\n</li>\n</ul>\n<p><strong>IP 协议安全要求</strong></p>\n<ul>\n<li>远程登录取消 telnet 采用 ssh</li>\n<li>设置 &#x2F;etc&#x2F;hosts.allow 和 deny</li>\n<li>禁止 ICMP 重定向</li>\n<li>禁止源路由转发</li>\n<li>防 ssh 破解，iptables (对已经建立的所有链接都放行，限制每分钟连接 ssh 的次数)+ denyhost (添加 ip 拒绝访问)</li>\n</ul>\n<p><strong>Linux 安全基线检查</strong></p>\n<p>Linux：<a href=\"https://cloud.tencent.com/developer/article/1668982\">https://cloud.tencent.com/developer/article/1668982</a></p>\n<h3 id=\"Windows-安全基线检查\"><a href=\"#Windows-安全基线检查\" class=\"headerlink\" title=\"Windows 安全基线检查\"></a>Windows 安全基线检查</h3><p>Windows：<a href=\"https://cloud.tencent.com/developer/article/1668937\">https://cloud.tencent.com/developer/article/1668937</a></p>\n<p>主要包括五个方面：身份鉴别、访问控制、安全审计、资源控制、剩余信息保护</p>\n<ul>\n<li><p><strong>身份鉴别</strong></p>\n<p>更改缺省账户</p>\n<p>检查Guest用户是否禁用</p>\n<p>密码复杂性要求</p>\n<p>密码长度最小不能小于8位</p>\n</li>\n<li><p><strong>访问控制</strong></p>\n<p>共享账户检查</p>\n<p>远程关机授权</p>\n<p>本地关机</p>\n<p>授权帐户登陆</p>\n</li>\n<li><p><strong>安全审计</strong></p>\n<p>用户登录日志记录</p>\n<p>系统日志完备性检查</p>\n<p>登录超时管理</p>\n</li>\n<li><p><strong>资源控制</strong></p>\n<p>登录超时管理</p>\n<p>远程登录超时配置</p>\n</li>\n<li><p><strong>剩余信息保护</strong></p>\n<p>不显示上次的用户名</p>\n<p>关机前清除虚拟内存页面</p>\n<p>不启用可还原的加密来存储密码</p>\n</li>\n</ul>\n<h3 id=\"中间件基线规范（APACHE）\"><a href=\"#中间件基线规范（APACHE）\" class=\"headerlink\" title=\"中间件基线规范（APACHE）\"></a>中间件基线规范（APACHE）</h3><blockquote>\n<p><a href=\"https://www.alibabacloud.com/help/zh/faq-detail/52981.htm\">https://www.alibabacloud.com/help/zh/faq-detail/52981.htm</a></p>\n</blockquote>\n<p>配置</p>\n<ul>\n<li>账号</li>\n<li>授权</li>\n<li>日志</li>\n<li>session 过期时间（防ddos）</li>\n<li>绑定监听地址</li>\n</ul>\n<p>禁止</p>\n<ul>\n<li>目录权限</li>\n<li>访问外部文件</li>\n<li>CGI</li>\n<li>非法HTTP方法（PUT DELETE）</li>\n</ul>\n<p>隐藏</p>\n<ul>\n<li>服务版本号</li>\n<li>重定向错误页面</li>\n</ul>\n<p>删除</p>\n<ul>\n<li>配置文件</li>\n<li>默认安装的无用文件</li>\n</ul>\n<h3 id=\"中间件常见漏洞\"><a href=\"#中间件常见漏洞\" class=\"headerlink\" title=\"中间件常见漏洞\"></a>中间件常见漏洞</h3><p><a href=\"https://www.freebuf.com/articles/web/192063.html\">https://www.freebuf.com/articles/web/192063.html</a></p>\n<p><strong>（一） IIS</strong><br>1、PUT漏洞</p>\n<p>2、短文件名猜解</p>\n<p>3、远程代码执行</p>\n<p>4、解析漏洞</p>\n<p><strong>（二） Apache</strong><br>1、解析漏洞</p>\n<p>2、目录遍历</p>\n<p><strong>（三） Nginx</strong><br>1、文件解析</p>\n<p>2、目录遍历</p>\n<p>3、CRLF注入</p>\n<p>4、目录穿越</p>\n<p><strong>（四）Tomcat</strong><br>1、远程代码执行</p>\n<p>2、war后门文件部署</p>\n<p><strong>（五）jBoss</strong><br>1、反序列化漏洞</p>\n<p>2、war后门文件部署</p>\n<p><strong>（六）WebLogic</strong><br>1、反序列化漏洞</p>\n<p>2、SSRF</p>\n<p>3、任意文件上传</p>\n<p>4、war后门文件部署</p>\n<p><strong>（七）其它中间件相关漏洞</strong><br>1、FastCGI未授权访问、任意命令执行</p>\n<p>2、PHPCGI远程代码执行</p>\n<h3 id=\"Linux、Windows安全加固\"><a href=\"#Linux、Windows安全加固\" class=\"headerlink\" title=\"Linux、Windows安全加固\"></a>Linux、Windows安全加固</h3><p><strong>IIS 服务器应该做哪些方面的保护措施？</strong></p>\n<p>整理来源：<a href=\"http://www.williamlong.info/archives/118.html\">http://www.williamlong.info/archives/118.html</a></p>\n<ol>\n<li>保持 Windows 升级</li>\n<li>使用 IIS 防范工具</li>\n<li>移除缺省的 Web 站点</li>\n<li>如果你并不需要 FTP 和 SMTP 服务，请卸载它们</li>\n<li>有规则地检查你的管理员组和服务:</li>\n<li>严格控制服务器的写访问权限</li>\n<li>设置复杂的密码</li>\n<li>减少&#x2F;排除 Web 服务器上的共享</li>\n<li>禁用 TCP&#x2F;IP 协议中的 NetBIOS</li>\n<li>使用 TCP 端口阻塞</li>\n<li>仔细检查 .bat 和 .exe 文件：每周搜索一次 .bat</li>\n<li>管理 IIS 目录安全</li>\n<li>使用 NTFS 安全</li>\n<li>管理用户账户</li>\n<li>审计你的 Web 服务器</li>\n</ol>\n<p><strong>Linux系统安全加固需要注意的内容</strong></p>\n<ol>\n<li>关闭不必要的系统服务</li>\n<li>更改 SSH 默认端口</li>\n<li>禁止 root 用户远程 ssh 登录</li>\n<li>限制用户使用 su 命令切换 root</li>\n<li>密码复杂度策略</li>\n<li>检查密码重复使用次数限制</li>\n<li>检查是否存在空口令账号</li>\n<li>禁止同时按下 ctrl+alt+del 重启</li>\n<li>禁用 telnet 服务</li>\n</ol>\n<h3 id=\"框架漏洞-amp-常见命令注入漏洞？php-Strust2\"><a href=\"#框架漏洞-amp-常见命令注入漏洞？php-Strust2\" class=\"headerlink\" title=\"框架漏洞&amp;常见命令注入漏洞？php? Strust2 ?\"></a>框架漏洞&amp;常见命令注入漏洞？php? Strust2 ?</h3><ul>\n<li>Struts2 OGNL 注入</li>\n<li>weblogic</li>\n<li>fastjson</li>\n<li>TP5 代码执行</li>\n<li>laravel：debug mode 远程代码执行漏洞（CVE-2021-3129）</li>\n<li>Spring Expression Language SPEL 表达式注入</li>\n<li>Spring Security Oauth2 远程代码执行</li>\n<li><a href=\"https://www.freebuf.com/articles/web/286666.html\">Spring框架漏洞总结</a></li>\n</ul>\n<h3 id=\"常见安全工具、设备\"><a href=\"#常见安全工具、设备\" class=\"headerlink\" title=\"常见安全工具、设备\"></a>常见安全工具、设备</h3><p><strong>工具</strong></p>\n<ul>\n<li>端口及漏洞扫描：Namp、Masscan</li>\n<li>抓包：Wireshark，Burpsuite、Fiddler、HttpCanary</li>\n<li>Web自动化安全扫描：Nessus、Awvs、Appscan、Xray</li>\n<li>信息收集：Oneforall、hole</li>\n<li>漏洞利用：MSF、CS</li>\n<li>Webshell 管理：菜刀、蚁剑、冰蝎、哥斯拉</li>\n</ul>\n<p><strong>设备</strong></p>\n<p><a href=\"https://wiki.wgpsec.org/knowledge/base/safety.html\">网络安全设备常识</a></p>\n<p>常见的 HW 设备有：公安部网防G01、K01、360网康&#x2F;网神防火墙、微步威胁情报、安恒云-Web应用防火墙（玄武盾）、默安蜜罐、知道创宇蜜罐、山石防火墙</p>\n<p><img src=\"https://s2.loli.net/2022/05/25/ie4h5RDb9mOgKcZ.png\" alt=\"image-20211224223800578\"></p>\n<p>即客户拥有物理的基础设施（自建机房、自购设备、网络）</p>\n<ul>\n<li><p>NGAF&#x2F;NGFW：下一代 Web 应用防火墙（Next Generation Application Firewall，<a href=\"https://www.huaweicloud.com/zhishi/edit-582196.html\">通防火墙和下一代防火墙的区别</a>），聚合了以下功能</p>\n<ul>\n<li>IDS<ul>\n<li>HIDS：基于主机的入侵检测系统</li>\n<li>NIDS：基于网络的入侵检测系统</li>\n<li>HIDS+NIDS：基于混合数据源的入侵检测系统</li>\n</ul>\n</li>\n<li>IPS：入侵防御系统</li>\n<li>AV：反病毒系统</li>\n</ul>\n</li>\n<li><p>EDR：主机安全管理\\终端检测和响应</p>\n<p>EDR 实时监测终端上发生的各类行为，采集终端运行状态，在后端通过大数据安全分析、机器学习、沙箱分析、行为分析、机器学习等技术，提供深度持续监控、威胁检测、高级威胁分析、调查取证、事件响应处置、追踪溯源等功能，可第一时间检测并发现恶意活动，包括已知和未知威胁，并快速智能地做出响应，全面赋予终端主动、积极的安全防御能力</p>\n<p>简单来说就是给内网环境中所有主机安装管理软件终端，可以在管理平台集中管理和数据分析过滤，基本所有安全厂商都有自己的 EDR 产品</p>\n</li>\n<li><p>运维审计和管理平台（堡垒机）</p>\n</li>\n<li><p>DAS：数据库安全审计平台</p>\n</li>\n<li><p>LAS：日志审计安全平台</p>\n</li>\n<li><p>AC：上网行为管理系统</p>\n</li>\n<li><p>伪装欺骗系统（蜜罐、蜜网）</p>\n</li>\n<li><p>SIP：安全态势感知平台</p>\n<p>这个算是让整套系统性能得到提升的灵魂了，定位为客户的安全大脑，是一个集检测、可视、响应处置于一体的大数据安全分析平台。产品以大数据分析为核心，支持主流的安全设备、网络设备、操作系统等多源数据接入，利用大数据、关联分析、告警降噪等技术，实现海量数据的统一挖掘分析</p>\n</li>\n</ul>\n<p><strong>云网络</strong></p>\n<p>云网络包括私有云和公有云</p>\n<ul>\n<li>云主机安全</li>\n<li>云防火墙</li>\n<li>云堡垒机</li>\n<li>云蜜罐</li>\n<li>云 DDOS 防护</li>\n<li>等等</li>\n</ul>\n<h3 id=\"绿盟设备\"><a href=\"#绿盟设备\" class=\"headerlink\" title=\"绿盟设备\"></a>绿盟设备</h3><ul>\n<li>堡垒机 SAS-H Series，堡垒机采用“物理旁路，逻辑串联”的部署思路</li>\n<li>绿盟威胁情报云 NTI <a href=\"https://nti.nsfocus.com/\">https://nti.nsfocus.com/</a></li>\n<li>抗拒绝服务攻击系统 ADS</li>\n<li>安全和漏洞管理 AIRO</li>\n<li>网络入侵防护系统 IDPS</li>\n<li>web 应用防火墙</li>\n</ul>\n<h3 id=\"你拿到的cnvd\"><a href=\"#你拿到的cnvd\" class=\"headerlink\" title=\"你拿到的cnvd\"></a>你拿到的cnvd</h3><h3 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"**工作经历\"></a>**工作经历</h3><p>安全服务工程师</p>\n<p>参加渗透测试、地方服务、HW</p>\n<p>根据客户方要求对所给资产进行了详细细致的渗透测试。挖掘漏洞，发现漏洞的第一时间与客户方汇报，使客户方能够及时整改修补问题漏洞，防止造成漏洞危害扩大</p>\n<h3 id=\"攻防演练\"><a href=\"#攻防演练\" class=\"headerlink\" title=\"攻防演练\"></a>攻防演练</h3><p>攻防演练中担任什么角色</p>\n<h3 id=\"护网的分组和流程？\"><a href=\"#护网的分组和流程？\" class=\"headerlink\" title=\"护网的分组和流程？\"></a>护网的分组和流程？</h3><p>护网的分组是在领导小组之下分为防护检测组，综合研判组，应急溯源组。流程大致分为备战，临战，决战三个阶段</p>\n<p><strong>备战阶段</strong>，主要任务是进行两方面的操作，一是减少攻击面，即资产梳理，减少暴露面；二是排查风险点，即通过漏洞扫描，渗透测试，弱口令等进行自查</p>\n<p><strong>临战阶段</strong>，主要任务也大致可以分为两个部分，一是进行内部演练，发现疏忽处并进行相应整改；二是可以适当增加安全设备，比如WAF，IPS，IDS，SOC，堡垒机等</p>\n<p><strong>决战阶段</strong>，作为新人，主要就是坚守岗位，有应急日志就看自己能不能解决，不能就上报，服从上级安排，优化防护，持续整改</p>\n<h3 id=\"简历有护网经历，你能谈谈护网的情况吗\"><a href=\"#简历有护网经历，你能谈谈护网的情况吗\" class=\"headerlink\" title=\"简历有护网经历，你能谈谈护网的情况吗\"></a>简历有护网经历，你能谈谈护网的情况吗</h3><p>参加过护网蓝队，负责事件研判工作，主要使用 ips，ids 等设备做流量监控与日志分析工作判断安全事件是否为误判</p>\n<p>监控、研判、处置、溯源</p>\n<p>对安全管理中心发出的态势排查单进行排查，并将排查结果反馈给安全管理中心，对安全管理中心发出的封堵工单和解封工单进行对应的封堵与解封，每两小时反馈一次排查结果、设备巡检报告、封堵情况。查看呼池 DDOS 设备，记录并排查告警信息</p>\n<h3 id=\"蓝队研判\"><a href=\"#蓝队研判\" class=\"headerlink\" title=\"蓝队研判\"></a>蓝队研判</h3><p>研判工作要充分利用已有安全设备（需要提前了解客户的网络拓扑以及部署设备情况），分析其近期的设备告警，将全部流量日志（日志条件：源地址，目的地址，端口，事件名称，时间，规则 ID，发生 次数等）根据研判标准进行筛选（像挖矿、蠕虫、病毒、拒绝服务这类不太可能为攻击方发起的攻击的事件，直接过滤掉，减少告警数量），一般情况下，真实攻击不可能只持续一次，它一定是长时间、周期性、多 IP 的进行攻击</p>\n<p>对于告警结合威胁情报库如：微步、奇安信威胁情报中心、<strong>绿盟威胁情报云</strong>等对于流量日志的原 IP 地址进行分析，判断其是否为恶意攻击，推荐使用微步的插件，如果确认为攻击行为或者不能确认是否为攻击行为，进行下一步操作，在之前准备好的表格中查找 IP 是否为客户内网部署的设备，如果不是，继续进行下一步，在事件上报平台查看是否有其他人提交过，如果没有，则上报</p>\n<p>然后根据流量日志，对请求数据包和返回数据包分析判断其是否为误报，需要留意 X-Forwarded-For（简称XFF）和 x-real-ip 可以了解些 webshell 工具的流量特征，尤其是免杀 webshell，有可能不会被设备识别</p>\n<p>最后上报事件时，尽可能提供完整的截图，包括源 ip、目的ip，请求包请求体，响应包响应体等重要信息，以方便后续人员研判溯源</p>\n<blockquote>\n<p>注：不要任意忽略内网告警，适当情况下可以往前推排查时间</p>\n</blockquote>\n<h3 id=\"蓝队组成\"><a href=\"#蓝队组成\" class=\"headerlink\" title=\"蓝队组成\"></a>蓝队组成</h3><p>蓝队的主要工作包括前期安全检查、整改与加固，演习期间进行网络安全监测、预警、分析、验证、处置，后期复盘总结现有防护工作中的不足之处，为后续常态化的网络安全防护措施提供优化依据</p>\n<p>监控、研判、处置、溯源</p>\n<h3 id=\"SQL注入检测\"><a href=\"#SQL注入检测\" class=\"headerlink\" title=\"SQL注入检测\"></a>SQL注入检测</h3><p>SQL注入攻击检测可根据入侵事件发生的前后进行区分，在入侵前可以对 Payload 进行检测等方式以预防 SQL 注入攻击。在入侵检测后可以通过对数据库、IIS 日志等进行检查以进行判断</p>\n<p>传统的SQL注入检测方法通常根据经验提取特征，然后基于规则库匹配的方法来检测是否为 SQL 注入语句，其设计一般较为复杂，且规则模式更新频繁，在此采用机器学习的方式尝试对 SQL 注入语句进行检测</p>\n<h3 id=\"DDOS-CC应急思路以及如何防范\"><a href=\"#DDOS-CC应急思路以及如何防范\" class=\"headerlink\" title=\"DDOS CC应急思路以及如何防范\"></a>DDOS CC应急思路以及如何防范</h3><p>目前对于低网络层的 DDoS 攻击有一些有效的防护手段，如丢弃第一次 SYN 包，上流量防护设备，上 WAF 封禁地址等</p>\n<p>比较难缠的是第七层，第八层的 CC 攻击，它会找到目标网站上比较消耗资源的关键位置，重复发起攻击以消耗 CPU&#x2F;内存&#x2F;数据库&#x2F;IO 等资源，目前的应付手段有：</p>\n<ol>\n<li>优化资源消耗高位置的代码</li>\n<li>增加硬件设备</li>\n<li>上云</li>\n<li>购买专业安全公司的安全服务</li>\n<li>除此之外，隐藏服务器的真实 IP、上云 WAF、CDN、 负载均衡等设备，或者暂时将域名解析到公安网警网站等也是可以作为选择方案</li>\n</ol>\n<ul>\n<li>网络设备设施<ul>\n<li>拼带宽，加大带宽，但是成本太高</li>\n<li>使用硬件防火墙</li>\n<li>选用高性能设备</li>\n</ul>\n</li>\n<li>抗 D 思想和方案<ul>\n<li>负载均衡</li>\n<li>花钱买流量清洗服务</li>\n<li>CDN：web 层，比如 cc 攻击</li>\n<li>分布式集群防御</li>\n<li>高防：防大部分攻击，udp、大型的 cc 攻击</li>\n</ul>\n</li>\n<li>预防为主<ul>\n<li>系统漏洞</li>\n<li>系统资源优化</li>\n<li>过滤不必要的服务和端口</li>\n<li>限制特定流量：检查访问来源做适当限制</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"挖矿病毒判断-amp-挖矿常见手段-amp-处理\"><a href=\"#挖矿病毒判断-amp-挖矿常见手段-amp-处理\" class=\"headerlink\" title=\"挖矿病毒判断&amp;挖矿常见手段&amp;处理\"></a>挖矿病毒判断&amp;挖矿常见手段&amp;处理</h3><p><a href=\"https://zhuanlan.zhihu.com/p/139019250\">挖矿病毒，自己搜搜</a></p>\n<p>挖矿木马占用系统资源进行挖矿行为，一般电脑会有以下特征</p>\n<ol>\n<li>系统响应缓慢</li>\n<li>CPU&#x2F;显卡使用率过高</li>\n<li>内存&#x2F;带宽占用高</li>\n</ol>\n<p>登录进可疑主机后，可以通过以下方式确认挖矿木马（即入侵排查流程）</p>\n<ol>\n<li>查看进程（系统命令 ps、Is 有可能被替换）</li>\n<li>检查日志、检查系统用户</li>\n<li>发现异常文件</li>\n</ol>\n<p><strong>挖矿常用手段</strong></p>\n<ol>\n<li>未授权访问或弱口令：Redis 未授权访问、Docker API 未授权访问、Hadoop Yarn 未授权访问、NFS 未授权访问、Rsync 弱口令、PostgreSQL 弱口令、Tomcat 弱口令、SSH 弱口令、Telnet 弱口令、Windows 远程桌面弱口令</li>\n<li>远程命令执行漏洞：WebLogic XML 反序列化漏洞、Jenkins 反序列化、Jboss 远程代码执行、Spring 远程代码执行、ElasticSearch 命令执行、永恒之蓝、Struts2 系列漏洞、常见 CMS 的远程命令执行漏洞</li>\n<li>新爆的高危漏洞：一般每次爆发新的高危漏洞，都会紧跟一波大规模的全网扫描利用和挖矿</li>\n</ol>\n<p><strong>清除挖矿木马</strong></p>\n<p><strong>原因排查</strong></p>\n<p>一旦发现服务器被挖矿，应该首先查看挖矿进程所属的用户，根据挖矿进程的运行用户去排查该用户下是否还运行着其它进程，确定这些进程是否有上述经常被黑客利用的漏洞。如果有常见的漏洞，则应该重点对此进行排查找到原因</p>\n<p><strong>清除木马</strong></p>\n<ol>\n<li><p>及时隔离主机</p>\n<p>部分带有蠕虫功能的挖矿木马在取得本机的控制权后，会以本机为跳板机，对同一局域网内的其他主机进行已知漏洞的扫描和进一步利用， 所以发现挖矿现象后，在不影响业务的前提下应该及时隔离受感染主机，然后进行下一步分析</p>\n</li>\n<li><p>删除文件、阻断与矿池通讯</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iptables -A INPUT -S xmr.crypto- pool.fr -j DROP\niptables -A OUTPUT -d xmr.crypto- pool.fr -j DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>清除定时任务</p>\n<p>大部分挖矿进程会在受感染主机中写入定时任务来完成程序的驻留，当安全人员只清除挖矿木马时，定时任务会再次从服务器下载挖矿进程或者直接执行挖矿脚本，导致挖矿进程清除失败</p>\n</li>\n<li><p>清除启动项</p>\n<p>有的挖矿进程为了实现长期驻留，会向系统中添加启动项来确保系统重启后挖矿进程还能重新启动，所以在清除时还应该关注启动项中的内容如果有可疑的启动项，也应该进行排查，确认是挖矿进程后，对其进行清除</p>\n</li>\n<li><p>kill 挖矿进程</p>\n<p>对于单进程挖矿程序，直接结束挖矿进程即可。但是对于大多数的挖矿进程，如果挖矿进程有守护进程，应先杀死守护进程再杀死挖矿进程，避免清除不彻底<br>在实际的清除工作中，应找到本机上运行的挖矿脚本，根据脚本的执行流程确定木马的驻留方式， 并按照顺序进行清除， 避免清除不彻底</p>\n</li>\n<li><p>清除公钥文件</p>\n<p>在用户 home 目录的 .ssh 目录下放置 authoruzed_keys 文件，从而免密登录该机器也是一种常见的保持服务器控制权的手段。在排查过程中应该查看该文件中是否有可疑公钥信息，有的话直接删除，避免攻击者再次免密登录该主机</p>\n</li>\n</ol>\n<h3 id=\"服务器存在webshell，如何处理？\"><a href=\"#服务器存在webshell，如何处理？\" class=\"headerlink\" title=\"服务器存在webshell，如何处理？\"></a>服务器存在webshell，如何处理？</h3><p>网站被植入 webshell，意味着网站存在可利用的高危漏洞，攻击者通过利用漏洞入侵网站，写入 webshell 接管网站的控制权</p>\n<ol>\n<li>及时隔离主机</li>\n<li>定位事件范围，查看文件 webshell 文件的创建时间，对 webshell 取证样本</li>\n<li>通过创建时间结合日志分析可疑行为，以及启动用户的其他进程确定漏洞</li>\n<li>清除 webshell 及残留文件，修复漏洞，参考上题</li>\n</ol>\n<h3 id=\"排查-shell-应该用什么命令来进行排查\"><a href=\"#排查-shell-应该用什么命令来进行排查\" class=\"headerlink\" title=\"排查 shell 应该用什么命令来进行排查\"></a>排查 shell 应该用什么命令来进行排查</h3><p>find 命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> /var/www/html -name <span class=\"token string\">\"*.php\"</span> <span class=\"token operator\">|</span><span class=\"token function\">xargs</span> <span class=\"token function\">egrep</span> <span class=\"token string\">'assert|eval|phpinfo\\(\\)|\\(base64_decoolcode|shell_exec|passthru|file_put_contents\\(\\.\\*\\$|base64_decode\\('</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"如何检测webshell\"><a href=\"#如何检测webshell\" class=\"headerlink\" title=\"如何检测webshell\"></a>如何检测webshell</h3><p><strong>主机层面</strong></p>\n<ul>\n<li><p>静态检测</p>\n<p>静态检测通过匹配特征码，特征值，危险函数函数来查找 webshell 的方法，只能查找已知的 webshell</p>\n</li>\n<li><p>动态检测</p>\n<p>webshell 传到服务器了，在执行函数时这些对于系统调用、系统配置、数据库、文件的操作动作都是可以作为判断依据</p>\n</li>\n<li><p>日志检测</p>\n<p>使用 webshell 一般不会在系统日志中留下记录，但是会在网站的 web 日志中留下 webshell 页面的访问数据和数据提交记录</p>\n</li>\n<li><p>语法检测</p>\n<p>语法语义分析形式，是根据 php 语言扫描编译的实现方式，进行剥离代码、注释，分析变量、函数、字符串、语言结构的分析方式，来实现关键危险函数的捕捉方式这样可以完美解决漏报的情况但误报上</p>\n</li>\n</ul>\n<p><strong>流量层面</strong></p>\n<h3 id=\"Webshell管理工具的流量特征\"><a href=\"#Webshell管理工具的流量特征\" class=\"headerlink\" title=\"Webshell管理工具的流量特征\"></a>Webshell管理工具的流量特征</h3><p><a href=\"https://www.freebuf.com/articles/web/213905.html\">冰蝎动态二进制加密WebShell特征分析</a></p>\n<p><a href=\"https://www.freebuf.com/column/204796.html\">常见WebShell客户端的流量特征及检测思路</a></p>\n<p><strong>菜刀</strong></p>\n<p>菜刀 webshell 只使用了 url 编码 + base64 编码</p>\n<p>shell 特征就是传输参数名为 z0，还存在<code>int_set(&quot;display_erros&quot;,&quot;0&quot;)</code>字符串特征</p>\n<p><strong>蚁剑</strong></p>\n<p>默认的蚁剑 shell，连接时会请求两次，其请求体只是经过 url 编码，其流量中也存在和蚁剑一样的代码</p>\n<p>第一次请求，关闭报错和 magic_quotes，接下来去获取主机的信息</p>\n<p>第二次请求，会把主机目录列出来</p>\n<p><strong>冰蝎2.0</strong></p>\n<p>使用 aes 加密发起三次请求</p>\n<p>第一次请求服务端产生密钥写入 session，session 和当前会话绑定，不同的客户端的密钥也是不同的</p>\n<p>第二次请求是为了获取 key，第三次使用 key 的 aes 加密进行通信</p>\n<p><strong>冰蝎3.0</strong></p>\n<p>使用 aes 加密发起两次请求</p>\n<p>3.0 分析流量发现相比 2.0 少了动态密钥的获取的请求，不再使用随机生成 key，改为取连接密码的 md5 加密值的前 16 位作为密钥</p>\n<p>一次请求为判断是否可以建立连接，少了俩次 get 获取冰蝎动态密钥的行为，第二次发送 phpinfo 等代码执行，获取网站的信息</p>\n<p><strong>哥斯拉</strong></p>\n<p>支持 n 种加密</p>\n<p>采用了和冰蝎 3.0 一样的密钥交换方式，哥斯拉建立连接时会发起三次请求，第一次请求数据超级长，建立 session，第二三次请求确认连接</p>\n<h3 id=\"常见端口漏洞\"><a href=\"#常见端口漏洞\" class=\"headerlink\" title=\"常见端口漏洞\"></a>常见端口漏洞</h3><p><strong>数据库类（扫描弱口令）</strong></p>\n<ul>\n<li>1433：MSSQL</li>\n<li>1521：Oracle</li>\n<li>3306：Mysql</li>\n<li>5432：PostgreSQL</li>\n</ul>\n<p><strong>特殊服务类（未授权&#x2F;命令执行）</strong></p>\n<ul>\n<li>443：ssl 心脏滴血</li>\n<li>873：Rsync 未授权</li>\n<li>5984：CouchDB http：&#x2F;&#x2F;xxx:5984&#x2F;_utils&#x2F;</li>\n<li>6379：Redis 未授权</li>\n<li>7001、7002：Weblogic 默认弱口令</li>\n<li>8088：Hadoop Yarn 资源管理系统 REST API 存在未授权</li>\n<li>8161：Apache ActiveMQ 未授权、弱口令，put 文件上传，move 文件移动</li>\n<li>9200、9300：elasticsearch 命令执行</li>\n<li>11211：Memcache 未授权，telnet ip 就可以获得服务器敏感信息</li>\n<li>27017、27018：Mongodb 未授权</li>\n<li>50000：SAP 命令执行</li>\n<li>50070、50030 Hadoop 未授权访问</li>\n</ul>\n<p><strong>常用端口类（弱口令&#x2F;端口爆破）</strong></p>\n<ul>\n<li>21：FTP 弱口令，匿名 anonymous&#x2F;空登录，以及 ms12-073</li>\n<li>25：SMTP 简单邮件传输服务器端口</li>\n<li>23：Telnet 的端口，Telnet 是一种可以远程登录并管理远程机器的服务</li>\n<li>22：ssh 端口，PcAnywhere 建立 TCP 和这一端口的连接可能是为了寻找 ssh，这一服务有许多弱点</li>\n<li>53：dns 端口</li>\n<li>139：属于 TCP 协议，是为 NetBIOS Session Service 提供的，主要提供 Windows 文件和打印机共享以及 Unix 中的 Samba 服务</li>\n<li>445：网络共享 smb 服务，尝试利用 ms08067，ms17010 等以及 IPC$ 攻击手段</li>\n<li>2601、2604：zebra 路由，默认密码 zebra</li>\n</ul>\n<h3 id=\"三次握手与四次挥手\"><a href=\"#三次握手与四次挥手\" class=\"headerlink\" title=\"三次握手与四次挥手\"></a>三次握手与四次挥手</h3><p><a href=\"https://www.eet-china.com/mp/a44399.html\">https://www.eet-china.com/mp/a44399.html</a></p>\n<p>背景：TCP 位于传输层，作用是提供可靠的字节流服务，为了准确无误地将数据送达目的地，TCP 协议采纳三次握手四次挥手策略</p>\n<p><strong>三次握手（three-way handshaking）</strong></p>\n<p>TCP 三次握手，其实就是 TCP 应用在发送数据前，通过 TCP 协议跟通信对方协商好连接信息，建立起 TCP 的连接关系</p>\n<ol>\n<li>第一次握手：客户端发送 <code>SYN</code> 报文，并进入 <code>SYN_SENT</code> 状态，等待服务器的确认</li>\n<li>第二次握手：服务器收到 <code>SYN</code> 报文，需要给客户端发送 <code>ACK</code> 确认报文，同时服务器也要向客户端发送一个 <code>SYN</code> 报文，所以也就是向客户端发送 <code>SYN + ACK</code> 报文，此时服务器进入 <code>SYN_RCVD</code> 状态</li>\n<li>第三次握手：客户端收到 <code>SYN + ACK</code> 报文，向服务器发送确认包，客户端进入 <code>ESTABLISHED</code> 状态。待服务器收到客户端发送的 <code>ACK</code> 包也会进入 <code>ESTABLISHED</code> 状态，完成三次握手</li>\n</ol>\n<p><strong>四次挥手（Four-Way-Wavehand）</strong></p>\n<p>当我们的应用程序不需要数据通信了，就会发起断开 TCP 连接。建立一个连接需要三次握手，而终止一个连接需要经过四次挥手</p>\n<ol>\n<li>第一次挥手：客户端发送一个 <code>FIN</code>，用来关闭客户端到服务端的数据传送，客户端进入 <code>FIN_WAIT_1</code> 状态</li>\n<li>第二次挥手：服务端收到 <code>FIN</code> 后，发送一个 <code>ACK</code> 给客户端，确认序号为收到序号 +1（与SYN相同，一个FIN占用一个序号），服务端进入 <code>CLOSE_WAIT</code> 状态</li>\n<li>第三次挥手：服务端发送一个 <code>FIN</code>，用来关闭服务端到 客户端的数据传送，服务端进入 <code>LAST_ACK</code> 状态</li>\n<li>第四次挥手：客户端收到 <code>FIN</code> 后，客户端进入 <code>TIME_WAIT</code> 状态，接着发送一个 <code>ACK</code> 给服务端，确认序号为收到序号 +1，服务端进入 <code>CLOSED</code> 状态，完成四次挥手</li>\n</ol>\n<h3 id=\"一个大范围影响的0day被曝光，作为甲方安全工程师，应该如何处理-★★\"><a href=\"#一个大范围影响的0day被曝光，作为甲方安全工程师，应该如何处理-★★\" class=\"headerlink\" title=\"一个大范围影响的0day被曝光，作为甲方安全工程师，应该如何处理(★★)\"></a>一个大范围影响的0day被曝光，作为甲方安全工程师，应该如何处理(★★)</h3><ol>\n<li>首先是评估 0day 对自身系统的影响（这部分评估需要根据漏洞利用的利用点、是否需要交互、是否会影响系统的 CIA，是否有在野利用 poc，影响资产是否暴露在公网等很多因素决定，详情可以参考 CVSS ）</li>\n<li>如果确定有影响的话且有 poc，第一件事是先分析 poc 执行后会在什么地方留下痕迹，我们有什么样的设备去采集这些痕迹所留下的数据，比如说 ntlm relay 这种，可以考虑从 Windows 事件日志当中 event_id 等于 4769 的事件入手编写对应的规则，这样的话可以利用 SIEM 或者实时日志分析平台跑起来，可以建立起初步的感知防线，后期触发告警，人肉运营也可以快速止损</li>\n<li>日常建立完整的纵深防御体系，不要依赖于某一道防线</li>\n</ol>\n<h3 id=\"服务器操作系统的安全防范？\"><a href=\"#服务器操作系统的安全防范？\" class=\"headerlink\" title=\"服务器操作系统的安全防范？\"></a>服务器操作系统的安全防范？</h3><ol>\n<li>停止运行不需要的软件（很可能成为外部攻击的入口）</li>\n<li>定期实施漏洞防范措施（选定软件时确认软件的升级状况，确定打补丁方式，关注各种漏洞信息，确认漏洞后调查补丁状况以及防范对策，并制定对应计划）</li>\n<li>对不需要对外公开的端口或者服务加以访问限制（通过端口扫描确认各端口服务状态）</li>\n<li>提高认证强度</li>\n</ol>\n<h3 id=\"怎么发现有没有被攻击\"><a href=\"#怎么发现有没有被攻击\" class=\"headerlink\" title=\"怎么发现有没有被攻击\"></a>怎么发现有没有被攻击</h3><p>攻击判断可以建立在设备的基础上，利用设备的告警，如果没有设备的话可以参考以下</p>\n<p>网站被攻击：网站被跳转到赌博网站，网站首页被篡改，百度快照被改，网站被植入 webshell 脚本木马，网站被 DDOS、CC 压力攻击</p>\n<p>服务器被黑：服务器系统中木马病毒，服务器管理员账号密码被改，服务器被攻击者远程控制，服务器的带宽向外发包，服务器被流量攻击，ARP攻击（目前这种比较少了，现在都是基于阿里云，百度云，腾讯云等云服务器）</p>\n<p>对登录记录、系统日志、web 日志等进行分析</p>\n<h2 id=\"⬆️细节题\"><a href=\"#⬆️细节题\" class=\"headerlink\" title=\"⬆️细节题\"></a>⬆️细节题</h2><h3 id=\"你能大概说一下，比如数据包或者日志，你的分析思路是什么，以及你会用到哪些工具或者那些网站进行查询？\"><a href=\"#你能大概说一下，比如数据包或者日志，你的分析思路是什么，以及你会用到哪些工具或者那些网站进行查询？\" class=\"headerlink\" title=\"你能大概说一下，比如数据包或者日志，你的分析思路是什么，以及你会用到哪些工具或者那些网站进行查询？\"></a>你能大概说一下，比如数据包或者日志，你的分析思路是什么，以及你会用到哪些工具或者那些网站进行查询？</h3><p>用流量监测的安全设备，比如天眼，查看报文，分析报文里和 host 和网站目录路径，查看是否可疑，使用微步查询 host 是否为恶意，使用 wireshark 对数据包深度分析</p>\n<p>看一下请求的网站路径，源 IP 与目的 IP 地址，host 字段的值以及发包内容等</p>\n<p>工具有 wireshark，网站的话微步在线等威胁情报中心</p>\n<h3 id=\"文件上传和命令执行，有看过相关日志吗\"><a href=\"#文件上传和命令执行，有看过相关日志吗\" class=\"headerlink\" title=\"文件上传和命令执行，有看过相关日志吗\"></a>文件上传和命令执行，有看过相关日志吗</h3><p>文件：可能在系统有上传功能或者有文本编辑器，看一下是否有 base64 加密或者 url 加密，解码验证一下是否有恶意代码</p>\n<p>系统日志：有没有 web 容器做了一些危险行为，比如 bash 反弹 shell 等</p>\n<p>网络应用日志：有没有异常的网站文件，类似 webshell 等，<strong>就有可能是命令执行</strong></p>\n<h3 id=\"windows日志分析工具\"><a href=\"#windows日志分析工具\" class=\"headerlink\" title=\"windows日志分析工具\"></a>windows日志分析工具</h3><p>Log Parser、LogParser Lizard、Event Log Explorer</p>\n<h3 id=\"Linux日志分析技巧命令\"><a href=\"#Linux日志分析技巧命令\" class=\"headerlink\" title=\"Linux日志分析技巧命令\"></a>Linux日志分析技巧命令</h3><ol>\n<li><p>定位有多少IP在爆破主机的root帐号：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token string\">\"Failed password for root\"</span> /var/log/secure <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $11&#125;'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> -c <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -nr <span class=\"token operator\">|</span> <span class=\"token function\">more</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>定位有哪些IP在爆破：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token string\">\"Failed password\"</span> /var/log/secure<span class=\"token operator\">|</span><span class=\"token function\">grep</span> -E -o <span class=\"token string\">\"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\"</span><span class=\"token operator\">|</span><span class=\"token function\">uniq</span> -c<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>爆破用户名字典是什么？</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token string\">\"Failed password\"</span> /var/log/secure<span class=\"token operator\">|</span>perl -e <span class=\"token string\">'while($_=&lt;>)&#123; /for(.*?) from/; print\"$1\\n\";&#125;'</span><span class=\"token operator\">|</span><span class=\"token function\">uniq</span> -c<span class=\"token operator\">|</span><span class=\"token function\">sort</span> -nr<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>登录成功的IP有哪些</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token string\">\"Accepted \"</span> /var/log/secure <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $11&#125;'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> -c <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -nr <span class=\"token operator\">|</span> <span class=\"token function\">more</span>\n登录成功的日期、用户名、IP：\n<span class=\"token function\">grep</span> <span class=\"token string\">\"Accepted \"</span> /var/log/secure <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $1,$2,$3,$9,$11&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>增加一个用户kali日志：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Jul <span class=\"token number\">10</span> 00:12:15 localhost useradd<span class=\"token punctuation\">[</span><span class=\"token number\">2382</span><span class=\"token punctuation\">]</span>: new group: <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span>kali, <span class=\"token assign-left variable\">GID</span><span class=\"token operator\">=</span><span class=\"token number\">1001</span>\nJul <span class=\"token number\">10</span> 00:12:15 localhost useradd<span class=\"token punctuation\">[</span><span class=\"token number\">2382</span><span class=\"token punctuation\">]</span>: new user: <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span>kali, <span class=\"token assign-left variable\"><span class=\"token environment constant\">UID</span></span><span class=\"token operator\">=</span><span class=\"token number\">1001</span>, <span class=\"token assign-left variable\">GID</span><span class=\"token operator\">=</span><span class=\"token number\">1001</span>,\n<span class=\"token assign-left variable\">home</span><span class=\"token operator\">=</span>/home/kali\n, <span class=\"token assign-left variable\">shell</span><span class=\"token operator\">=</span>/bin/bash\nJul <span class=\"token number\">10</span> 00:12:58 localhost passwd: pam_unix<span class=\"token punctuation\">(</span>passwd:chauthtok<span class=\"token punctuation\">)</span>: password changed <span class=\"token keyword\">for</span> kali\n<span class=\"token comment\">#grep \"useradd\" /var/log/secure</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>删除用户kali日志：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Jul <span class=\"token number\">10</span> 00:14:17 localhost userdel<span class=\"token punctuation\">[</span><span class=\"token number\">2393</span><span class=\"token punctuation\">]</span>: delete user <span class=\"token string\">'kali'</span>\nJul <span class=\"token number\">10</span> 00:14:17 localhost userdel<span class=\"token punctuation\">[</span><span class=\"token number\">2393</span><span class=\"token punctuation\">]</span>: removed group <span class=\"token string\">'kali'</span> owned by <span class=\"token string\">'kali'</span>\nJul <span class=\"token number\">10</span> 00:14:17 localhost userdel<span class=\"token punctuation\">[</span><span class=\"token number\">2393</span><span class=\"token punctuation\">]</span>: removed shadow group <span class=\"token string\">'kali'</span> owned by <span class=\"token string\">'kali'</span>\n<span class=\"token comment\"># grep \"userdel\" /var/log/secure</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>su切换用户：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Jul <span class=\"token number\">10</span> 00:38:13 localhost su: pam_unix<span class=\"token punctuation\">(</span>su-l:session<span class=\"token punctuation\">)</span>: session opened <span class=\"token keyword\">for</span> user good by\nroot<span class=\"token punctuation\">(</span>uid<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nsudo授权执行:\n<span class=\"token function\">sudo</span> -l\nJul <span class=\"token number\">10</span> 00:43:09 localhost sudo: good <span class=\"token builtin class-name\">:</span> <span class=\"token assign-left variable\">TTY</span><span class=\"token operator\">=</span>pts/4 <span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PWD</span></span><span class=\"token operator\">=</span>/home/good <span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">USER</span></span><span class=\"token operator\">=</span>root <span class=\"token punctuation\">;</span>\n<span class=\"token assign-left variable\">COMMAND</span><span class=\"token operator\">=</span>/sbin/shutdown -r now<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"给你一个比较大的日志，应该如何分析\"><a href=\"#给你一个比较大的日志，应该如何分析\" class=\"headerlink\" title=\"给你一个比较大的日志，应该如何分析\"></a>给你一个比较大的日志，应该如何分析</h3><ul>\n<li>攻击规则匹配，通过正则匹配日志中的攻击请求</li>\n<li>统计方法，统计请求出现次数，次数少于同类请求平均次数则为异常请求</li>\n<li>白名单模式，为正常请求建立白名单，不在名单范围内则为异常请求</li>\n<li>HMM 模型，类似于白名单，不同点在于可对正常请求自动化建立模型，从而通过正常模型找出不匹配者则为异常请求</li>\n<li>借助日志分析工具，如 LogForensics 腾讯实验室 <a href=\"https://security.tencent.com/index.php/opensource/detail/15\">https://security.tencent.com/index.php/opensource/detail/15</a></li>\n</ul>\n<h3 id=\"Windows在应急响应中的安全日志以及对应场景\"><a href=\"#Windows在应急响应中的安全日志以及对应场景\" class=\"headerlink\" title=\"Windows在应急响应中的安全日志以及对应场景\"></a>Windows在应急响应中的安全日志以及对应场景</h3><h3 id=\"设备误报如何处理\"><a href=\"#设备误报如何处理\" class=\"headerlink\" title=\"设备误报如何处理\"></a>设备误报如何处理</h3><p>（日志）</p>\n<h3 id=\"Windows和Linux的日志文件放在哪里\"><a href=\"#Windows和Linux的日志文件放在哪里\" class=\"headerlink\" title=\"Windows和Linux的日志文件放在哪里\"></a>Windows和Linux的日志文件放在哪里</h3><ul>\n<li><p>Windows 主要有以下三类日志记录系统事件：应用程序日志、系统日志和安全日志</p>\n<p>系统日志：<code> %SystemRoot%\\System32\\Winevt\\Logs\\System.evtx</code></p>\n<p>应用程序日志：<code>%SystemRoot%\\System32\\Winevt\\Logs\\Application.evtx</code></p>\n<p>安全日志：<code>%SystemRoot%\\System32\\Winevt\\Logs\\Security.evtx</code></p>\n</li>\n<li><p>Linux</p>\n<p>日志默认存放位置：<code>/var/log/</code><br>查看日志配置情况：more &#x2F;etc&#x2F;rsyslog.conf</p>\n</li>\n</ul>\n<h3 id=\"常见中间件的配置文件路径\"><a href=\"#常见中间件的配置文件路径\" class=\"headerlink\" title=\"常见中间件的配置文件路径\"></a>常见中间件的配置文件路径</h3><ul>\n<li>apache：<code>/etc/httpd/conf</code></li>\n<li>nginx：<code>/etc/nginx</code></li>\n<li>iis7：<code>C:\\Windows\\System32\\inetsrv\\config\\</code></li>\n</ul>\n<h3 id=\"如何查看系统内存-shell\"><a href=\"#如何查看系统内存-shell\" class=\"headerlink\" title=\"如何查看系统内存 shell\"></a>如何查看系统内存 shell</h3><ul>\n<li>文章汇总：<a href=\"https://blog.csdn.net/shuteer_xu/article/details/117458250\">link</a></li>\n<li>查杀内存马：<a href=\"https://gv7.me/articles/2020/kill-java-web-filter-memshell/\">link</a></li>\n<li>php、python、java内存马分析：<a href=\"https://www.geekby.site/2021/09/webshell%E5%86%85%E5%AD%98%E9%A9%AC%E5%88%86%E6%9E%90/\">link</a></li>\n</ul>\n<h3 id=\"Java-内存马排查\"><a href=\"#Java-内存马排查\" class=\"headerlink\" title=\"Java 内存马排查\"></a>Java 内存马排查</h3><p><a href=\"https://www.freebuf.com/articles/web/274466.html\">https://www.freebuf.com/articles/web/274466.html</a></p>\n<p>如果我们通过检测工具或者其他手段发现了一些内存webshell的痕迹，需要有一个排查的思路来进行跟踪分析，也是根据各类型的原理，列出一个排查思路。</p>\n<blockquote>\n<p>如果是jsp注入，日志中排查可疑jsp的访问请求。</p>\n<p>如果是代码执行漏洞，排查中间件的error.log，查看是否有可疑的报错，判断注入时间和方法</p>\n<p>根据业务使用的组件排查是否可能存在java代码执行漏洞以及是否存在过webshell，排查框架漏洞，反序列化漏洞。</p>\n<p>如果是servlet或者spring的controller类型，根据上报的webshell的url查找日志（日志可能被关闭，不一定有），根据url最早访问时间确定被注入时间。</p>\n<p>如果是filter或者listener类型，可能会有较多的404但是带有参数的请求，或者大量请求不同url但带有相同的参数，或者页面并不存在但返回200</p>\n</blockquote>\n<h3 id=\"如何修改WEB端口？如果不能修改端口还有什么利用方法？\"><a href=\"#如何修改WEB端口？如果不能修改端口还有什么利用方法？\" class=\"headerlink\" title=\"如何修改WEB端口？如果不能修改端口还有什么利用方法？\"></a>如何修改WEB端口？如果不能修改端口还有什么利用方法？</h3><p>修改 web 端口：修改中间件配置文件中的 web 服务端口即可</p>\n<p>不能修改的话可以使用端口映射，使用 nginx 反向代理也可以</p>\n<h3 id=\"获得文件读取漏洞，通常会读哪些文件，Linux和windows都谈谈\"><a href=\"#获得文件读取漏洞，通常会读哪些文件，Linux和windows都谈谈\" class=\"headerlink\" title=\"获得文件读取漏洞，通常会读哪些文件，Linux和windows都谈谈\"></a>获得文件读取漏洞，通常会读哪些文件，Linux和windows都谈谈</h3><p><strong>通用</strong></p>\n<ul>\n<li>找 Web 应用的配置文件，指不定有外联数据库</li>\n<li>找 Web 中间件的配置文件，指不定有 Tomcat 配置界面的用户密码</li>\n<li>找系统文件</li>\n</ul>\n<p><strong>linux</strong></p>\n<ul>\n<li><p><code>etc/passwd、etc/shadow</code>直接读密码</p>\n</li>\n<li><p><code>/etc/hosts</code> # 主机信息</p>\n</li>\n<li><p><code>/root/.bashrc</code> # 环境变量</p>\n</li>\n<li><p><code>/root/.bash_history</code> # 还有root外的其他用户</p>\n</li>\n<li><p><code>/root/.viminfo</code> # vim 信息</p>\n</li>\n<li><p><code>/root/.ssh/id_rsa</code> # 拿私钥直接ssh</p>\n</li>\n<li><p><code>/proc/xxxx/cmdline</code> # 进程状态枚举 xxxx 可以为0000-9999 使用burpsuite</p>\n</li>\n<li><p>数据库 config 文件</p>\n</li>\n<li><p>web 日志 <code>access.log, error.log</code></p>\n</li>\n<li><p>ssh 日志</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">/root/.ssh/id_rsa\n/root/.ssh/id_rsa.pub\n/root/.ssh/authorized_keys\n/etc/ssh/sshd_config\n/var/log/secure\n/etc/sysconfig/network-scripts/ifcfg-eth0\n/etc/syscomfig/network-scripts/ifcfg-eth1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p><code>/var/lib/php/sess_PHPSESSID</code> # 非常规问题 session 文件( 参考 平安科技的一道session包含 <a href=\"http://www.jianshu.com/p/2c24ea34566b\">http://www.jianshu.com/p/2c24ea34566b</a>)</p>\n</li>\n</ul>\n<p><strong>windows</strong></p>\n<ul>\n<li><code>C:\\boot.ini</code> &#x2F;&#x2F;查看系统版本</li>\n<li><code>C:\\Windows\\System32\\inetsrv\\MetaBase.xml</code> &#x2F;&#x2F;IIS 配置文件</li>\n<li><code>C:\\Windows\\repair\\sam</code> &#x2F;&#x2F;存储系统初次安装的密码</li>\n<li><code>C:\\Program Files\\mysql\\my.ini</code> &#x2F;&#x2F;Mysql 配置</li>\n<li><code>C:\\Program Files\\mysql\\data\\mysql\\user.MY D</code> &#x2F;&#x2F;Mysql root</li>\n<li><code>C:\\Windows\\php.ini</code> &#x2F;&#x2F;php 配置信息</li>\n<li><code>C:\\Windows\\my.ini</code> &#x2F;&#x2F;Mysql 配置信息</li>\n</ul>\n<h3 id=\"如何分析被代理出来的数据流\"><a href=\"#如何分析被代理出来的数据流\" class=\"headerlink\" title=\"如何分析被代理出来的数据流\"></a>如何分析被代理出来的数据流</h3><p>分析数据包请求头中的 xff、referer 等收集有用的信息</p>\n<p><a href=\"https://www.freebuf.com/articles/web/245585.html\">基于网络欺骗与浏览器指纹的WEB攻击溯源</a></p>\n<h3 id=\"windows端口进程间转换\"><a href=\"#windows端口进程间转换\" class=\"headerlink\" title=\"windows端口进程间转换\"></a>windows端口进程间转换</h3><p>端口-&gt;进程</p>\n<ol>\n<li><code>netstat -ano | findstr “port”</code>查看目前的网络连接，定位可疑的 ESTABLISHED</li>\n<li>根据<code>netstat </code>定位出的 pid，再通过<code>tasklist</code>命令进行进程定位<code> tasklist | findstr “PID”</code></li>\n</ol>\n<p><img src=\"https://s2.loli.net/2022/05/25/NVM7Jl4bv8sqyiK.png\" alt=\"image-20220103194348302\"></p>\n<h3 id=\"查看进程对应的程序位置\"><a href=\"#查看进程对应的程序位置\" class=\"headerlink\" title=\"查看进程对应的程序位置\"></a>查看进程对应的程序位置</h3><p>任务管理器–选择对应进程–右键打开文件位置运行输入 wmic，cmd界面 输入 process</p>\n<p>查看 Windows 服务所对应的端口</p>\n<p><code>%system%/system32/drivers/etc/services</code>（一般 %system% 就是 C:\\Windows）</p>\n<h3 id=\"查看windows进程的方法\"><a href=\"#查看windows进程的方法\" class=\"headerlink\" title=\"查看windows进程的方法\"></a>查看windows进程的方法</h3><ol>\n<li>开始 – 运行 – 输入<code>msinfo32</code> 命令，依次点击 “软件环境 – 正在运行任务” 就可以查看到进程的详细信息，比如进程路径、进程ID、文件创建日期以及启动时间等</li>\n<li>打开D盾_web查杀工具，进程查看，关注没有签名信息的进程</li>\n<li>通过微软官方提供的 Process Explorer 等工具进行排查</li>\n</ol>\n<p>查看<strong>可疑的进程</strong>及其子进程。可以通过观察以下内容：</p>\n<ul>\n<li>没有签名验证信息的进程</li>\n<li>没有描述信息的进程</li>\n<li>进程的属主</li>\n<li>进程的路径是否合法</li>\n<li>CPU 或内存资源占用长时间过高的进程</li>\n</ul>\n<h3 id=\"你能说明文件上传的原理吗？\"><a href=\"#你能说明文件上传的原理吗？\" class=\"headerlink\" title=\"你能说明文件上传的原理吗？\"></a>你能说明文件上传的原理吗？</h3><ul>\n<li>PHP：如果系统中存在可以上传文件的功能点，就可以上传后门脚本文件，通过一些方法绕过上传限制，如果能访问后门的的话，系统存在文件上传漏洞，可以借助后门执行命令</li>\n<li>Java：上传 jsp 代码</li>\n<li>Asp&#x2F;Aspx</li>\n<li>Python：因为脚本需要译后生成 pyc 字节码文件，所以不存在文件上传</li>\n</ul>\n<h3 id=\"文件上传攻击特征？\"><a href=\"#文件上传攻击特征？\" class=\"headerlink\" title=\"文件上传攻击特征？\"></a>文件上传攻击特征？</h3><p>能够上传文件的接口，应用程序对用户上传文件类型不校验或者校验不严格可绕过，导致任意类型文件上传，攻击者可上传 webshell 拿到服务器权限，在这个过程中攻击者必然会上传恶意脚本文件</p>\n<h3 id=\"文件上传加固方法？\"><a href=\"#文件上传加固方法？\" class=\"headerlink\" title=\"文件上传加固方法？\"></a>文件上传加固方法？</h3><ol>\n<li>后端限制文件上传白名单，头像不允许上传 svg</li>\n<li>上传后文件随机重命名，不要输出保存文件位置</li>\n<li>图片文件可以二次渲染，使用对象存储 oss</li>\n<li>文件目录取消执行权限，PHP 设置 basedir</li>\n</ol>\n<h3 id=\"用过Nmap扫描工具吗\"><a href=\"#用过Nmap扫描工具吗\" class=\"headerlink\" title=\"用过Nmap扫描工具吗\"></a>用过Nmap扫描工具吗</h3><p>nmap 扫描基础命令</p>\n<ul>\n<li>-sT TCP (全)连接扫描，准确但留下大量日志记录</li>\n<li>-sS TCP SYN (半)扫描，速度较快，不会留下日志</li>\n<li>-sN null 扫描，标志位全为 0，不适用 Windows</li>\n<li>-sF FIN 扫描，标志位 FIN&#x3D;1，不适用 Windows</li>\n<li>-O 查看目标主机系统版本</li>\n<li>-sV 探测服务版本</li>\n<li>-A 全面扫描</li>\n</ul>\n<p><img src=\"https://s2.loli.net/2022/05/25/rdcNnQ5zoyEqHhK.png\" alt=\"img\"></p>\n<h3 id=\"你做过渗透测试的工作吗？\"><a href=\"#你做过渗透测试的工作吗？\" class=\"headerlink\" title=\"你做过渗透测试的工作吗？\"></a>你做过渗透测试的工作吗？</h3><p>首先信息收集，收集子域名、Whois、C段、旁站、Web 系统指纹识别，然后测试 web 系统的漏洞</p>\n<h3 id=\"暴力破解加固方法？\"><a href=\"#暴力破解加固方法？\" class=\"headerlink\" title=\"暴力破解加固方法？\"></a>暴力破解加固方法？</h3><ol>\n<li>添加强度较高的验证码，不易被破解</li>\n<li>修改密码设置规则，提高用户的密码强度</li>\n<li>同一账号登陆次数锁定，生成锁定日志</li>\n<li>定期排查弱口令</li>\n</ol>\n<h3 id=\"Sql注入加固措施？\"><a href=\"#Sql注入加固措施？\" class=\"headerlink\" title=\"Sql注入加固措施？\"></a>Sql注入加固措施？</h3><p>对于输入的字符进行过滤</p>\n<p>使用 PDO 预编译语句处理</p>\n<h3 id=\"一台主机在内网进行横向攻击，你应该怎么做？\"><a href=\"#一台主机在内网进行横向攻击，你应该怎么做？\" class=\"headerlink\" title=\"一台主机在内网进行横向攻击，你应该怎么做？\"></a>一台主机在内网进行横向攻击，你应该怎么做？</h3><p>确定攻击来源，是不是员工内部误操作，比如询问运维是否有自动化轮训脚本</p>\n<p>如果没有，确定是攻击，结合时间点，根据设备信息，看一下安全事件，进程，流量</p>\n<p>找到问题主机，开始应急响应流程：准备、检测、遏制、根除、恢复、跟踪，具体的操作要交给现场运维去处理</p>\n<h3 id=\"你还用过其他态势感知的产品吗？\"><a href=\"#你还用过其他态势感知的产品吗？\" class=\"headerlink\" title=\"你还用过其他态势感知的产品吗？\"></a>你还用过其他态势感知的产品吗？</h3><p>ips，ids，hids，堡垒机等</p>\n<h3 id=\"命令行工具用的什么比较多？\"><a href=\"#命令行工具用的什么比较多？\" class=\"headerlink\" title=\"命令行工具用的什么比较多？\"></a>命令行工具用的什么比较多？</h3><p>xshell、xftp、finalshell</p>\n<h3 id=\"你用过微步吗？\"><a href=\"#你用过微步吗？\" class=\"headerlink\" title=\"你用过微步吗？\"></a>你用过微步吗？</h3><p>微步在线是一个威胁情报中心，可以通过 ip 或域名查询其是不是恶意的，对于判断恶意链接具有一定的参考性，他还有一个插件可以在页面选中就能进行查询，还是一个比较好用的工具</p>\n<h3 id=\"什么是跨域，JSONP与CORS\"><a href=\"#什么是跨域，JSONP与CORS\" class=\"headerlink\" title=\"什么是跨域，JSONP与CORS\"></a>什么是跨域，JSONP与CORS</h3><p><strong>同源策略</strong></p>\n<p>同源策略：域名、协议、端口均相同</p>\n<p>浏览器执行 JavaScript 脚本时，会检查这个脚本属于那个页面，如果不是同源页面，就不会被执行</p>\n<p><strong>什么是跨域？</strong></p>\n<p>跨域：指的是浏览器不能执行其它网站的脚本，它是由浏览器的同源策略造成的，是浏览器的安全限制！</p>\n<p><strong>JSONP跨域</strong></p>\n<p>利用 js script 标签中 src 属性可以跨域的特性，使用 callback 参数的函数名来接收数据</p>\n<p>只支持 GET 请求，不支持 POST 等其它请求，也不支持复杂请求，只支持简单请求</p>\n<p><strong>CORS跨域</strong></p>\n<p>支持所有的请求，包含 GET、POST、OPTOIN、PUT、DELETE 等既支持复杂请求，也支持简单请求</p>\n<p>JSONP 与 CORS 的使用目的相同，并且都需要服务端和客户端同时支持，但 CORS 的功能更加强大</p>\n<p><strong>JSONP和CORS的优缺点</strong></p>\n<ol>\n<li>JSONP 的主要优势在于对浏览器的支持较好；虽然目前主流浏览器都支持 CORS，但 IE9 及以下不支持 CORS</li>\n<li>JSONP 只能用于获取资源（即只读，类似于 GET 请求）；CORS 支持所有类型的 HTTP 请求，功能完善</li>\n<li>JSONP 只会发一次请求；而对于复杂请求，CORS 会发两次请求</li>\n</ol>\n<p><strong>应用场景</strong></p>\n<p>如果需要兼容IE低版本浏览器，无疑，JSONP</p>\n<p>如果需要对服务端资源进行操作，无疑，CORS</p>\n<p>其他情况的话，根据自己的对需求的分析来决定和使用</p>\n<h3 id=\"http状态与无连接\"><a href=\"#http状态与无连接\" class=\"headerlink\" title=\"http状态与无连接\"></a>http状态与无连接</h3><p><strong>无连接</strong></p>\n<ol>\n<li>每一个访问都是无连接，服务器挨个处理访问队列里的访问，处理完一个就关闭连接，这事儿就完了，然后处理下一个新的</li>\n<li>无连接的含义是限制每次连接只处理一个请求服务器处理完客户的请求，并收到客户的应答后，即断开连接</li>\n</ol>\n<p><strong>无状态</strong></p>\n<ol>\n<li>协议对于事务处理没有记忆能力</li>\n<li>对同一个 url 请求没有上下文关系</li>\n<li>每次的请求都是独立的，它的执行情况和结果与前面的请求和之后的请求是无直接关系的，它不会受前面的请求应答情况直接影响，也不会直接影响后面的请求应答情况</li>\n<li>服务器中没有保存客户端的状态，客户端必须每次带上自己的状态去请求服务器</li>\n</ol>\n<h3 id=\"什么是路由表\"><a href=\"#什么是路由表\" class=\"headerlink\" title=\"什么是路由表\"></a>什么是路由表</h3><p>在计算机网络中，路由表（routing table）或称路由择域信息库（RIB, Routing Information Base），是一个存储在路由器或者联网计算机中的电子表格（文件）或类数据库路由表存储着指向特定网络地址的路径（在有些情况下，还记录有路径的路由度量值）路由表中含有网络周边的拓扑信息路由表建立的主要目标是为了实现路由协议和静态路由选择</p>\n<p>每个路由器中都有一个路由表和 FIB(Forward Information Base) 表：路由表用来决策路由，FIB 用来转发分组路由表中有三类路由：</p>\n<ol>\n<li>链路层协议发现的路由（即是直连路由）</li>\n<li>静态路由</li>\n<li>动态路由协议 RIP、OSRF 发现的路由</li>\n</ol>\n<h3 id=\"非sql数据库\"><a href=\"#非sql数据库\" class=\"headerlink\" title=\"非sql数据库\"></a>非sql数据库</h3><p>Zookeeper，HBase、Redis、MongoDB、Couchbase、LevelDB</p>\n<h3 id=\"常见OA系统\"><a href=\"#常见OA系统\" class=\"headerlink\" title=\"常见OA系统\"></a>常见OA系统</h3><p>PHP：通达OA、泛微 Eoffice</p>\n<p>Java：泛微OA&#x2F;云桥、致远OA、蓝凌OA、用友OA</p>\n<p>ASP：启莱OA</p>\n<h3 id=\"横向越权漏洞的修复\"><a href=\"#横向越权漏洞的修复\" class=\"headerlink\" title=\"横向越权漏洞的修复\"></a>横向越权漏洞的修复</h3><p>横向越权：横向越权指的是攻击者尝试访问与他拥有相同权限的用户的资源</p>\n<p>纵向越权：纵向越权指的是一个低级别攻击者尝试访问高级别用户的资源</p>\n<p>对于纵向越权，我们可以通过设置用户角色，为不同的角色提供不同的权限来避免</p>\n<p>为了防止横向越权，我们可以使用缓存来进行辅助，当登录成功或者进行操作时，我们在缓存中存储一对由用户名和一个唯一的数字组成的数据（token），然后返回放入的唯一数据在重置密码时我们的参数不仅需要用户名和密码还需要前面生成的唯一数字，根据用户名在缓存中取出对应的数字，如果取出的数字和参数中传入的想等，则证明重置的当前用户的密码，否则不是，且不予以重置</p>\n<h3 id=\"如何打击黑灰产工具\"><a href=\"#如何打击黑灰产工具\" class=\"headerlink\" title=\"如何打击黑灰产工具\"></a>如何打击黑灰产工具</h3><ol>\n<li>全面监控和快速响应（溯源）：对黑灰进行长期跟进，了解黑灰产工具的传播链条和路径，第一时间捕获活跃的黑灰产工具（建立特征词监控，数据取样、交叉分析）</li>\n<li>建立软件指纹库，增加风险识别能力</li>\n<li>建立黑灰产情报共享，最大化情报价值</li>\n</ol>\n<h3 id=\"如何反爬\"><a href=\"#如何反爬\" class=\"headerlink\" title=\"如何反爬\"></a>如何反爬</h3><ol>\n<li>后台对访问进行统计，如果单个 IP 访问超过阈值，予以封锁</li>\n<li>后台对访问进行统计，如果单个 session 访问超过阈值，予以封锁</li>\n<li>后台对访问进行统计，如果单个 userAgent 访问超过阈值，予以封锁</li>\n<li>以上的组合</li>\n</ol>\n<h3 id=\"Linux下查找服务端口的命令\"><a href=\"#Linux下查找服务端口的命令\" class=\"headerlink\" title=\"Linux下查找服务端口的命令\"></a>Linux下查找服务端口的命令</h3><p>Linux下查找服务端口的命令？一句话查找80端口服务的命令？</p>\n<p>使用grep 命令 要使用 grep 命令在Linux 中查找指定服务的默认端口号，只需运行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token operator\">&lt;</span>port<span class=\"token operator\">></span> /etc/services\n<span class=\"token function\">grep</span> services /etc/services<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://s2.loli.net/2022/05/25/qZVnLyhwU1mDdXs.png\" alt=\"image-20220107203438844\"></p>\n<h3 id=\"如何发现钓鱼邮件\"><a href=\"#如何发现钓鱼邮件\" class=\"headerlink\" title=\"如何发现钓鱼邮件\"></a>如何发现钓鱼邮件</h3><p><strong>钓鱼邮件发现</strong></p>\n<p>发现途径如下：</p>\n<p>邮件系统异常登录告警、员工上报、异常行为告警、邮件蜜饵告警</p>\n<p>推荐接入微步或奇安信的情报数据。对邮件内容出现的 URL 做扫描，可以发现大量的异常链接</p>\n<h3 id=\"钓鱼邮件处置\"><a href=\"#钓鱼邮件处置\" class=\"headerlink\" title=\"钓鱼邮件处置\"></a>钓鱼邮件处置</h3><p><a href=\"https://www.freebuf.com/articles/es/264037.html\">https://www.freebuf.com/articles/es/264037.html</a></p>\n<ol>\n<li><p>屏蔽办公区域对钓鱼邮件内容涉及站点、URL 访问</p>\n<p>根据办公环境实际情况可以在上网行为管理、路由器、交换机上进行屏蔽</p>\n<p>邮件内容涉及域名、IP 均都应该进行屏蔽</p>\n<p>对访问钓鱼网站的内网 IP 进行记录，以便后续排查溯源可能的后果</p>\n</li>\n<li><p>屏蔽钓鱼邮件</p>\n<p>屏蔽钓鱼邮件来源邮箱域名</p>\n<p>屏蔽钓鱼邮件来源 IP</p>\n<p>有条件的可以根据邮件内容进行屏蔽</p>\n<p>删除还在邮件服务器未被客户端收取钓鱼邮件</p>\n</li>\n<li><p>处理接收到钓鱼邮件的用户</p>\n<ul>\n<li><p>根据钓鱼邮件发件人进行日志回溯</p>\n<p>此处除了需要排查有多少人接收到钓鱼邮件之外，还需要排查是否公司通讯录泄露。采用 TOP500 姓氏撞库发送钓鱼邮件的攻击方式相对后续防护较为简单。如果发现是使用公司通讯录顺序则需要根据通讯录的离职情况及新加入员工排查通讯录泄露时间。毕竟有针对性的社工库攻击威力要比 TOP100、TOP500 大很多</p>\n</li>\n<li><p>通知已接收钓鱼邮件的用户进行处理</p>\n</li>\n<li><p><strong>删除钓鱼邮件</strong></p>\n</li>\n<li><p><strong>系统改密</strong></p>\n</li>\n<li><p><strong>全盘扫毒</strong></p>\n</li>\n</ul>\n</li>\n<li><p>后续：溯源、员工培训提升安全意识</p>\n</li>\n</ol>\n<h3 id=\"如何查看区分是扫描流量和手动流量\"><a href=\"#如何查看区分是扫描流量和手动流量\" class=\"headerlink\" title=\"如何查看区分是扫描流量和手动流量\"></a>如何查看区分是扫描流量和手动流量</h3><p>（扫描数据量大，请求有规律，手动扫描间隔较少）</p>\n<h3 id=\"遇到-exe文件如何处理？\"><a href=\"#遇到-exe文件如何处理？\" class=\"headerlink\" title=\"遇到.exe文件如何处理？\"></a>遇到.exe文件如何处理？</h3><p>首先看它的来源和去向，然后可以下载但不运行，放入微步沙箱中，看是否有后门，若有后门，就用 IDA 反汇编得到恶意攻击者的有用信息，再进一步描绘出攻击者画像进行溯源</p>\n<h3 id=\"Linux-的-Selinux-是什么？如何设置-Selinux？\"><a href=\"#Linux-的-Selinux-是什么？如何设置-Selinux？\" class=\"headerlink\" title=\"Linux 的 Selinux 是什么？如何设置 Selinux？\"></a>Linux 的 Selinux 是什么？如何设置 Selinux？</h3><p>SELinux 是一种安全子系统，它能控制程序只能访问特定文件使用 setup 工具进入图形化关闭搜索或者修改<code>/etc/sysconfig/selinux</code> 文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">SELINUX</span><span class=\"token operator\">=</span>disabled<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>防火墙打开使用 <code>service iptables start</code> 或则<code>/etc/init.d/iptables start</code></p>\n<h3 id=\"iptables-工作在-TCP-x2F-IP-模型中的哪层？\"><a href=\"#iptables-工作在-TCP-x2F-IP-模型中的哪层？\" class=\"headerlink\" title=\"iptables 工作在 TCP&#x2F;IP 模型中的哪层？\"></a>iptables 工作在 TCP&#x2F;IP 模型中的哪层？</h3><p>网络层</p>\n<h3 id=\"日志分析ELK的使用和分析\"><a href=\"#日志分析ELK的使用和分析\" class=\"headerlink\" title=\"日志分析ELK的使用和分析\"></a>日志分析ELK的使用和分析</h3><blockquote>\n<p><a href=\"https://www.zhihu.com/question/21427267\">https://www.zhihu.com/question/21427267</a></p>\n<ul>\n<li>Elasticsearch是个开源分布式搜索引擎，它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。</li>\n<li>Logstash是一个完全开源的工具，他可以对你的日志进行收集、过滤，并将其存储供以后使用（如，搜索）。</li>\n<li>Kibana 也是一个开源和免费的工具，它Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助您汇总、分析和搜索重要数据日志。</li>\n</ul>\n</blockquote>\n<p>举例-阿里规范 用户历史命令记录</p>\n<p>缺点：安全性不够。使用x-pack实现安全认证及权限管理功能</p>\n<h3 id=\"awk-sed的使用\"><a href=\"#awk-sed的使用\" class=\"headerlink\" title=\"awk sed的使用\"></a>awk sed的使用</h3><h3 id=\"Log4j\"><a href=\"#Log4j\" class=\"headerlink\" title=\"Log4j\"></a>Log4j</h3><p>log4j 是 javaweb 的日志组件，用来记录 web 日志</p>\n<p>去指定下载文件的 url 在搜索框或者搜索的 url 里面，加上 ${jndi:ldap:&#x2F;&#x2F;127.0.0.1&#x2F;test} ，log4j 会对这串代码进行表达式解析，给 lookup 传递一个恶意的参数指定，参数指的是比如 ldap 不存在的资源 $ 是会被直接执行的。后面再去指定下载文件的 url，去下载我们的恶意文件。比如是 x.class 下载完成后，并且会执行代码块</p>\n<p>修复：升级 Log4j 到最新版本，根据业务判断是否关闭 lookup</p>\n<h2 id=\"⬆️入侵检测-amp-防御\"><a href=\"#⬆️入侵检测-amp-防御\" class=\"headerlink\" title=\"⬆️入侵检测&amp;防御\"></a>⬆️入侵检测&amp;防御</h2><h3 id=\"WAF产品如何来拦截攻击？\"><a href=\"#WAF产品如何来拦截攻击？\" class=\"headerlink\" title=\"WAF产品如何来拦截攻击？\"></a>WAF产品如何来拦截攻击？</h3><p>Waf 产品有三种</p>\n<ol>\n<li><p>云 Waf</p>\n<p>用户不需要在自己的网络中安装软件程序或部署硬件设备，就可以对网站实施安全防护，它的主要实现方式是<strong>利用 DNS 技术</strong>，通过移交域名解析权来实现安全防护。用户的请求首先发送到云端节点进行检测，如存在异常请求则进行拦截否则将请求转发至真实服务器</p>\n</li>\n<li><p>Web 防护软件</p>\n<p>安装在需要防护的服务器上，实现方式通常是 <strong>Waf 监听端口或以 Web 容器扩展</strong>方式进行请求检测和阻断</p>\n</li>\n<li><p>硬件 Web 防火墙</p>\n<p>Waf <strong>串行部署</strong>在 Web 服务器前端，用于检测、阻断异常流量。常规硬件 Waf 的实现方式是通过<strong>代理技术</strong>代理来自外部的流量</p>\n</li>\n</ol>\n<p>原理都相同，通过部署在 Web 服务器前方串行接入来将 Web 流量牵引到 WAF 设备中进行清洗或者拦截，最终只把正常用户的请求转发给服务器</p>\n<p>当前市场上 Waf 产品核心的防护机制是“规则”，每一个请求、会话，经过抓包，“开包检查”，每一项规则都会检查到，一旦检查不通过，就会被认为是非法访问，拒绝处理</p>\n<h3 id=\"WAF有哪些防护方式？\"><a href=\"#WAF有哪些防护方式？\" class=\"headerlink\" title=\"WAF有哪些防护方式？\"></a>WAF有哪些防护方式？</h3><ul>\n<li><p>Web基础防护</p>\n<p>可防范常规的 web 应用攻击，如 SQL 注入攻击、XSS 跨站攻击等，可检测 webshell，检查 HTTP 上传通道中的网页木马，打开开关即实时生效</p>\n</li>\n<li><p>CC 攻击防护</p>\n<p>可根据 IP、Cookie 或者 Referer 字段名设置灵活的限速策略，有效缓解 CC 攻击</p>\n</li>\n<li><p>精准访问防护</p>\n<p>对常见 HTTP 字段进行条件组合， 支持定制化防护策略如CSRF防护，通过自定义规则的配置，更精准的识别恶意伪造请求、保护网站敏感信息、提高防护精准性</p>\n</li>\n<li><p>IP 黑白名单</p>\n<p>添加终拦截与始终放行的黑白名单 IP，增加防御准确性</p>\n</li>\n<li><p>地理位置访问控制</p>\n<p>添加地理位置访问控制规则，针对来源 IP 进行自定义访问控制</p>\n</li>\n<li><p>网页防篡改</p>\n<p>对网站的静态网页进行缓存配置，当用户访问时返回给用户缓存的正常页面，并随机检测网页是否被篡改</p>\n</li>\n<li><p>网站反爬虫</p>\n<p>动态分析网站业务模型，结合人机识别技术和数据风控手段，精准识别爬虫行为</p>\n</li>\n<li><p>误报屏蔽</p>\n<p>针对特定请求忽略某些攻击检测规则，用于处理误报事件</p>\n</li>\n<li><p>隐私屏蔽</p>\n<p>隐私信息屏蔽，避免用户的密码等信息出现在事件日志中</p>\n</li>\n<li><p>防敏感信息泄露</p>\n<p>防止在页面中泄露用户的敏感信息，例如：用户的身份证号码、手机号码、电子邮箱等</p>\n</li>\n</ul>\n<h3 id=\"不安全的第三方组件的漏洞如何做前置规避？\"><a href=\"#不安全的第三方组件的漏洞如何做前置规避？\" class=\"headerlink\" title=\"不安全的第三方组件的漏洞如何做前置规避？\"></a>不安全的第三方组件的漏洞如何做前置规避？</h3><p>第三方组件缺陷又被归结为供应链安全问题，供应链安全需要多方面考虑。没有万能方案，但是组织可以用分层防御的组合来保护供应链</p>\n<ul>\n<li><p>安全战略评估</p>\n<p>要评估风险与合规性，需要针对业务挑战、需求和目标评估现有的安全治理框架——包括数据隐私、第三方风险和IT法规合规需求及差距。安全风险量化、安全开发、法规和标准合规性以及安全教育和培训是关键</p>\n</li>\n<li><p>事件响应计划与编排</p>\n<p>提前为入侵、关闭或中断做好准备，并拥有稳健的事件响应计划很重要。通过实践、测试和易执行的响应计划和补救措施，防止损失</p>\n</li>\n</ul>\n<p><a href=\"https://www.freebuf.com/articles/neopoints/261681.html\">https://www.freebuf.com/articles/neopoints/261681.html</a></p>\n<h3 id=\"如果现在要你写一个检测命令注入的脚本？\"><a href=\"#如果现在要你写一个检测命令注入的脚本？\" class=\"headerlink\" title=\"如果现在要你写一个检测命令注入的脚本？\"></a>如果现在要你写一个检测命令注入的脚本？</h3><p>你会怎么写，有哪些要注意的地方，如果别人的脚本检测出来了你的脚本没检测出来你觉的你的脚本会存在什么问题，脚本检测过程中如果没有回显你会怎么做</p>\n<h1 id=\"🅰️溯源\"><a href=\"#🅰️溯源\" class=\"headerlink\" title=\"🅰️溯源\"></a>🅰️溯源</h1><p><img src=\"https://s2.loli.net/2022/05/25/2ZAenxgQsu6b7DC.png\" alt=\"image-20220103203355953\"></p>\n<h2 id=\"⬆️基本步骤\"><a href=\"#⬆️基本步骤\" class=\"headerlink\" title=\"⬆️基本步骤\"></a>⬆️基本步骤</h2><h3 id=\"1-攻击源捕获\"><a href=\"#1-攻击源捕获\" class=\"headerlink\" title=\"1.攻击源捕获\"></a>1.攻击源捕获</h3><ul>\n<li>安全设备报警，如扫描IP、威胁阻断、病毒木马、入侵事件等</li>\n<li>日志与流量分析，异常的通讯流量、攻击源与攻击目标等</li>\n<li>服务器资源异常，异常的文件、账号、进程、端口，启动项、计划任务和服务等</li>\n<li>邮件钓鱼，获取恶意文件样本、钓鱼网站 URL 等</li>\n<li>蜜罐系统，获取攻击者 ID、电脑信息、浏览器指纹、行为、意图的相关信息</li>\n</ul>\n<h3 id=\"2-溯源反制手段\"><a href=\"#2-溯源反制手段\" class=\"headerlink\" title=\"2.溯源反制手段\"></a>2.溯源反制手段</h3><ul>\n<li>IP 定位技术<br>根据IP定位物理地址–代理 IP<br>溯源案例：通过 IP 端口扫描，反向渗透服务器进行分析，最终定位到攻击者相关信息</li>\n<li>ID 追踪术<br>ID 追踪术，搜索引擎、社交平台、技术论坛、社工库匹配<br>溯源案例：利用 ID 从技术论坛追溯邮箱，继续通过邮箱反追踪真实姓名，通过姓名找到相关简历信息</li>\n<li>网站 url<br>域名 Whois 查询–注册人姓名、地址、电话和邮箱 –域名隐私保护<br>溯源案例：通过攻击 IP 历史解析记录&#x2F;域名，对域名注册信息进行溯源分析</li>\n<li>恶意样本分析<br>提取样本特征、用户名、ID、邮箱、C2 服务器等信息–同源分析<br>溯源案例：样本分析过程中，发现攻击者的个人 ID 和 QQ，成功定位到攻击者</li>\n<li>社交账号<br>基于 JSONP 跨域，获取攻击者的主机信息、浏览器信息、真实 IP 及社交信息等<br>利用条件：可以找到相关社交网站的 jsonp 接口泄露敏感信息，相关网站登录未注销</li>\n</ul>\n<h3 id=\"3-攻击者画像\"><a href=\"#3-攻击者画像\" class=\"headerlink\" title=\"3.攻击者画像\"></a>3.攻击者画像</h3><ul>\n<li><p>攻击路径</p>\n<p>攻击目的：拿到权限、窃取数据、获取利益、DDOS 等<br>网络代理：代理 IP、跳板机、C2 服务器等<br>攻击手法：鱼叉式邮件钓鱼、Web渗透、水坑攻击、近源渗透、社会工程等</p>\n</li>\n<li><p>攻击者身份画像</p>\n<p>虚拟身份：ID、昵称、网名<br>真实身份：姓名、物理位置<br>联系方式：手机号、qq&#x2F;微信、邮箱<br>组织情况：单位名称、职位信息</p>\n</li>\n</ul>\n<h3 id=\"技巧\"><a href=\"#技巧\" class=\"headerlink\" title=\"技巧\"></a>技巧</h3><ol>\n<li>域名、ip 反查目标个人信息</li>\n<li>支付宝转账，确定目标姓氏</li>\n<li>淘宝找回密码，确定目标名字</li>\n<li>企业微信手机号查公司名称</li>\n<li>REG007 查注册应用、网站</li>\n<li>程序 PDB 信息泄露</li>\n</ol>\n<h3 id=\"主动防御\"><a href=\"#主动防御\" class=\"headerlink\" title=\"主动防御\"></a>主动防御</h3><p><a href=\"https://www.freebuf.com/articles/web/245585.html\">基于网络欺骗与浏览器指纹的WEB攻击溯源</a></p>\n<ol>\n<li>浏览器指纹技术</li>\n<li>网络欺骗技术，蜜罐蜜网</li>\n</ol>\n<h3 id=\"流量溯源\"><a href=\"#流量溯源\" class=\"headerlink\" title=\"流量溯源\"></a>流量溯源</h3><p>可利用流量工具 wireshark 进行溯源：</p>\n<ol>\n<li>查看 eval、 z0、 shell whoami 等关键字，查看出现次数过多的时候， 需要查看是哪个页面发起的请求，有可能是 webshell</li>\n<li>通过 WireShark 工具快速搜索关键字，定位到异常流量包</li>\n<li>找出异常 IP 和所上传的内容，查看是否为 webshell</li>\n</ol>\n<p>如何定位到攻击IP：</p>\n<ol>\n<li><p>首先通过选择 - 统计 - 对话查看流量的走向情况， 定位可疑的 IP 地址</p>\n</li>\n<li><p>根据定位到的 IP 地址，尝试对上传的 webshell 进行定位</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ip.addr <span class=\"token operator\">==</span> <span class=\"token function\">ip</span> <span class=\"token operator\">&amp;&amp;</span> http matches\n<span class=\"token string\">\"uploadllevallselectlxp_cmdshell\"</span> <span class=\"token operator\">&amp;&amp;</span> http.request.method <span class=\"token operator\">==</span> <span class=\"token string\">\"POST\"</span>\n<span class=\"token number\">12</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>查找到 webshell 后尝试溯源漏洞位置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">http.request.uri contains <span class=\"token string\">\"webshell.php\"</span>\n<span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>定位到最开始 webshell 执行或上传的时候</p>\n</li>\n<li><p>根据最开始的 HTTP 上传包或者其他漏洞特征定位漏洞类型</p>\n</li>\n</ol>\n<h3 id=\"wireshark\"><a href=\"#wireshark\" class=\"headerlink\" title=\"wireshark\"></a>wireshark</h3><p>wireshark 简单的过滤规则</p>\n<ul>\n<li><p>过滤ip：</p>\n<p>过滤源 ip 地址：ip.src1.1.1.1</p>\n<p>目的 ip 地址：ip.dst1.1.1.1</p>\n</li>\n<li><p>过滤端口：</p>\n<p>过滤80端口：tcp.port &#x3D;&#x3D; 80</p>\n<p>源端口：tcp.srcport &#x3D;&#x3D; 80</p>\n<p>目的端：tcp.dstport &#x3D;&#x3D; 80</p>\n</li>\n<li><p>协议过滤：直接输入协议名即可，如 http 协议 http</p>\n</li>\n<li><p>http 模式过滤：过滤 get&#x2F;post 包 httprequest.mothod &#x3D;&#x3D; “GET&#x2F;POST”</p>\n</li>\n</ul>\n<h3 id=\"常用取证工具\"><a href=\"#常用取证工具\" class=\"headerlink\" title=\"常用取证工具\"></a>常用取证工具</h3><p>Wireshark、xplico、 Volatility、 FastlR Collector、Autopsy、 Dumplt、 FTK Imager、Foremost、Scalpel、 Bulk_ exetractor 等</p>\n<h3 id=\"优秀文章\"><a href=\"#优秀文章\" class=\"headerlink\" title=\"优秀文章\"></a>优秀文章</h3><p><a href=\"https://www.anquanke.com/post/id/260888\">域前置溯源方法思考</a></p>\n<h2 id=\"⬆️其他\"><a href=\"#⬆️其他\" class=\"headerlink\" title=\"⬆️其他\"></a>⬆️其他</h2><h3 id=\"对蜜罐的了解\"><a href=\"#对蜜罐的了解\" class=\"headerlink\" title=\"对蜜罐的了解\"></a>对蜜罐的了解</h3>"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}